<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>CodeSolid - Articles</title>
		<description>Test Automation and Software Development Blog</description>
		<link></link>
		<atom:link href="http://codesolid.com//feed.xml" rel="self" type="application/rss+xml" />
		
			
			<item>
				<title>Java REST tutorial</title>
				<description>&lt;p&gt;Create a RESTful API Using Java and Jersey in IntelliJ Idea.&lt;/p&gt;

&lt;div&gt;
&lt;h1&gt;Table of Contents&lt;/h1&gt;
&lt;ul class=&quot;list-group&quot;&gt;
&lt;li class=&quot;list-group-item&quot;&gt;&lt;a href=&quot;#RESTinFiveMinutes&quot;&gt;Take Five - REST in Five Minutes&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;list-group-item&quot;&gt;&lt;a href=&quot;#DumbNoSQL&quot;&gt;Keeping It Simple - No Database Connection Needed&lt;/a&gt;
&lt;li class=&quot;list-group-item&quot;&gt;&lt;a href=&quot;#ProjectSetup&quot;&gt;Setting up the Jersey Project in Maven and IntelliJ Idea&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;list-group-item&quot;&gt;&lt;a href=&quot;#TheRestfulAPI&quot;&gt;Server Side:  the RESTful API&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;list-group-item&quot;&gt;&lt;a href=&quot;#ClientSideTesting&quot;&gt;Testing the Server:  A Jersey REST client&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;list-group-item&quot;&gt;&lt;a href=&quot;#Conclusion&quot;&gt;Putting it All Together&lt;/a&gt;&lt;/li&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;a href=&quot;/downloads/RestfulWebService.zip&quot;&gt;Download the Project (ZIP)&lt;/a&gt;
&lt;/div&gt;

&lt;div style=&quot;margin-top:1em;margin-bottom:-.5em&quot;&gt;
&lt;iframe src=&quot;http://ghbtns.com/github-btn.html?user=codesolid&amp;repo=tutorials&amp;type=fork&amp;size=large&quot;&quot; allowtransparency=&quot;true&quot; frameborder=&quot;0&quot; scrolling=&quot;0&quot; width=&quot;83&quot; height=&quot;40&quot; size=&quot;large&quot;&gt;&lt;/iframe&gt;
&lt;iframe src=&quot;http://ghbtns.com/github-btn.html?user=codesolid&amp;repo=tutorials&amp;type=follow&amp;size=large&quot;&quot; allowtransparency=&quot;true&quot; frameborder=&quot;0&quot; scrolling=&quot;0&quot; width=&quot;200&quot; height=&quot;40&quot; size=&quot;large&quot;&gt;&lt;/iframe&gt;
&lt;iframe src=&quot;http://ghbtns.com/github-btn.html?user=codesolid&amp;repo=tutorials&amp;type=watch&amp;size=large&quot; allowtransparency=&quot;true&quot; frameborder=&quot;0&quot; scrolling=&quot;0&quot; width=&quot;110&quot; height=&quot;40&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2&gt;&lt;a name=&quot;RESTinFiveMinutes&quot; id=&quot;RESTinFiveMinutes&quot;&gt;Take Five -- REST in Five Minutes&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Let&amp;#39;s face it -- now that web Services written in crufty old XML are yesterday&amp;#39;s news, we all want to be hanging out with the cool kids writing RESTful APIs that use JSON.  Best of all, because Java&amp;#39;s &lt;a href=&quot;https://jax-rs-spec.java.net/&quot;&gt;JAX-RS specification&lt;/a&gt; makes RESTful APIs so easy to create and test, hanging out with the cool kids who are writing RESTful APIs turns out to be a good deal easier than hanging out with the cool kids ever was in high school.  &lt;/p&gt;

&lt;p&gt;This tutorial is an easy and 100%-wedgie-free way to create a RESTful API using &lt;a href=&quot;https://jersey.java.net/&quot;&gt;Jersey&lt;/a&gt;, the reference implementation for the JAX-RS specification.  &lt;/p&gt;

&lt;p&gt;REST is an architectural style which favors APIs that exposes resources through standard HTTP verbs.  REST APIs are stateless, i.e., every request should carry sufficient information to execute the request without resorting to a session on the server side, including authentication information. (Note that in the spirit of a &amp;quot;Hello world&amp;quot; tutorial, we won&amp;#39;t get into RESTful authentication in this article.  We may take this up in a later article, but for now we refer you to the &lt;a href=&quot;https://jersey.java.net/documentation/latest/security.html&quot;&gt;Jersey Security&lt;/a&gt; page.)&lt;/p&gt;

&lt;p&gt;Though not strictly speaking a requirement, combinining JSON with REST is a popular choice since it makes RESTful APIs Javascript and mobile-app friendly.&lt;/p&gt;

&lt;p&gt;A resource can be anything, a person, a todo list item, a contact in an address book.  The simplicity of REST is that resources can be read or manipulated using only four HTTP verbs.  RESTful clients submit the following verbs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;POST&lt;/em&gt;&lt;/strong&gt; -- to create a new resource.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;GET&lt;/em&gt;&lt;/strong&gt; -- to read (return) a single resource or a list of resources.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;PUT&lt;/em&gt;&lt;/strong&gt; -- to update an existing resource.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;DELETE&lt;/em&gt;&lt;/strong&gt; -- to delete a resource.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;a name=&quot;DumbNoSQL&quot; id=&quot;DumbNoSQL&quot;&gt;Keeping It Simple - No Database Connection Needed&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Let&amp;#39;s start with some example resource, a task.  A task has an id, a description, and the email address of the person to whom it is assigned.&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;package com.codesolid.tutorials.restfulwebservice;

public class Task {
    private String  description;
    private String  assigned;
    private Integer id;

    public String getDescription() {
        return description;
    }
    public void setDescription(String description) {
        this.description = description;
    }

    public String getAssigned() {
        return assigned;
    }
    public void setAssigned(String assigned) {
        this.assigned = assigned;
    }

    public Integer getId() {
        return id;
    }
    public void setId(Integer id) {
        this.id = id;
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Our API will allow us to perform CRUD (Create, Read, Update, and Delete) operations using our four HTTP verbs, but to keep things simple our entire &amp;quot;model layer&amp;quot; consists of the world&amp;#39;s dumbest in-memory, NoSQL database -- a simple map of keys to values.  We even start out with a test object pre-populated, so we&amp;#39;re not standing on ceremony here.  The important point is to create a class that can act like a database class might act -- returning a list of all the objects, returning a single object by a primary key, etc.&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;package com.codesolid.tutorials.restfulwebservice;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

public class TaskModel {
    HashMap&amp;lt;Integer, Task&amp;gt; taskMap = new HashMap&amp;lt;Integer, Task&amp;gt;();

    public TaskModel() {
        // Make sure we can always see at least one object by setting up a test
        // object
        createTestObject();
    }

    private synchronized void createTestObject(){
        Task td = new Task();
        td.setAssigned(&amp;quot;unluckyintern@example.com&amp;quot;);
        td.setDescription(&amp;quot;Get coffee for developers&amp;quot;);
        td.setId(1);
        insert(td);
    }

    // Store a new task.
    public synchronized Integer insert(Task task) {
        Integer id = taskMap.size() + 1;

        task.setId(id);
        taskMap.put(id, task);
        return id;
    }

    // Delete a task
    public synchronized void delete(Integer taskId) {
        if (taskMap.containsKey(taskId)) {
            taskMap.remove(taskId);
        }
    }

    // Update an existing task
    public synchronized void update(Task task) {
        taskMap.put(task.getId(), task);
    }

    // Get a single task
    public synchronized Task get(int taskId) {
        return taskMap.get(taskId);
    }

    // Get a list of all the tasks in the map
    public synchronized List&amp;lt;Task&amp;gt; getAll() {
        List&amp;lt;Task&amp;gt; tasks = new ArrayList&amp;lt;Task&amp;gt;();
        for(Task t : taskMap.values()) {
            tasks.add(t);
        }
        return tasks;
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2&gt;&lt;a id=&quot;ProjectSetup&quot; name=&quot;ProjectSetup&quot;&gt;Setting up the Jersey Project in Maven and IntelliJ Idea&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;We&amp;#39;ll be using Maven and IntelliJ idea to build and run our project.  Here&amp;#39;s the Maven pom.xml file:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-http'&gt;&amp;lt;project xmlns=&amp;quot;http://maven.apache.org/POM/4.0.0&amp;quot; 
    xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;
    xsi:schemaLocation=&amp;quot;http://maven.apache.org/POM/4.0.0 
    http://maven.apache.org/maven-v4_0_0.xsd&amp;quot;&amp;gt;

    &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;

    &amp;lt;groupId&amp;gt;com.codesolid.tutorials&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;RestfulWebService&amp;lt;/artifactId&amp;gt;
    &amp;lt;packaging&amp;gt;war&amp;lt;/packaging&amp;gt;
    &amp;lt;version&amp;gt;1.0-SNAPSHOT&amp;lt;/version&amp;gt;
    &amp;lt;name&amp;gt;RestfulWebService&amp;lt;/name&amp;gt;

    &amp;lt;properties&amp;gt;
        &amp;lt;jersey.version&amp;gt;2.4.1&amp;lt;/jersey.version&amp;gt;
        &amp;lt;project.build.sourceEncoding&amp;gt;UTF-8&amp;lt;/project.build.sourceEncoding&amp;gt;
    &amp;lt;/properties&amp;gt;

    &amp;lt;build&amp;gt;
        &amp;lt;finalName&amp;gt;RestfulWebService&amp;lt;/finalName&amp;gt;
        &amp;lt;plugins&amp;gt;
            &amp;lt;plugin&amp;gt;
                &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;2.5.1&amp;lt;/version&amp;gt;
                &amp;lt;inherited&amp;gt;true&amp;lt;/inherited&amp;gt;
                &amp;lt;configuration&amp;gt;
                    &amp;lt;source&amp;gt;1.6&amp;lt;/source&amp;gt;
                    &amp;lt;target&amp;gt;1.6&amp;lt;/target&amp;gt;
                &amp;lt;/configuration&amp;gt;
            &amp;lt;/plugin&amp;gt;
            &amp;lt;plugin&amp;gt;
                &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;maven-surefire-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;2.16&amp;lt;/version&amp;gt;
                &amp;lt;configuration&amp;gt;
                    &amp;lt;excludes&amp;gt;
                        &amp;lt;exclude&amp;gt;**/TaskServiceTest.java&amp;lt;/exclude&amp;gt;
                    &amp;lt;/excludes&amp;gt;
                &amp;lt;/configuration&amp;gt;
            &amp;lt;/plugin&amp;gt;
        &amp;lt;/plugins&amp;gt;
    &amp;lt;/build&amp;gt;

    &amp;lt;dependencies&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.glassfish.jersey.core&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;jersey-client&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${jersey.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.glassfish.jersey.core&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;jersey-client&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${jersey.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.glassfish.jersey.containers&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;jersey-container-servlet&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${jersey.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.glassfish.jersey.media&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;jersey-media-moxy&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${jersey.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;com.fasterxml.jackson.core&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;jackson-core&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;2.3.0&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.codehaus.jackson&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;jackson-mapper-asl&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;1.9.13&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;junit&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;junit&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;4.8.1&amp;lt;/version&amp;gt;
            &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;
    &amp;lt;/dependencies&amp;gt;
&amp;lt;/project&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As you can see we&amp;#39;ve taken the strange step of excluding our only unit test from the Maven build.  The reason for this is that our &amp;quot;unit test&amp;quot; is really more of an integraion test because it is a RESTful client that relies on the Tomcat server running the application.&lt;/p&gt;

&lt;p&gt;The procedure for importing the POM file into an Idea project is documented &lt;a href=&quot;http://codesolid.com/a-simple-junit-tutorial-using-maven-and-intellij-idea/#ImportingTheProject&quot;&gt;here&lt;/a&gt;, but since you&amp;#39;ll also be needing configuration to run the web application in Tomcat and to run the client side test, the easiest thing to do at this point is &lt;a href=&quot;/downloads/RestfulWebService.zip&quot;&gt;download the project&lt;/a&gt; and open it in IntelliJ Idea.&lt;/p&gt;

&lt;h2&gt;&lt;a name=&quot;TheRestfulAPI&quot; id=&quot;TheRestfulAPI&quot;&gt;The Restful API&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;To make the Jersey magic happen, we set up a base URL on our web server &amp;quot;/webapi/*&amp;quot;.  Any requests underneath that base pattern will be handled by Jersey&amp;#39;s ServletContainer class, which will know how to handle the RESTful API we&amp;#39;ll develop.  To do this, we the web.xml shown below into src/main/webapp/WEB-INF:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-http'&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;web-app xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;
         xmlns=&amp;quot;http://java.sun.com/xml/ns/javaee&amp;quot; xmlns:web=&amp;quot;http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&amp;quot;
         xsi:schemaLocation=&amp;quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&amp;quot;
         id=&amp;quot;WebApp_ID&amp;quot; version=&amp;quot;2.5&amp;quot;&amp;gt;

    &amp;lt;servlet&amp;gt;
        &amp;lt;servlet-name&amp;gt;Jersey Web Application&amp;lt;/servlet-name&amp;gt;
        &amp;lt;servlet-class&amp;gt;org.glassfish.jersey.servlet.ServletContainer&amp;lt;/servlet-class&amp;gt;
        &amp;lt;init-param&amp;gt;
            &amp;lt;param-name&amp;gt;jersey.config.server.provider.packages&amp;lt;/param-name&amp;gt;
            &amp;lt;param-value&amp;gt;com.codesolid.tutorials.restfulwebservice&amp;lt;/param-value&amp;gt;
        &amp;lt;/init-param&amp;gt;
        &amp;lt;load-on-startup&amp;gt;1&amp;lt;/load-on-startup&amp;gt;
    &amp;lt;/servlet&amp;gt;

    &amp;lt;servlet-mapping&amp;gt;
        &amp;lt;servlet-name&amp;gt;Jersey Web Application&amp;lt;/servlet-name&amp;gt;
        &amp;lt;url-pattern&amp;gt;/webapi/*&amp;lt;/url-pattern&amp;gt;
    &amp;lt;/servlet-mapping&amp;gt;
&amp;lt;/web-app&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The Jersey ServletContainer works in conjunction with annotations 
we&amp;#39;ll import from the package, javax.ws.rs.  It will scan the package we&amp;#39;ve specified, com.codesolid.tutorials.restfulwebservice, for Jersey provider files.For example, our API is defined in the file TaskRestfulService.java, shown below:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;package com.codesolid.tutorials.restfulwebservice;

import javax.ws.rs.*;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

import org.codehaus.jackson.map.ObjectMapper;

import java.net.URI;
import java.util.List;

import javax.ws.rs.core.Response.Status;
import javax.ws.rs.core.UriInfo;

/**
 * This is a Jersey resource.  The RESOURCE_URL we define here, &amp;quot;tasks&amp;quot;,
 * is added on to our base Jersey url_pattern of &amp;quot;/webapi/&amp;quot; (see web.xml).
 *
 * So the starting point for all URLs for this resource will look something
 * like http://localhost:8080/webapi/tasks on a test server, for example,
 * or http://localhost/webapi/tasks in production.
 */
@Path(TaskRestfulService.RESOURCE_URL)
public class TaskRestfulService {

    public static final String RESOURCE_URL = &amp;quot;tasks&amp;quot;;

    static TaskModel model = new TaskModel();

    @GET
    @Produces(MediaType.APPLICATION_JSON)
    public List&amp;lt;Task&amp;gt; getTasks() {
        List&amp;lt;Task&amp;gt; tasks = model.getAll();
        return tasks;
    }

    @GET
    @Produces(MediaType.APPLICATION_JSON)
    @Path(&amp;quot;{id}&amp;quot;)
    public Task getTask(@PathParam(&amp;quot;id&amp;quot;) Integer id) {
        Task task = model.get(id);
        return task;
    }

    /* Handle a POST request, i.e., a request to create a new Task object.
    */
    @POST
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response doPost(Task task, @Context UriInfo uriInfo) {
        return saveNewTask(task, uriInfo);
    }

    // Used by POST and PUT when entity does not yet exist
    private Response saveNewTask(Task task, UriInfo uriInfo) {
        Integer id = model.insert(task);
        URI createdURI = URI.create(uriInfo.getBaseUri().toString() + RESOURCE_URL + &amp;quot;/&amp;quot; + id);
        task.setId(id);
        return Response
                .status(Status.CREATED)
                .contentLocation(createdURI)
                .entity(task)
                .build();
    }

    /* A more verbose version of the same POST handler.  Don't write your code
       this way, it's provided for illustration purposes so you can see what's going
       on behind the scenes.

    @POST
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response doPost(String json, @Context UriInfo uriInfo) {

        ObjectMapper mapper = new ObjectMapper();
        Task task = null;
        try {
            task = mapper.readValue(json, Task.class);
        }
        catch (Exception e) {
            return Response.status(Status.INTERNAL_SERVER_ERROR).build();
        }
        return saveNewTask(task, uriInfo);
    }
    */

    /* PUT to overwrites (updates) a pre-existing task.  Optionally,
       it can store a new task as well.
    */
    @PUT
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    @Path(&amp;quot;{id}&amp;quot;)
    public Response doPut(@PathParam(&amp;quot;id&amp;quot;) Integer id, Task task, @Context UriInfo uriInfo) {

        if (model.isTaskSaved(id)) {
            // In case of a disagreement, the pathParam overrides
            // any id that may be set in the POST body
            if (id &amp;gt; 0) {
                task.setId(id);
            }
            return updateExistingTask(task);
        }
        else {
            return saveNewTask(task, uriInfo);
        }
    }

    private Response updateExistingTask(Task task) {
        model.update(task);
        return Response
                .status(200)
                .entity(task)
                .build();
    }

    @DELETE
    @Path(&amp;quot;{id}&amp;quot;)
    public Response deleteTask(@PathParam(&amp;quot;id&amp;quot;) Integer id) {
        model.delete(id);
        return Response.accepted().build();
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The @Path(&amp;quot;tasks&amp;quot;) annotation marks the class as a resource that Jersey&amp;#39;s ServletContainer will serve for us.  Because we earlier specified /webapi as our root all our resources, the path string here, &amp;quot;tasks&amp;quot; this will get tacked on to the end of that, so the relative URLs for our task resource will look like with &amp;quot;/webapi/tasks&amp;quot;.  &lt;/p&gt;

&lt;p&gt;Inside the class we declare a model object for our &amp;quot;database&amp;quot;, and we see our first RESTful method (below).  There&amp;#39;s no additional path annotation here, just an annotation @GET, so the result is that a simple GET on /webapi/tasks/ returns a list of all the tasks object we have in memory.  &lt;/p&gt;

&lt;p&gt;Because our file imports org.codehaus.jackson.map.ObjectMapper, and because we&amp;#39;ve used the annotation &amp;quot;@Produces(MediaType.APPLICATION_JSON)&amp;quot;, even though we&amp;#39;re returning a list of Task objects from the method, Jersey&amp;#39;s going to be kind enough to use Jackson to &lt;a href=&quot;https://jersey.java.net/documentation/latest/media.html&quot;&gt;automagically convert&lt;/a&gt; your objects to JSON strings.&lt;/p&gt;

&lt;p&gt;Don&amp;#39;t you love it when things just go your way?&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;@GET
@Produces(MediaType.APPLICATION_JSON)
public List&amp;lt;Task&amp;gt; getTasks() {
    List&amp;lt;Task&amp;gt; tasks = model.getAll();
    return tasks;
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Returning a single object from our API via a GET request is also straightforward because it&amp;#39;s almost identical to our first method.  All we need to add is a way to specify an id for the object we want.   We use @Path(&amp;quot;{id}&amp;quot;) to specify a path variable parameter, so our GET URL becomes /webapi/tasks/{id}, where {id} is some primary key for the object.  We then use the expression &amp;quot;@PathParam(&amp;quot;id&amp;quot;) Integer id&amp;quot; to have Jersey read the id into an Integer variable we can pass to the model.&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;@GET
@Produces(MediaType.APPLICATION_JSON)
@Path(&amp;quot;{id}&amp;quot;)
public Task getTask(@PathParam(&amp;quot;id&amp;quot;) Integer id) {
    Task task = model.get(id);
    return task;
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Once again, conversion to JSON will be automatic in this case.&lt;/p&gt;

&lt;p&gt;In our handler to POST a new Task object, to give you an idea of what&amp;#39;s going on behind the scenes, we make our code considerably more verbose by handling the JSON conversion to a Java object ourselves.  &lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;/*
   Handle a POST request, i.e., a request to create a new Task object.
   We're going to Unpack our JSON String manually for illustration purposes.
   A more concise way to do this will be shown in the PUT handler, below
 */
@POST
@Consumes(MediaType.APPLICATION_JSON)
@Produces(MediaType.APPLICATION_JSON)
public Response doPost(String json, @Context UriInfo uriInfo) {
    ObjectMapper mapper = new ObjectMapper();
    Task task = null;
    try {
        task = mapper.readValue(json, Task.class);
    }
    catch (Exception e) {
        return Response.status(Status.INTERNAL_SERVER_ERROR).build();
    }
    return saveNewDTO(task, uriInfo);
}

// Used by POST and PUT when entity does not yet exist
private Response saveNewDTO(Task task, UriInfo uriInfo) {
    Integer id = model.insert(task);
    URI createdURI = URI.create(uriInfo.getBaseUri().toString() + RESOURCE_URL + &amp;quot;/&amp;quot; + id);
    task.setId(id);
    return Response
            .status(Status.CREATED)
            .contentLocation(createdURI)
            .entity(task)
            .build();
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Our verbose POST method is equivalent to the much more eye-friendly:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;@POST
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response doPost(Task task, @Context UriInfo uriInfo) {
        return saveNewTask(task, uriInfo);
    }&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Strictly speaking, PUT is used to update a new task.  We read the id
from the URL and ensure that that&amp;#39;s the id of the task we&amp;#39;re updating.
We don&amp;#39;t return the new task. According to the &lt;a href=&quot;http://www.w3.org/Protocols/rfc2616/rfc2616.html&quot;&gt;HTTP Protocol Standard&lt;/a&gt;, however, PUT can also be used
to store a new resource.&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;/* PUT to overwrites (updates) a pre-existing task.  Optionally,
       it can store a new task as well. */
    @PUT
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    @Path(&amp;quot;{id}&amp;quot;)
    public Response doPut(@PathParam(&amp;quot;id&amp;quot;) Integer id, Task task, @Context UriInfo uriInfo) {

        if (model.isTaskSaved(id)) {
            // In case of a disagreement, the pathParam overrides
            // any id that may be set in the POST body
            if (id &amp;gt; 0) {
                task.setId(id);
            }
            return updateExistingTask(task);
        }
        else {
            return saveNewTask(task, uriInfo);
        }
    }

    private Response updateExistingTask(Task task) {
        model.update(task);
        return Response
                .status(200)
                .entity(task)
                .build();
    }&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And of course, we need a way to bid our objects a fond (or not) farewell.&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;@DELETE
@Path(&amp;quot;{id}&amp;quot;)
public Response deleteTask(@PathParam(&amp;quot;id&amp;quot;) Integer id) {
    model.delete(id);
    return Response.accepted().build();
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2&gt;&lt;a name=&quot;ClientSideTesting&quot; id=&quot;ClientSideTesting&quot;&gt;Testing the Server:  A Jersey REST client&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;In addition to being a fine API for easily setting up a RESTful API on the Server side, Jersey provides excellent services that you can use to create a RESTful client.  In the next listing, we show how to construct an integration
test to exercise our client.  Each of our methods tests a specific part of the API, with the HTTP verb in caps, for example &amp;quot;canPOSTaNewTask&amp;quot; or &amp;quot;canGETaTaskList&amp;quot;.  We use the Jackson ObjectMapper to convert our entities 
to and from the JSON our REST API consumes.  &lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;package com.codesolid.tutorials.restfulwebservice;

import org.codehaus.jackson.map.ObjectMapper;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;

import javax.ws.rs.client.*;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

import static org.junit.Assert.*;

/** 
 * Note that this is an Integration Test.  It relies on having the Restful Web Service running
 * in Tomcat or another container.
 * @see TaskRestfulService  
 */
public class TaskServiceTest {

    public static Client client = null;

    @BeforeClass
    public static void Before() {
        TaskServiceTest.client = ClientBuilder.newClient();
    }

    @AfterClass
    public static void After() {
        client.close();
    }

    @Test
    public void canPOSTaNewTask() throws Exception {

        WebTarget target = client.target(&amp;quot;http://localhost:8080/webapi&amp;quot;).path(&amp;quot;tasks&amp;quot;);
        Task task = new Task();
        task.setAssigned(&amp;quot;john@particlewave.com&amp;quot;);
        task.setDescription(&amp;quot;Fix post test&amp;quot;);

        ObjectMapper mapper = new ObjectMapper();
        String json = mapper.writeValueAsString(task);
        Response rs = target.request().post(Entity.entity(json, MediaType.APPLICATION_JSON));
        Task taskResponse = rs.readEntity(Task.class);
        assertNotNull(taskResponse);
        assertNotNull(taskResponse.getId());
        assertEquals(taskResponse.getAssigned(), task.getAssigned());
    }

    // In order not to rely on the fact that our toy model
    // creates a test object for us, we create one here and then update it.
    @Test
    public void canPUTanUpdatedTask() throws Exception {

        String original = &amp;quot;Update me -- don't leave me in this awful, just-created state!&amp;quot;;
        String updated = &amp;quot;Freshly updated and open for business.  Thank you so much!&amp;quot;;

        // Create the original object
        Client client = ClientBuilder.newClient();
        WebTarget target = client.target(&amp;quot;http://localhost:8080/webapi&amp;quot;).path(&amp;quot;tasks&amp;quot;);
        Task task = new Task();
        task.setAssigned(&amp;quot;bogus@example.com&amp;quot;);
        task.setDescription(original);
        Response rs = target.request().post(Entity.entity(task, MediaType.APPLICATION_JSON));
        Task taskResponse = rs.readEntity(Task.class);
        assertNotNull(taskResponse);

        // Now update it, and PUT the updated version
        taskResponse.setDescription(updated);
        target = client.target(&amp;quot;http://localhost:8080/webapi&amp;quot;).path(&amp;quot;tasks/&amp;quot; + taskResponse.getId());
        rs = target.request().put(Entity.entity(taskResponse, MediaType.APPLICATION_JSON));
        Task taskResponseUpdated = rs.readEntity(Task.class);

        // And test...
        assertNotNull(taskResponseUpdated);
        assertEquals(taskResponseUpdated.getDescription(), updated);
    }

    @Test
    public void canGETaTaskList() throws Exception {

        WebTarget target = client.target(&amp;quot;http://localhost:8080/webapi&amp;quot;);
        WebTarget resource = target.path(&amp;quot;/tasks&amp;quot;);
        Invocation.Builder invocationBuilder =
                resource.request(MediaType.APPLICATION_JSON);
        Response response = invocationBuilder.get();
        String tasks = response.readEntity(String.class);
        assertNotNull(tasks);
        ObjectMapper mapper = new ObjectMapper();
        Task[] taskArray = mapper.readValue(tasks, Task[].class);
        assertNotNull(taskArray);
        assertTrue(taskArray.length &amp;gt;= 1);
    }

    @Test
    public void canGETaSingleTask() {

        WebTarget target = client.target(&amp;quot;http://localhost:8080/webapi&amp;quot;);
        WebTarget resource = target.path(&amp;quot;/tasks/1&amp;quot;);
        Invocation.Builder invocationBuilder =
                resource.request(MediaType.APPLICATION_JSON);
        Response response = invocationBuilder.get();
        Task task = response.readEntity(Task.class);
        assertNotNull(task);
        assertNotNull(task.getId());
        assertTrue(task.getId() &amp;gt;= 1);
    }

    @Test
    public void canDELETEaTask() throws Exception {

        // Create a task to have one we can safely delete
        WebTarget target = client.target(&amp;quot;http://localhost:8080/webapi&amp;quot;).path(&amp;quot;tasks&amp;quot;);
        Task task = new Task();
        task.setAssigned(&amp;quot;example@test.com&amp;quot;);
        task.setDescription(&amp;quot;I can't go on like this.  Please delete me.&amp;quot;);
        Response rs = target.request().post(Entity.entity(task, MediaType.APPLICATION_JSON));
        Task taskResponse = rs.readEntity(Task.class);
        assertNotNull(taskResponse);
        assertNotNull(taskResponse.getId());
        assertTrue(taskResponse.getId() &amp;gt;= 1);

        // Set up a URL based on our returned object
        target = client.target(&amp;quot;http://localhost:8080/webapi&amp;quot;).path(&amp;quot;tasks/&amp;quot; + taskResponse.getId());

        // Test that it's saved
        taskResponse = null;
        rs = target.request().get();
        taskResponse = rs.readEntity(Task.class);
        assertNotNull(taskResponse);

        // Goodbye!
        target.request().delete();

        // Test that it's really gone.
        taskResponse = null;
        rs = target.request().get();
        taskResponse = rs.readEntity(Task.class);
        assertNull(taskResponse);
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2&gt;&lt;a name=&quot;Conclusion&quot; id=&quot;Conclusion&quot;&gt;Putting it All Together&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;We&amp;#39;ve bundled it all up for you in a &lt;a href=&quot;/downloads/RestfulWebService.zip&quot;&gt;ZIP file download&lt;/a&gt; that has everything you need to get started.  (If you prefer, you can &lt;a href=&quot;https://github.com/CodeSolid/tutorials/tree/master/RestfulWebService&quot;&gt;browse the code&lt;/a&gt; on Github.)  &lt;/p&gt;

&lt;p&gt;In the IntelliJ project, you&amp;#39;ll need to re-point your Tomcat instance to a Tomcat instance running on your local machine (Run / Edit Configurations / Tomcat Server / Tomcat7 then press the &amp;quot;Configure button&amp;quot; to set up your Tomcat instance).  In the Run dropdown, select Tomcat first and run that, and once
Tomcat runs up your integration tests should all be green.  &lt;/p&gt;

&lt;p&gt;If you enjoyed this tutorial, we&amp;#39;ll happily accept Github love via the links below. (Shameless, I know, but thanks!)&lt;/p&gt;

&lt;div style=&quot;margin-top:1em;margin-bottom:-.5em&quot;&gt;
&lt;iframe src=&quot;http://ghbtns.com/github-btn.html?user=codesolid&amp;repo=tutorials&amp;type=fork&amp;size=large&quot;&quot; allowtransparency=&quot;true&quot; frameborder=&quot;0&quot; scrolling=&quot;0&quot; width=&quot;83&quot; height=&quot;40&quot; size=&quot;large&quot;&gt;&lt;/iframe&gt;
&lt;iframe src=&quot;http://ghbtns.com/github-btn.html?user=codesolid&amp;repo=tutorials&amp;type=follow&amp;size=large&quot;&quot; allowtransparency=&quot;true&quot; frameborder=&quot;0&quot; scrolling=&quot;0&quot; width=&quot;200&quot; height=&quot;40&quot; size=&quot;large&quot;&gt;&lt;/iframe&gt;
&lt;iframe src=&quot;http://ghbtns.com/github-btn.html?user=codesolid&amp;repo=tutorials&amp;type=watch&amp;size=large&quot; allowtransparency=&quot;true&quot; frameborder=&quot;0&quot; scrolling=&quot;0&quot; width=&quot;110&quot; height=&quot;40&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
				<pubDate>Sun, 17 Aug 2014 00:00:00 -0700</pubDate>
				<link>/a-simple-jersey-rest-tutorial</link>
				<guid isPermaLink="true">/a-simple-jersey-rest-tutorial</guid>
			</item>
			
		
			
			<item>
				<title>Using Gradle to Build Java Selenium Projects</title>
				<description>&lt;p&gt;In a recent article, we showed you how to start working with &lt;a href=&quot;http://localhost:4000/selenium-and-intellij-idea-part-two/&quot;&gt;Selenium in IntelliJ Idea&lt;/a&gt;.  As we&amp;#39;ve often done in the past, we started our Idea project with a Maven build script (a pom file).  Well, all that worked well enough, but as Jenniffer was beginning to make some
really good progress on her &lt;a href=&quot;https://github.com/JennifferLockwood/GoalboostTesting&quot;&gt;Goalboost Testing&lt;/a&gt; project, I wanted to help her with a tool that would enable
custom scripting of tasks such as generating HTML from Markdown for the test plan, while still allowing us to build and run Selenium tests in Java in a straightforward way as Maven does.  &lt;/p&gt;

&lt;p&gt;In recent years there&amp;#39;s been a lot of buzz around Gradle, the tool that lets you enjoy the easy dependency management that made Maven so popular while still having the flexibility to script whatever custom tasks you need to create.  So being the language and tools junkie that I am, of course I had to try it out.  My first task was to 
allow Jenniffer to write the Goalboost test plan in Markdown and generate the HTML as needed so she could preview it without pushing to Github.  Using Andres Almiray&amp;#39;s &lt;a href=&quot;https://github.com/aalmiray/markdown-gradle-plugin&quot;&gt;markdown-gradle-plugin&lt;/a&gt;, this turned out to be pretty easy to do:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-groovy'&gt;buildscript {
    repositories {
        jcenter()
         maven {
         url  'http://dl.bintray.com/content/aalmiray/kordamp'
        }        
    }
    dependencies {
        classpath 'org.kordamp:markdown-gradle-plugin:0.1'
    }
}
apply plugin: 'markdown'

markdownToHtml.sourceDir = file(&amp;quot;doc/md&amp;quot;)
markdownToHtml.outputDir = file(&amp;quot;doc/html&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now that we had a way to &amp;quot;build&amp;quot; the test plan as it was being written, we also wanted to use the same tool to build and run the Selenium tests that she&amp;#39;d be developing against the plan.  So what was needed was a Gradle build script that build a Java Selenium project the same way my earlier &lt;a href=&quot;https://github.com/CodeSolid/tutorials/blob/master/SeleniumStarter/pom.xml&quot;&gt;Maven build script&lt;/a&gt; did.  Taking as a starting point Juan Cavallotti&amp;#39;s fine article on &lt;a href=&quot;http://jcavallotti.blogspot.com/2013/12/migration-of-maven-based-project-to.html&quot;&gt;converting a Maven project to Gradle&lt;/a&gt;, it turned out this was really to do.  The first version was done in about twenty minutes, but here&amp;#39;s a version with a bit more polish:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-groovy'&gt;/*
    build.gradle file for building and running Selenium tests
    Example uses:
    gradle clean test       - Rebuild and run tests
    gradle test             - Run tests only
    gradle cleanTest test   - Force tests to be run even if up to date
    gradle viewResults      - Displays the report of test results (Windows only)
*/

// Support for building and testing
apply plugin: 'java'

// (Optional) configure name and version for jar
jar {
    version  '1.0'
    baseName 'SeleniumStarter'
    extension '.jar'
}

// Cf. Maven properties
ext.junitVersion = '4.11'
ext.seleniumVersion = '2.41.0'


// Cf. Maven &amp;lt;dependencies&amp;gt;
dependencies {
    compile group: 'junit', name: 'junit', version: junitVersion
    compile group: 'org.seleniumhq.selenium', name: 'selenium-firefox-driver', version:seleniumVersion
    compile group: 'org.seleniumhq.selenium', name: 'selenium-chrome-driver', version:seleniumVersion
    compile group: 'org.seleniumhq.selenium', name: 'selenium-api', version:seleniumVersion
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version:seleniumVersion
}

// A custom task to show report on tests that have run
task viewResults(dependsOn: ['test'] , type:Exec) {
        workingDir './build/reports/tests'      
        commandLine 'cmd', '/c', 'start index.html' 
}
 
// Resolve Maven dependencies as Maven does
repositories {
    mavenCentral()
    mavenLocal() 
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Once you have Gradle installed (if you don&amp;#39;t, &lt;a href=&quot;http://www.gradle.org/downloads&quot;&gt;download it here&lt;/a&gt;), importing the 
Gradle project into IntelliJ Idea works pretty much the same way as importing a Maven project.  That is to say, in Idea you 
use File / Import Project, select the directory where the build.gradle file lives, then click &amp;quot;Import project from external model&amp;quot; 
and select &amp;quot;Gradle&amp;quot; as the model type.&lt;/p&gt;

&lt;p&gt;Unfortunately, Idea&amp;#39;s support for Gradle is not yet as polished as it is for Maven, but it&amp;#39;s still possible to use Gradle to
import the dependencies you need to build from within Idea as well.  To do this, go to Idea / View / Tools / Gradle to open the Gradle
tool window, as shown below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/gradle/GradleToolsMenu.png&quot; alt=&quot;&amp;quot;Gradle Tools Menu&amp;quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;This will bring up the Gradle Tool Window, shown below.  In that window, the button with the circular arrows right under &amp;quot;Gradle Tasks&amp;quot;
is the &amp;quot;Refresh all Gradle projects&amp;quot; button.  Clicking this will allow you to build inside of IntelliJ Idea as you normally would,
or you can also select Gradle tasks to run from within this window as well.  I&amp;#39;ve run the test task and the jar task already, so this
shows up in the Gradle Tool Window under &amp;quot;Recent tasks&amp;quot;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/gradle/GradleToolWindow.png&quot; alt=&quot;&amp;quot;Gradle Tool Window&amp;quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://github.com/CodeSolid/tutorials/tree/master/SeleniumStarterGradle&quot;&gt;SeleniumStarterGradle&lt;/a&gt; directory of the CodeSolid tutorials
contains a complete Idea project with a Java Selenium test to get you started.  You may need to go into the project settings
to point your gradle configuration to your local Gradle install (File / Settings / Gradle).&lt;/p&gt;
</description>
				<pubDate>Sun, 29 Jun 2014 00:00:00 -0700</pubDate>
				<link>/using-gradle-to-build-java-selenium-projects</link>
				<guid isPermaLink="true">/using-gradle-to-build-java-selenium-projects</guid>
			</item>
			
		
			
			<item>
				<title>Getting Started in Selenium and Java in IntelliJ Idea, Part 2</title>
				<description>&lt;p&gt;Read &lt;a href=&quot;/getting-started-with-selenium-in-intellij-idea/&quot;&gt;part one&lt;/a&gt;.
&lt;a href=&quot;https://github.com/CodeSolid/tutorials/tree/master/SeleniumStarter&quot;&gt;Get the source&lt;/a&gt;&lt;/p&gt;

&lt;div id=&quot;table_of_contents&quot;&gt;
&lt;h1&gt;Table of Contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#Introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#SimpleSeleniumTestcase&quot;&gt;Set up a Selenium Test Project Using Maven and IntelliJ Idea&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#ExportingSeleniumToJava&quot;&gt;Exporting Selenium IDE Tests to Java&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;h2&gt;&lt;a id=&quot;Introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;In &lt;a href=&quot;/getting-started-with-selenium-in-intellij-idea/&quot;&gt;part one&lt;/a&gt; of this article, we looked at how to use the Selenium IDE to record browser actions.
We then used Firebug to locate a page element, and added a simple assertion to verify that a page element had the text we expected.&lt;/p&gt;

&lt;p&gt;In part two of the series, we want to look at how to begin to work with out Selenium Scripts using Java.  We&amp;#39;ll explore how easy it is to do a simple
export to a JUnit test, and we&amp;#39;ll get you the Maven and IntelliJ project files you&amp;#39;ll need to get started.&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;SimpleSeleniumTestcase&quot;&gt;Set up a Selenium Test Project Using Maven and IntelliJ Idea&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;When setting up new projects in IntelliJ Idea, I almost always start with a Maven POM file first and then import it, since I find that pasting Maven
dependencies is the simplest way to get the jars I need. If you prefer to skip past this section, all the source including POM file and the finished project for this article are in the &lt;a href=&quot;https://github.com/CodeSolid/tutorials&quot;&gt;CodeSolid Tutorials repository&lt;/a&gt; on Github, in the &lt;a href=&quot;https://github.com/CodeSolid/tutorials/tree/master/SeleniumStarter&quot;&gt;Selenium Starter&lt;/a&gt; project.  However, the steps are pretty simple:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Copy the pom file (see below) into a directory.&lt;/li&gt;
&lt;/ul&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-http'&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;project xmlns=&amp;quot;http://maven.apache.org/POM/4.0.0&amp;quot;
         xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;
         xsi:schemaLocation=&amp;quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;quot;&amp;gt;
    &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;
    &amp;lt;groupId&amp;gt;com.codesolid.tutorials&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;SeleniumStarter&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;1.0&amp;lt;/version&amp;gt;

    &amp;lt;properties&amp;gt;
        &amp;lt;junit.version&amp;gt;4.11&amp;lt;/junit.version&amp;gt;
        &amp;lt;selenium.version&amp;gt;2.41.0&amp;lt;/selenium.version&amp;gt;
    &amp;lt;/properties&amp;gt;

    &amp;lt;dependencies&amp;gt;
        &amp;lt;!-- JUnit --&amp;gt;         
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;junit&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;junit&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${junit.version}&amp;lt;/version&amp;gt;
            &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;!-- Selenium --&amp;gt;

        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.seleniumhq.selenium&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;selenium-firefox-driver&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${selenium.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.seleniumhq.selenium&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;selenium-support&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${selenium.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.seleniumhq.selenium&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;selenium-java&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${selenium.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;

    &amp;lt;/dependencies&amp;gt;

&amp;lt;/project&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Set up a place for files to go.  In the same directory where you copied your pom file, run the following at the command prompt: &lt;em&gt;mkdir src\test\java\com\codesolid\tutorials\seleniumstarter&lt;/em&gt;&amp;quot; The &amp;quot;src\test\java&amp;quot; portion is a maven standard directory layout for test files and should
be kept as is.  In contrast, the &amp;quot;com\codesolid\tutorials\seleniumstarter&amp;quot; portion of that path will be our package structure, and you can modify 
it to fit your project&amp;#39;s package structure as needed.&lt;/li&gt;
&lt;li&gt;In IntelliJ Idea, &amp;quot;File / Import Project&amp;quot;, then point to your directory.  When prompted in the Import Project dialog, make sure &amp;quot;Import project from external
model&amp;quot; and &amp;quot;Maven&amp;quot; are selected.&lt;/li&gt;
&lt;li&gt;In the next Import Project dialog (below), I generally leave the defaults with the exception of &amp;quot;Import Maven Projects Automatically&amp;quot;.  This helps to make sure that any changes you make to the POM are also reflected in your IntelliJ idea.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/20140606/ImportMaven.png&quot; alt=&quot;&amp;quot;Import Maven Project&amp;quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;The rest of the dialogs are pretty straightforward.  I generally skip importing any modules if prompted for one, choose my favorite JDK when prompted,
and provide a name for the project that matches the name I&amp;#39;m prompted for in the POM.&lt;/p&gt;

&lt;p&gt;If you need more details on working with Idea and Maven projects, check out the IntelliJ documentation on &lt;a href=&quot;http://wiki.jetbrains.net/intellij/Creating_and_importing_Maven_projects&quot;&gt;working with Maven&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;ExportingSeleniumToJava&quot;&gt;Exporting Selenium to Java&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Once you have a project set up to house your tests, exporting Selenium tests to a JUnit test case is generally quite straightforward. To export a single test to JUnit, simply select &amp;quot;Export Test Case As&amp;quot;, and select the type of test case you want to create.  Let&amp;#39;s select Java / JUnit 4 / WebDriver, as shown here:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/20140606/ExportJUnitTestcase.png&quot; alt=&quot;&amp;quot;Export Java JUnit4 WebDriver Test&amp;quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;What you&amp;#39;ll want to do is export it to the package directory you created above, in other words, the directory where you copied the pom file plus  src\test\java\com\codesolid\tutorials\seleniumstarter and give it a name, such as FirstSeleniumTest.java.  The final step before running it in Idea is to make sure
your package name is set up correctly -- chances are Selenium exported something like &amp;quot;package com.example&amp;quot;.  Find the package directive at the top of the file
and change it to read:  &lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;package com.codesolid.tutorials.seleniumstarter;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;At this point you should be able to right-click on the file in IntelliJ Idea and click on &amp;quot;Debug FirstSeleniumTest&amp;quot;.  You should see Firefox launch and your test should pass.  If you run into trouble, try grabbing the project from &lt;a href=&quot;https://github.com/CodeSolid/tutorials/tree/master/SeleniumStarter&quot;&gt;Github&lt;/a&gt;.  Enjoy!&lt;/p&gt;
</description>
				<pubDate>Mon, 16 Jun 2014 00:00:00 -0700</pubDate>
				<link>/selenium-and-intellij-idea-part-two</link>
				<guid isPermaLink="true">/selenium-and-intellij-idea-part-two</guid>
			</item>
			
		
			
			<item>
				<title>Getting Started with Selenium in IntelliJ Idea - Part I</title>
				<description>&lt;div id=&quot;table_of_contents&quot;&gt;
&lt;h1&gt;Table of Contents&lt;/h1&gt;
&lt;ul &gt;
&lt;li&gt;&lt;a href=&quot;#Introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Setup&quot;&gt;Fill Your Toolbox -- Setting Up Firebug and Selenium IDE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#SimpleSeleniumTestcase&quot;&gt;A Simple Selenium Test Case&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#LocatingWebElements&quot;&gt;Locating Web Elements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#VerifyingExpectedResults&quot;&gt;Verifying Expected Results&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#LastSteps&quot;&gt;Final Steps and What's Ahead&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/selenium-and-intellij-idea-part-two/&quot;&gt;Read Part Two of the Article&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;h2&gt;&lt;a id=&quot;Introduction&quot; name=&quot;Introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Selenium is a one of the most popular test automation tools.  Selenium lets you write automated tests to drive a variety of popular browsers including Firefox, Chrome, and Internet Explorer. Using Selenium IDE, you can record browser sessions and export the recorded tests to test cases written in a variety of languages.  These languages include Java, Python, Ruby, and .NET. &lt;/p&gt;

&lt;p&gt;In this first part of our Selenium and IntelliJ Idea tutorial, we&amp;#39;ll cover working with the IDE itself in Firefox.  We&amp;#39;ll learn how to record a web session, and
how to locate and test web elements on the page.  In part two of the article, we&amp;#39;ll learn how to take our Selenium tests to the next level by turning them into 
JUnit tests running in IntelliJ Idea.&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;Setup&quot; name=&quot;Setup&quot;&gt;Setting up Firebug and Selenium IDE&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;The Selenium IDE is an extension for Firefox that should serve as your starting point for your Selenium work.  So of course, you&amp;#39;ll need Firefox installed.&lt;/p&gt;

&lt;p&gt;Before getting Selenium, however, there&amp;#39;s also one more tool we&amp;#39;ll need if you don&amp;#39;t already have it, Firebug.  Among other things, Firebug makes it easy to examine page elements, something which we&amp;#39;ll be doing a lot as we dig into Selenium.  &lt;a href=&quot;https://getfirebug.com/&quot;&gt;Download Firebug&lt;/a&gt; from this site and install it.  Once it&amp;#39;s installed, you should see a little bug on the Firefox menu bar, click it to open Firebug.  We&amp;#39;ll be using it in a few minutes.&lt;/p&gt;

&lt;p&gt;Now we&amp;#39;re ready to get the Selenium IDE from the &lt;a href=&quot;http://docs.seleniumhq.org/download/&quot;&gt;Selenium Download Page&lt;/a&gt;.  Selenium IDE will appear as an option on the tools menu.  In recent versions, you can also access it from the right hand menu button as shown below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/20140606/FirefoxMenuButtonSelenium.png&quot; alt=&quot;&amp;quot;Selenium Firefox menu button&amp;quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;I generally open Selenium in a sidebar, but opening as a Popup is the more common option that&amp;#39;s available in all environments.  Shown below is how that looks.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/20140606/SeleniumScreenShot1.png&quot; alt=&quot;&amp;quot;Selenium IDE Pop Up&amp;quot;&quot;&gt;&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;SimpleSeleniumTestcase&quot; name=&quot;SimpleSeleniumTestCase&quot;&gt;A Simple Selenium Test Case&lt;/a&gt;&lt;/h2&gt; 

&lt;p&gt;Let&amp;#39;s dive right in to Selenium with a simple test case.  Make sure that the red recording button in the upper right is &amp;quot;On&amp;quot; as shown in the image above.  You can toggle it if you&amp;#39;re not sure -- the &amp;quot;On&amp;quot; state is when it looks pushed in.  Next, in the Selenium window&amp;#39;s address bar, where it says &amp;quot;Base URL&amp;quot;, let&amp;#39;s enter:  https://github.com/codesolid . One thing to notice at this point is that Selenium will not automatically go to the base URL.  You&amp;#39;ll need to navigate it in the firefox address bar as well.  This is because really what we&amp;#39;re entering here is the URL of the &amp;quot;Web Application Under Test&amp;quot; -- in other words, we&amp;#39;re telling Selenium where to record our activity.&lt;/p&gt;

&lt;p&gt;The fun begins when you navigate a page under that base URL.  On the CodeSolid github page, there should be a link to a &amp;quot;tutorials&amp;quot; project.  Let&amp;#39;s click on that link in Firefox.&lt;/p&gt;

&lt;p&gt;Firefox navigates to the link, but if you&amp;#39;ll notice, the Selenium IDE has now recorded your activity.  At this point the Selenium IDE window should look something like this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/20140606/SeleniumScreenShot2.png&quot; alt=&quot;&amp;quot;Selenium Test Recording&amp;quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;If you toggle the recording button to the &amp;quot;Off state&amp;quot;, you should be able to prove you&amp;#39;ve recorded your session by playing it back.  First, in the window that&amp;#39;s viewing the CodeSolid tutorials, navigate to somewhere on the web that&amp;#39;s not as popular as the CodeSolid tutorials, like Google for example.  Now, back in the Selenium IDE window, underneath the Base URL bar, you should see two green play buttons.  Click either of these (at this point it doesn&amp;#39;t matter which).  You should see Firefox navigate back to the CodeSolid Github account and click through to the tutorials page.&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;LocatingWebElements&quot; name=&quot;LocatingWebElements&quot;&gt;Locating Web Elements&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;As interesting as it is, a recorded web session is not yet a test.  It has the first part -- a description in code of the steps that take place -- but we haven&amp;#39;t yet added a way to compare some expected value to an actual value.  Let&amp;#39;s add a simple check to see if some element on the page contains the text we expect it to.  On the CodeSolid tutorials page, if you scroll down past the links to the tutorials, there&amp;#39;s a readme file.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/20140606/CodeSolidReadme.png&quot; alt=&quot;&amp;quot;CodeSolid Readme&amp;quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Github displays this in an H1 tag, but to make sure we&amp;#39;re finding the right H1 tag, let&amp;#39;s open firebug using the firebug button:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/20140606/FirebugButton.png&quot; alt=&quot;&amp;quot;Firebug&amp;quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;This opens up the firebug window, as you can see below.  &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/20140606/FirebugWindow.png&quot; alt=&quot;&amp;quot;Firebug&amp;quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve added an arrow to point out the inspect button.  With the HTML tab selected as shown in the picture, if you click the inspect button, you&amp;#39;ll notice if you hover over any element on the page in the browser window, you&amp;#39;ll seee the HTML for that element displaying in the HTML window.  You can then select that element by clicking on it.  Let&amp;#39;s go ahead and click first on the inspect button, then in the main browser window, click the header, &amp;quot;Welcome to the CodeSolid Tutorials&amp;quot;, that we scrolled to earlier.  This selects the html for the page element we want to verify.  There are a variety of ways to do this, but one of the most versatile is to use a CSS selector.  With the element we want still selected, if you right click on the html displayed in the firebug window you should see a menu that looks something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/20140606/FirebugPopupWithCSSPath.png&quot; alt=&quot;&amp;quot;Using a CSS Path Selector&amp;quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Click on &amp;quot;Copy CSS Path&amp;quot;.  At this point the CSS path for the element is copied to the clipboard.  If you were to paste it into a text editor, youd see something like:&lt;/p&gt;

&lt;div&gt;
&quot;html body.logged_out.env-production.windows.vis-public div.wrapper div.site div.container div.repository-with-sidebar.repo-container.new-discussion-timeline.js-new-discussion-timeline.with-full-navigation div#js-repo-pjax-container.repository-content.context-loader-container div#readme.clearfix.announce.instapaper_body.md article.markdown-body.entry-content h1&quot;
&lt;/div&gt;

&lt;p&gt;This represents the entire CSS path to the element.  As you work with Selenium, you may find that your tests are less brittle if you only consider what elements you need at the &lt;b&gt;end&lt;/b&gt; of the path -- that way other parts of the page can change and your tests will still work.  For example, in this case, using the section &amp;quot;article.markdown-body.entry-content h1&amp;quot; identifies the element just fine.  For now, however, let&amp;#39;s just take the whole path and see how to get Selenium to use it.&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;VerifyingExpectedResults&quot; name=&quot;VerifyingExpectedResults&quot;&gt;Verifying Expected Results&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;With the CSS for our web element copiled to the clipboard, we can now turn our recording of a Firefox session into a real test.  If you look at the Selenium IDE window,
you should see on the right hand side of it two tabs labeled &amp;quot;Table&amp;quot; and &amp;quot;Source&amp;quot;. The Table tab shows the Selenium commands that will run if you run the test.  So far all it has are recorded commands -- now we&amp;#39;re going to add a command ourselves.  If you right click just underneath the command that says &amp;quot;clickAndWait   link=tutorials&amp;quot;, you&amp;#39;ll can then click &amp;quot;Insert New Command&amp;quot;.&lt;/p&gt;

&lt;p&gt;Note that underneath the Table itself there are three entry fields (that are highlighted in the image below):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/20140606/SeleniumTableTab1.png&quot; alt=&quot;&amp;quot;Selenium Table Tab&amp;quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;These three fields correspond to the three columns of the table, Command, Target, and Value.  You select or type Selenium commands in the first field, so in that field enter &amp;quot;assertText&amp;quot;.  In the second field, start by typing &amp;quot;css=&amp;quot;, then just after the &amp;quot;css=&amp;quot;, copy the CSS path that we copied from Firebug earlier.  This creates a &amp;quot;locator&amp;quot; expression that will get passed to the assertText function.  You can test that you did this step successfully by clicking on the Find button -- if your locator is working properly you should see the &amp;quot;Welcome to the CodeSolid Tutorials&amp;quot; header flash yellow briefly.  Finally, in the third field, simply type &amp;quot;Welcome to the CodeSolid Tutorials&amp;quot;  Note that for all three fields you should type the text without the quotes.&lt;/p&gt;

&lt;p&gt;At this point, if you navigate to another page like Google and re-run your test in the Selenium IDE (clicking one the green play arrows), you should see the test navigate to the tutorials page, and you should see a green bar on the assertText command you entered.  The test passed!&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;LastSteps&quot; name=&quot;LastSteps&quot;&gt;Final Steps and What's Ahead&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;In our next tutorial, we&amp;#39;ll get into how to use what we&amp;#39;ve created as the basis for a JUnit test suite using IntelliJ idea.  But before moving on, as a final step let&amp;#39;s save our test.  In the Selenium IDE, select File / Save Test Case to save your file.  Notice anything special about the file format that Selenium used to save the test file?  It&amp;#39;s just regular HTML (well, OK, it&amp;#39;s XHTML), with the name of the test in the first row and the Selenium &amp;quot;script&amp;quot; in the remaining table rows.  The
base URL is cleverly stuffed away in the head tag.  &lt;/p&gt;

&lt;p&gt;A tool for testing HTML that stores files as HTML?  Don&amp;#39;t worry -- the universe is not folding back on itself.  Selenium is just cool!&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-html'&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;!DOCTYPE html PUBLIC &amp;quot;-//W3C//DTD XHTML 1.0 Strict//EN&amp;quot; &amp;quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&amp;quot;&amp;gt;
&amp;lt;html xmlns=&amp;quot;http://www.w3.org/1999/xhtml&amp;quot; xml:lang=&amp;quot;en&amp;quot; lang=&amp;quot;en&amp;quot;&amp;gt;
&amp;lt;head profile=&amp;quot;http://selenium-ide.openqa.org/profiles/test-case&amp;quot;&amp;gt;
&amp;lt;meta http-equiv=&amp;quot;Content-Type&amp;quot; content=&amp;quot;text/html; charset=UTF-8&amp;quot; /&amp;gt;
&amp;lt;link rel=&amp;quot;selenium.base&amp;quot; href=&amp;quot;https://github.com/codesolid&amp;quot; /&amp;gt;
&amp;lt;title&amp;gt;InitialState&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;table cellpadding=&amp;quot;1&amp;quot; cellspacing=&amp;quot;1&amp;quot; border=&amp;quot;1&amp;quot;&amp;gt;
&amp;lt;thead&amp;gt;
&amp;lt;tr&amp;gt;&amp;lt;td rowspan=&amp;quot;1&amp;quot; colspan=&amp;quot;3&amp;quot;&amp;gt;InitialState&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&amp;lt;/thead&amp;gt;&amp;lt;tbody&amp;gt;
&amp;lt;tr&amp;gt;
    &amp;lt;td&amp;gt;open&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;/CodeSolid&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
    &amp;lt;td&amp;gt;clickAndWait&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;link=tutorials&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
    &amp;lt;td&amp;gt;assertText&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;css=html body.logged_out.env-production.windows.vis-public div.wrapper div.site div.container div.repository-with-sidebar.repo-container.new-discussion-timeline.js-new-discussion-timeline.with-full-navigation div#js-repo-pjax-container.repository-content.context-loader-container div#readme.clearfix.announce.instapaper_body.md article.markdown-body.entry-content h1&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;Welcome to the CodeSolid Tutorials&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/tbody&amp;gt;&amp;lt;/table&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;/selenium-and-intellij-idea-part-two/&quot;&gt;Read Part Two of the Article&lt;/a&gt;&lt;/p&gt;
</description>
				<pubDate>Sat, 14 Jun 2014 00:00:00 -0700</pubDate>
				<link>/getting-started-with-selenium-in-intellij-idea</link>
				<guid isPermaLink="true">/getting-started-with-selenium-in-intellij-idea</guid>
			</item>
			
		
			
			<item>
				<title>Goalboost - Hours Tracking for Sofware Projects</title>
				<description>&lt;p&gt;Of all the cool business models, writing a SaaS application and selling it directly to consumers has to rank among the coolest.&lt;/p&gt;

&lt;p&gt;Well, I&amp;#39;m a few hundred hours away from that goal, but at least I have a cool place to track those hours, Goalboost.  It&amp;#39;s the ultimate in eating your own dog food.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://codesolid.com/images/20140511/Goalboost_Screenshot_05112014.jpg&quot;&gt;&lt;/p&gt;

&lt;p&gt;Recently I worked on an Indiegogo campaign and the task above.&lt;/p&gt;

&lt;p&gt;Such tasty, tasty dog food.&lt;/p&gt;
</description>
				<pubDate>Mon, 02 Jun 2014 00:00:00 -0700</pubDate>
				<link>/goalboost---hours-tracking-for-sofware-projects</link>
				<guid isPermaLink="true">/goalboost---hours-tracking-for-sofware-projects</guid>
			</item>
			
		
			
			<item>
				<title>We are moving</title>
				<description>&lt;p&gt;For some time now my ParticleWave site has been fairly schizophrenic, being also JohnLockwood.com and Codesolid.com.&lt;/p&gt;

&lt;p&gt;To add to the lack of mental health around this site, I&amp;#39;ve been meaning to move the whole site to Jekyll for some time,
because I&amp;#39;m tired of wordpress updates and stupid spam comments.  In other words, I&amp;#39;m moving from Wordpress to Jekyll for the same reason 
everybody moves from Wordpress to Jekyll.&lt;/p&gt;

&lt;p&gt;As of this post, my site is live on Github pages, as you can see if you&amp;#39;re reading it.&lt;/p&gt;

&lt;p&gt;There was a LOT involved in making the move, and I took lousy notes.  So this is not a tutorial, or not much of one -- sorry.  It&amp;#39;s more of an announcement for the one or two people who are kind enough to read me from time to time.   Getting Wordpress to Jekyll was one nasty little bit of business which I have forgotten since I did it weeks ago.  I do recall that it started with Google and involved typing, so I&amp;#39;m sure if you&amp;#39;re smart you can reproduce it.  More recently I&amp;#39;m able to credit David Ensinger&amp;#39;s &lt;a href=&quot;http://davidensinger.com/2013/07/automating-jekyll-deployment-to-github-pages-with-rake/&quot;&gt;fine article&lt;/a&gt; on how to workaround the fact that your plugins are likely not supported by Github.  Nice job there and helpful,
and my own stripped down version of his Rakefile is in the &lt;a href=&quot;https://github.com/CodeSolid/CodeSolid.github.io/tree/source&quot;&gt;source for this site&lt;/a&gt;.  My version
works around some issues I had (I found I had to force the pushes to master for some reason), and it removes some of the sass-specific stuff he had added 
since I&amp;#39;m not using sass at the moment.&lt;/p&gt;

&lt;p&gt;Most importantly, it&amp;#39;s nice to have a starter site here I can begin to build out.  You&amp;#39;ll see that there&amp;#39;s a lot to be done, the pages are just stubs, etc., etc.  There&amp;#39;s no domain actually pointing here yet, though we&amp;#39;ll work on having it be CodeSolid.com before too long.&lt;/p&gt;

&lt;p&gt;And now finally I have a place for the blog posts to go, so I can keep writing.  For about two months I&amp;#39;ve written very little on ParticleWave since I know it&amp;#39;s going away.&lt;/p&gt;

&lt;p&gt;Now I can feed my keyboard addition again.  &lt;/p&gt;
</description>
				<pubDate>Sun, 01 Jun 2014 00:00:00 -0700</pubDate>
				<link>/we-are-moving</link>
				<guid isPermaLink="true">/we-are-moving</guid>
			</item>
			
		
			
			<item>
				<title>Testing the Rake Post Task</title>
				<description>&lt;p&gt;I just merged some tasks from Ellen Gummesson&amp;#39;s cool Rake Boilerplate, and once that was done, started this post based on nothing
more complex than &amp;#39;rake[&amp;quot;Testing the Rake Post Task&amp;quot;]&amp;#39;.&lt;/p&gt;

&lt;p&gt;Very cool.  Nice job, Ellen, and thanks.&lt;/p&gt;

&lt;p&gt;My Rakefile with David Ensinger&amp;#39;s work on building Jekyll sites locally and working around the fact that Github doesn&amp;#39;t support most plugins, together with some of Ellen&amp;#39;s post-creating magic is located &lt;a href=&quot;https://github.com/CodeSolid/CodeSolid.github.io/blob/source/Rakefile&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
				<pubDate>Sun, 01 Jun 2014 00:00:00 -0700</pubDate>
				<link>/testing-the-rake-post-task</link>
				<guid isPermaLink="true">/testing-the-rake-post-task</guid>
			</item>
			
		
			
			<item>
				<title>Java Beginner Tutorial - Downloading and Installing Tools for Java Development</title>
				<description>&lt;p&gt;This video tutorial for beginners in Java shows you how to install and configure the tools you&amp;#39;ll need to get started in Java development. You&amp;#39;ll download a Java Development Kit, JDK, version 7, and the free community edition of IntelliJ Idea.  The total time for this tutorial is 15 minutes.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/28Zo8gj5810?list=UUZvhhcu-e5sURJ17cUwk02w&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
</description>
				<pubDate>Sun, 23 Mar 2014 18:31:00 -0700</pubDate>
				<link>/java-beginner-tutorial-downloading-installing-tools-java-development</link>
				<guid isPermaLink="true">/java-beginner-tutorial-downloading-installing-tools-java-development</guid>
			</item>
			
		
			
			<item>
				<title>Using TestNG with Spring</title>
				<description>&lt;p&gt;Testing Spring in JUnit is fairly simple given the test runner support.  Using TestNG is a little bit more complex, but this tutorial will quickly get you up to speed.
&lt;div id=&quot;table_of_contents&quot;&gt;
&lt;h1&gt;Table of Contents&lt;/h1&gt;
&lt;ul &gt;
&lt;li&gt;&lt;a href=&quot;#MovingToTestNGfromJUnit&quot;&gt;Moving to TestNG from JUnit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#SettingUpMaven&quot;&gt;Setting Up The Maven Dependency for TestNG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#SimpleTests&quot;&gt;Some Simple AbstractTestNGSpringContextTests Examples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/p&gt;

&lt;h2&gt;&lt;a name=&quot;MovingToTestNGfromJUnit&quot; id=&quot;MovingToTestNGfromJUnit&quot;&gt;Moving to TestNG from JUnit&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;A few weeks ago I published a &lt;a href=&quot;http://codesolid.com/spring-unit-testing-using-junit/&quot;&gt;Simple Introduction to Spring Unit testing using JUnit&lt;/a&gt;.  We&amp;#39;ve been using JUnit quite a bit in our examples so far, but as some of you may already know, JUnit is not the only unit test framework for Java.  Another framework, TestNG, offers a lot of features that JUnit lacks, such as the ability to run parameterized tests in which a given test is run against an array of different values, and the ability to break tests down into categories coupled with fine-grained configuration control over what tests to run.  Indeed, the author of TestNG (&amp;quot;Next Generation&amp;quot;) very much had the limitations of JUnit in mind in writing the new framework.  You can read about some of the problems with JUnit that TestNG was designed to solve on it the &lt;a href=&quot;http://testng.org/&quot;&gt;TestNG web site&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Of course, the choice of which technology to use is often a matter not of what&amp;#39;s best, but what&amp;#39;s most popular (especially if you&amp;#39;re early in your career and need to get certain key technologies added to your resume).  So for my wife, who&amp;#39;s just beginning her technical career as a tester, I&amp;#39;d be inclined to recommend JUnit, whereas for myself, old fart programmer that I am, I have the luxury of picking the technology I consider better in many cases.  For example, compared to IntelliJ Idea, for me Eclipse is just too painful -- free or not, big market share or not.  So I use IntelliJ.  So if you&amp;#39;re playing &amp;quot;Dice Keyword Bingo&amp;quot;, stick with JUnit, otherwise do yourself a favor and take a look at TestNG.  &lt;/My two cents&gt;&lt;/p&gt;

&lt;h2&gt;&lt;a name=&quot;SettingUpMaven&quot; id=&quot;SettingUpMaven&quot;&gt;Setting Up The Maven Dependency for TestNG&lt;/a&gt;&lt;/h2&gt;

&lt;h3&gt;Setting up the Maven Dependency for TestNG&lt;/h3&gt;

&lt;p&gt;Rather than repeat all the sample bean code from our &lt;a href=&quot;=&quot;&gt;original JUnit article&lt;/a&gt;, let&amp;#39;s focus here on the tests. The original sample code is, after all, not very interesting -- it only gave us something to test.  To migrate the JUnit sample, the first thing I needed to do was change the dependency section in our POM file slightly.  Remove the JUnit dependency:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;junit
  junit
  4.8.2
  test&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now add the dependency for TestNG:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;org.testng
  testng
  6.1.1
  test&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;For the benefit of those of you starting from scratch, the here is &lt;a href=&quot;https://github.com/CodeSolid/tutorials/blob/master/SpringTestNG/pom.xml&quot;&gt;the full POM file&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;&lt;a name=&quot;SimpleTests&quot; id=&quot;SimpleTests&quot;&gt;Some Simple AbstractTestNGSpringContextTests Examples&lt;/a&gt;&lt;/h2&gt;

&lt;h3&gt;Simple AbstractTestNGSpringContextTests Test Examples&lt;/h3&gt;

&lt;p&gt;Next, let&amp;#39;s see what we need to do to use Spring&amp;#39;s basic TestNG testing support class, AbstractTestNGSpringContextTests.  Don&amp;#39;t let the &amp;quot;Abstract&amp;quot; in the name scare you off here, there&amp;#39;s really nothing much to implement. All you need to do is add a ContextConfiguration annotation to your class and it just works.  Here&amp;#39;s the Hello-World-simple example, which only uses the ContextConfiguration annotation to get it to compile and run.&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;package com.codesolid.tutorials.tests;

import org.springframework.test.context.testng.AbstractTestNGSpringContextTests;
import org.springframework.test.context.ContextConfiguration;
import org.testng.annotations.Test;

import static org.testng.Assert.assertTrue;

@ContextConfiguration(&amp;quot;file:src/main/resources/spring-config.xml&amp;quot;)
public class SimpleTest extends AbstractTestNGSpringContextTests {

    @Test
    public void SomeTest() {
        assertTrue(true);
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Modifying our JUnit tests to work with TestNG was just as easy.  The @RunWith annotation was no longer needed, being replaced by the fact that we&amp;#39;re extending AbstractTestNGSpringContextTexts.  So  pretty much the only migration we did involved changing JUnit imports to TestNG ones.  We removed:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;import static org.junit.Assert.*;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We replaced it with:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;import org.springframework.test.context.testng.AbstractTestNGSpringContextTests;
import org.testng.annotations.Test;
import static org.testng.Assert.*;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here for example is a little bit longer example, that exercises some of the test beans we&amp;#39;ve wired up in our application context:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;package com.codesolid.tutorials.tests;

// Generally needed:
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.context.ApplicationContext;
import org.springframework.test.context.testng.AbstractTestNGSpringContextTests;
import org.testng.annotations.Test;
import static org.testng.Assert.*;

// Application specific
import com.codesolid.tutorials.UserStory;
import com.codesolid.tutorials.User;

@ContextConfiguration(&amp;quot;file:src/main/resources/spring-config.xml&amp;quot;)
public class ContextTests extends AbstractTestNGSpringContextTests {

    @SuppressWarnings(&amp;quot;SpringJavaAutowiringInspection&amp;quot;)
    @Autowired
    protected ApplicationContext ac;

    // Using ApplicationContext
    // The getBean method is the workhorse of the Spring ApplicationContext.
    // The user field in the UserStory object was set up (dependency injected)
    // by Spring:
    @Test
    public void testUserNotNull() {
        UserStory story = (UserStory) ac.getBean(&amp;quot;userStory&amp;quot;);
        assertNotNull(story.getUser());
    }

    // Not using ApplicationContext
    // Regular non-Spring instantiation
    // Instantiating our own UserStory, you can see that the user
    // is null.
    @Test
    public void testUserStoryNotFromContext() {
        UserStory story = new UserStory();
        assertNull(story.getUser());
    }

    // Not using ApplicationContext
    // Regular non-Spring instantiation
    // The default role if you just call the constructor
    // is &amp;quot;User&amp;quot;.
    @Test
    public void testNonSpringUserDefaultRole()
    {
        User u = new User();
        assertEquals(u.getRole(), &amp;quot;User&amp;quot;);
    }

    // Using ApplicationContext
    // Since Spring instantiated this according to the property
    // from spring-config.xml, it overrode the default &amp;quot;user&amp;quot;
    // role with &amp;quot;SuperGenius User&amp;quot;.  (This presumably
    // is Wile E. Coyote.)
    @Test
    public void testUserRoleIsAsExpected() {
        UserStory story = (UserStory) ac.getBean(&amp;quot;userStory&amp;quot;);
        assertEquals(story.getUser().getRole(), &amp;quot;SuperGenius User&amp;quot;);
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Getting started using the Spring TestNG support turned out to be really easy.  Check our our IntelliJ project and the full source on &lt;a href=&quot;https://github.com/CodeSolid/tutorials/tree/master/SpringTestNG&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
				<pubDate>Thu, 04 Jul 2013 12:14:37 -0700</pubDate>
				<link>/using-testng-with-spring</link>
				<guid isPermaLink="true">/using-testng-with-spring</guid>
			</item>
			
		
			
			<item>
				<title>Spring Security - Part I:  Spring Authentication and Authorization Basics</title>
				<description>&lt;div id=&quot;table_of_contents&quot;&gt;
&lt;h1&gt;Table of Contents&lt;/h1&gt;
&lt;ul &gt;
&lt;li&gt;&lt;a href=&quot;#Introduction&quot;&gt;Introduction -- My Scandalous Confession&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#GeneratingAProject&quot;&gt;Generating a Spring Security Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#SecurityConfiguration&quot;&gt;The Security Configuration Files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#StandardPasswordEncoder&quot;&gt;Spring's StandardPasswordEncoder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#SecurityInTheViewLayer&quot;&gt;Using Security in the View Layer -- The Spring Security Tag Libraries&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;h2&gt;&lt;a id=&quot;Introduction&quot; name=&quot;Introduction&quot;&gt;Introduction -- My Scandalous Confession&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Before we begin with the tutorial, I am going to lay bare my soul to you.  I know, most tutorials are dry and boring, and don&amp;#39;t include such titillating and scandalous gossip as you are about to hear. You&amp;#39;re welcome.&lt;/p&gt;

&lt;p&gt;Whenever I write an article that has Part 1 in the title, I generally am doing so without even a remote business plan for a clue about how many parts I&amp;#39;m going to end up with.  There, I&amp;#39;ve made my confession.  Eat your heart out, St. Augustine.&lt;/p&gt;

&lt;p&gt;In this tutorial we&amp;#39;re going to start digging into Spring Security in the easiest way I know how.  First, spend $199 on a &lt;a href=&quot;http://www.jetbrains.com/idea/download/&quot;&gt;great Java IDE&lt;/a&gt;, or download it free for thirty days so you can get through however many parts this article ends up having.  We&amp;#39;re using IntelliJ 12 Ultimate Edition to generate a starter project for this article in the next section.  The cool thing is, though, once you have the &lt;a href=&quot;https://github.com/CodeSolid/tutorials/tree/master/SpringSecurity1&quot;&gt;starter project&lt;/a&gt;, you can likely follow along with the rest of the article using either the IntelliJ Idea 11 or 12 Community Edition, which is free. I&amp;#39;ve had good luck doing that. You can even &lt;a href=&quot;/how-to-run-the-codesolid-tutorials-in-eclipse/&quot;&gt;import the POM file into Eclipse&lt;/a&gt; and run the project that way.&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;GeneratingAProject&quot; name=&quot;GeneratingAProject&quot;&gt;Generating a Spring Security Project&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;With Idea Ultimate Edition Version 12 and later, to create a Spring Security Project you simply select create a new project from the Welcome Screen:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/spring_security/IntelliJCreateNewProject.jpg&quot; alt=&quot;IntelliJCreateNewProject&quot;&gt;&lt;/p&gt;

&lt;p&gt;Next, select Spring Security and give your project a name:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/spring_security/SpringSecurityCreateProject1.jpg&quot; alt=&quot;SpringSecurityCreateProject&quot;&gt;&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;SecurityConfiguration&quot; name=&quot;SecurityConfiguration&quot;&gt;The Security Configuration Files&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;In the Spring security starter project, IntelliJ adds the security-related configuration to the two required places, web.xml, and the main Spring configuration file, both of which are in src\webapp\WEB-INF.&lt;/p&gt;

&lt;p&gt;In web.xml, we first set up a security filter name, then use that name to defining a mapping to ensure that all application URLs go through the security filter first:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-http'&gt;&amp;lt;filter&amp;gt;
        &amp;lt;filter-name&amp;gt;springSecurityFilterChain&amp;lt;/filter-name&amp;gt;
        &amp;lt;filter-class&amp;gt;org.springframework.web.filter.DelegatingFilterProxy&amp;lt;/filter-class&amp;gt;
    &amp;lt;/filter&amp;gt;

    &amp;lt;filter-mapping&amp;gt;
        &amp;lt;filter-name&amp;gt;springSecurityFilterChain&amp;lt;/filter-name&amp;gt;
        &amp;lt;url-pattern&amp;gt;/*&amp;lt;/url-pattern&amp;gt;
    &amp;lt;/filter-mapping&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Next we turn to the main Spring configuration file, spring-config.xml, which is shown in abbreviated form below:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-http'&gt;&amp;lt;security:global-method-security jsr250-annotations=&amp;quot;enabled&amp;quot; pre-post-annotations=&amp;quot;enabled&amp;quot; secured-annotations=&amp;quot;enabled&amp;quot; /&amp;gt;

&amp;lt;security:http use-expressions=&amp;quot;true&amp;quot;&amp;gt;
    &amp;lt;security:intercept-url pattern=&amp;quot;/**&amp;quot; access=&amp;quot;permitAll&amp;quot; /&amp;gt;
    &amp;lt;security:form-login /&amp;gt;
    &amp;lt;security:logout logout-success-url=&amp;quot;/&amp;quot; delete-cookies=&amp;quot;JSESSIONID&amp;quot;/&amp;gt;
    &amp;lt;security:remember-me /&amp;gt;
    &amp;lt;security:session-management invalid-session-url=&amp;quot;/&amp;quot;&amp;gt;
        &amp;lt;security:concurrency-control max-sessions=&amp;quot;1&amp;quot; error-if-maximum-exceeded=&amp;quot;true&amp;quot; /&amp;gt;
    &amp;lt;/security:session-management&amp;gt;
&amp;lt;/security:http&amp;gt;

&amp;lt;bean id=&amp;quot;encoder&amp;quot; class=&amp;quot;org.springframework.security.crypto.password.StandardPasswordEncoder&amp;quot;/&amp;gt;

&amp;lt;security:authentication-manager&amp;gt;
    &amp;lt;security:authentication-provider&amp;gt;
        &amp;lt;security:password-encoder ref=&amp;quot;encoder&amp;quot;/&amp;gt;
        &amp;lt;security:user-service&amp;gt;
            &amp;lt;!-- Password: &amp;quot;koala&amp;quot; for both --&amp;gt;
            &amp;lt;security:user name=&amp;quot;user&amp;quot;
                  password=&amp;quot;4efe081594ce25ee4efd9f7067f7f678a347bccf2de201f3adf2a3eb544850b465b4e51cdc3fcdde&amp;quot;
                  authorities=&amp;quot;user&amp;quot;/&amp;gt;
            &amp;lt;security:user name=&amp;quot;admin&amp;quot;
                  password=&amp;quot;4efe081594ce25ee4efd9f7067f7f678a347bccf2de201f3adf2a3eb544850b465b4e51cdc3fcdde&amp;quot;
                  authorities=&amp;quot;admin&amp;quot;/&amp;gt;
        &amp;lt;/security:user-service&amp;gt;
    &amp;lt;/security:authentication-provider&amp;gt;
&amp;lt;/security:authentication-manager&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;First, we see a line enabling JSR-250 annotations, such as @RolesAllowed, @PermitAll, @DenyAll, which allows fine-grained, method level access control.  Furthermore, the &amp;#39;use-expressions=&amp;quot;true&amp;quot;&amp;#39; clause allows us to use Spring Expression Language style security expressions in our view layer. We&amp;#39;ll be looking at what that allows us to do a bit further on when we discuss the view layer. &lt;/p&gt;

&lt;p&gt;Next, the attributes &amp;#39;pre-post-annotations=&amp;quot;enabled&amp;quot;&amp;#39; and &amp;#39;secured-annotations=&amp;quot;enabled&amp;quot;&amp;#39; will be used by our controllers.  These configuration elements enable a feature that is new as of Spring 3.0.  Spring 3.0 introduced several new, method-level annotations beginning with @Pre and @Post.  We see one of these, @PreAuthorize, used in both the UserService class and the ApplicationController classes:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;// In UserService.java:
    @PreAuthorize(&amp;quot;hasRole('admin')&amp;quot;)
    public Collection getAuthorities(UserDetails userDetails) {
        return userDetails.getAuthorities();
    }

    // In ApplicationController.java:
    @PreAuthorize(&amp;quot;hasRole('admin')&amp;quot;)
    @RequestMapping(value = &amp;quot;/admin&amp;quot;, method = RequestMethod.GET)
    public String admin(ModelMap map) {
        UserDetails userDetails =
                (UserDetails) SecurityContextHolder.getContext().getAuthentication().getPrincipal();
        Collection securedMessage = userService.getAuthorities(userDetails);
        map.addAttribute(&amp;quot;userDetails&amp;quot;, userDetails);
        map.addAttribute(&amp;quot;userAuthorities&amp;quot;, securedMessage);
        return &amp;quot;admin&amp;quot;;
    }&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In the next section of the configuration, we see a setting that is probably worth giving some thought to before you move an application into production:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-http'&gt;&amp;lt;security:http use-expressions=&amp;quot;true&amp;quot;&amp;gt;
        &amp;lt;security:intercept-url pattern=&amp;quot;/**&amp;quot; access=&amp;quot;permitAll&amp;quot; /&amp;gt;
        ...
   &amp;lt;/security:http&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The demo app takes the unusual approach of allowing access by default, and allowing it for certain roles.  Generally it&amp;#39;s considered a best practice for secure applications to deny access by default, then turn it on selectively -- that way when you forget a setting somewhere, you err on the side of more security, not less.&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;StandardPasswordEncoder&quot; name=&quot;StandardPasswordEncoder&quot;&gt;Spring's StandardPasswordEncoder&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;In the next two sections of spring-config.xml, we set the password encoder our application will use to the StandardPasswordEncoder, then we configure two users with passwords generated by that encoder:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-http'&gt;...
&amp;lt;security:user-service&amp;gt;
    &amp;lt;!-- Password: &amp;quot;koala&amp;quot; for both --&amp;gt;
    &amp;lt;security:user name=&amp;quot;user&amp;quot;
         password=&amp;quot;4efe081594ce25ee4efd9f7067f7f678a347bccf2de201f3adf2a3eb544850b465b4e51cdc3fcdde&amp;quot;
         authorities=&amp;quot;user&amp;quot;/&amp;gt;
    &amp;lt;security:user name=&amp;quot;admin&amp;quot;
         password=&amp;quot;4efe081594ce25ee4efd9f7067f7f678a347bccf2de201f3adf2a3eb544850b465b4e51cdc3fcdde&amp;quot;
         authorities=&amp;quot;admin&amp;quot;/&amp;gt;
&amp;lt;/security:user-service&amp;gt;
...&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The StandardPasswordEncoder is a small and quite nicely designed class that bundles everything you want a password encoder to do into a very small interface.  It uses an SHA-256 hasing together with an eight byte random salt to generate a password hash that is unique each time.  Although the starter application does not show this, for additional security you can add an extra secret value for your application, in which case the hash will be based on the password, the random salt, and the secret value.  This is configured using basic constructor injection:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-http'&gt;&amp;lt;bean id=&amp;quot;encoder&amp;quot; class=&amp;quot;org.springframework.security.crypto.password.StandardPasswordEncoder&amp;quot;&amp;gt;
  &amp;lt;constructor-arg value=&amp;quot;x9ajDR$#Qkr91&amp;quot;&amp;gt;
&amp;lt;/bean&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Getting back to the application configuration, we see that the application is configured with two users, &amp;quot;user&amp;quot; and &amp;quot;admin&amp;quot;, both with the password &amp;quot;koala&amp;quot;, which is hashed to: 4efe081594ce25ee4efd9f7067f7f678a347bccf2de201f3adf2a3eb544850b465b4e51cdc3fcdde.&lt;/p&gt;

&lt;p&gt;To show you a little more about how the StandardPasswordController works, I&amp;#39;ve added a unit test to the code that IntelliJ Idea provides.  As you can guess from the code, each time the tests are run the output for each encoded string will be different, even though we are encoding the same password over and over again.  Moreover, though we can verify the encoded string against the password, the password is virtually impossible to reverse engineer.&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;import static org.junit.Assert.*;
import org.junit.Test;
import org.springframework.security.crypto.password.StandardPasswordEncoder;

public class StandardPasswordEncoderDemo {
    @Test
    public void testCannotReproduceHashFromConfigFile() {
        StandardPasswordEncoder encoder = new StandardPasswordEncoder();
        String password = &amp;quot;koala&amp;quot;;
        String encoded = encoder.encode(password);
        String encodedFromXML = &amp;quot;4efe081594ce25ee4efd9f7067f7f678a347bccf2de201f3adf2a3eb544850b465b4e51cdc3fcdde&amp;quot;;

        // What we generated is not what's in the XML
        assertTrue(encodedFromXML != encoded);

        // But both what's in the XML and what we generated match the password.
        assertTrue(encoder.matches(password, encoded));
        assertTrue(encoder.matches(password, encodedFromXML));

        System.out.println(encoded);
   }

    @Test
    public void testAnotherRunWillAlsoYieldDifferentHashes() {
        StandardPasswordEncoder encoder = new StandardPasswordEncoder();
        String password = &amp;quot;koala&amp;quot;;
        String encoded = encoder.encode(password);
        String encoded2 = encoder.encode(password);
        assertTrue(encoded2 != encoded);

        System.out.println(encoded);
        System.out.println(encoded2);
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3&gt;Using Security in the View Layer - The Spring Security Tag Libraries&lt;/h3&gt;

&lt;p&gt;If we look in ApplicationController.java, we find the following method mapping:
&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;@RequestMapping(value = &amp;quot;/&amp;quot;, method = RequestMethod.GET)
    public String index(ModelMap map) {
        // Additional code...
        return &amp;quot;index&amp;quot;;
    }&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;No surprises here, the root mapping is to the traditional index page.  Examining the source in src/webapp/WEB-INF/pages/index.jsp we find a good demonstration of the use of the Spring Security Tag Library.  First, we import the tag library:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;&amp;lt;%@ taglib prefix=&amp;quot;sec&amp;quot; uri=&amp;quot;http://www.springframework.org/security/tags&amp;quot; %&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We now have access to the &lt;a href=&quot;http://static.springsource.org/spring-security/site/docs/3.0.x/reference/el-access.html#el-access-web&quot;&gt;Spring Security Expressions&lt;/a&gt; that we saw enabled earlier when we discussed the configuration. For example, we first check to see if the User has logged in or not, and if not, we prompt for a sign-in:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-http'&gt;&amp;lt;sec:authorize access=&amp;quot;isAnonymous()&amp;quot;&amp;gt;
    &amp;lt;p&amp;gt;
        &amp;lt;a href=&amp;quot;/spring_security_login&amp;quot;&amp;gt;Sign In&amp;lt;/a&amp;gt;
    &amp;lt;/p&amp;gt;
&amp;lt;/sec:authorize&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Using the inverse of the isAnonymousCheck, if the user is authenticated we display a welcome message and a sign-out link:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-http'&gt;&amp;lt;sec:authorize access=&amp;quot;isAuthenticated()&amp;quot;&amp;gt;
    &amp;lt;p&amp;gt;Hello, ${userDetails.username}! &amp;lt;a href=&amp;quot;/j_spring_security_logout&amp;quot;&amp;gt;Sign Out&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;/sec:authorize&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Note that for production use, there&amp;#39;s a bit of a bug in this code, since there&amp;#39;s a the user could be a user who asked to be remembered (&amp;quot;Remember Me&amp;quot;), in which case isAuthenticated would still return true even if the user were not logged in.  To eliminate this possibility, use &amp;quot;isFullyAuthenticated&amp;quot; instead.&lt;/p&gt;

&lt;p&gt;Finally, we do a check for the admin role and conditionally display a link if the signed in user has that role assigned.&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-http'&gt;&amp;lt;sec:authorize access=&amp;quot;hasRole('admin')&amp;quot;&amp;gt;
    &amp;lt;p&amp;gt;
        &amp;lt;a href=&amp;quot;/admin&amp;quot;&amp;gt;Admin page&amp;lt;/a&amp;gt;
    &amp;lt;/p&amp;gt;
&amp;lt;/sec:authorize&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;With that, we&amp;#39;ve seen a basic Spring Security starter project that illustrates how to set up a very basic authentication based on pre-configured user names and passwords.  In Spring Security Part II, we&amp;#39;ll dig into how to handle the much more common use case of storing user authentication information in a database.  We&amp;#39;ll also dig into customizing the log-in forms.  This will serve as a starting point for a much more full featured authorization system suitable for a business to consumer or business to business web site.  Later on in another tutorial we&amp;#39;re planning to tie this database-based authentication system with Spring OAuth, allowing users with (for example) a Google account to sign in using that account.&lt;/p&gt;
</description>
				<pubDate>Sun, 09 Jun 2013 19:37:37 -0700</pubDate>
				<link>/spring-security-part-i-spring-authentication-and-authorization-basics</link>
				<guid isPermaLink="true">/spring-security-part-i-spring-authentication-and-authorization-basics</guid>
			</item>
			
		
			
			<item>
				<title>Configuring Spring for Test versus Production</title>
				<description>&lt;div id=&quot;table_of_contents&quot;&gt;

&lt;h1&gt;Contents&lt;/h1&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;#SpringConfiguration&quot;&gt;Spring Configuration Options&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;#MetaInf&quot;&gt;The META-INF Gospel&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;#MultipleModules&quot;&gt;Configuring Spring Properties at Build Time Using Multiple Modules&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;#PropertyPlaceholderConfigurer&quot;&gt;Configuring Spring Properties at Run Time Using the PropertyPlaceholderConfigurer&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;
        &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;#ApplicationContext&quot;&gt;Setting up PropertyPlaceholderConfigurer in the ApplicationContext&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;#PropertiesFiles&quot;&gt;Some Properties Files to Test&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;#InjectingProperties&quot;&gt;Injecting Properties&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;#Testing&quot;&gt;Testing with JUnit&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
    &lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;h2&gt;&lt;a id=&quot;SpringConfiguration&quot;&gt;Spring Configuration Options&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;The Spring Framework is not opinionated software.  Instead, Spring has a rich set of configuration options about which you can -- indeed, about which you must -- make up your own mind.  In this tutorial we&amp;#39;ll discuss some of the ways you can easily configure your application to be ready for production, while still making it easy to work with your code in a test environment.
&lt;a href=&quot;META-INF&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;MetaInf&quot;&gt;The META-INF Gospel&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;When you&amp;#39;re first getting something working, the easiest path I&amp;#39;ve found is to locate your properties somewhere underneath what in the standard Maven directory structure is the src\main\resources\META-INF directory.  Then, to give just one example for now, you want to point to those resources as shown in the following annotation from a Unit test:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(&amp;quot;classpath:META-INF/spring/applicationContext.xml&amp;quot;)
// class YourTestClass { ...&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This will work just fine, and although I&amp;#39;ve seen a few spec Nazis on Stackoverflow complain that the Java JAR specification contains the gospel truth about what files are allowed in the META-INF directory, I&amp;#39;ll take the side of Roo and other Spring tools to preach a new gospel to you:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Generally speaking, put your configuration files in META-INF, unless you like pain.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;That will get your software working, but the limitation of this approach is that once you&amp;#39;ve located all your configuration files in META-INF&amp;lt;somewhere&amp;gt; to set up a single environment correctly, how do you set up &lt;em&gt;different&lt;/em&gt; environments like those you&amp;#39;ll need for test, staging, and production.  Though I&amp;#39;m sure there are a lot more ways to skin this poor cat, let&amp;#39;s discuss two of the more popular approaches to this problem.  The first option, which we&amp;#39;ll discuss more briefly, is to resolve all your option file dependencies at compile time.  &lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;MultipleModules&quot;&gt;Configuring Spring Properties Using Multiple Modules&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;To use this approach, you set up a multi-module project.  This approach takes advantage of the fact that WAR files can pack all the jars they need inside themselves, ready to be deployed to Tomcat or another web server.  So we bundle  our code and any configuration files that are common to all our target environments in the WAR file, then build a jar file for each different environment containing only environment-specific files.&lt;/p&gt;

&lt;p&gt;What we might end up with is a directory structure that looks something like this:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-bash'&gt;root        
root/app
root/config_test
root/config_production&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The app directory contains the whole structure of the application&amp;#39;s WAR file project.  In the root directory is a pom file that builds the targets in the other directories, as shown in the following snippet:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-http'&gt;&amp;lt;!-- pom.xml in root/ directory that builds the whole project --&amp;gt;
&amp;lt;modules&amp;gt;
   &amp;lt;module&amp;gt;app&amp;lt;/module&amp;gt;
   &amp;lt;module&amp;gt;config_test&amp;lt;/module&amp;gt;
   &amp;lt;module&amp;gt;config_production&amp;lt;/module&amp;gt;
&amp;lt;/modules&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The config&amp;#95;test and config&amp;#95;production files contain a src\main\resource\WEB-INF directory, whatever configuration files you need, and a pom file in the root to bundle the configuration files into a JAR.  What&amp;#39;s important is that although the contents of the files will contain different settings, the names of the files should be the same in each configuration file we build -- that way when they&amp;#39;re referenced from the main files in the application&amp;#39;s WAR files, all is well.&lt;/p&gt;

&lt;p&gt;In turn, the WAR file in the main app depend on either the test configuration or the production configuration as desired, as shown in the snippet below.   In the snippet below, we&amp;#39;re building for the test environment, so the production configuration is disabled.&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-http'&gt;&amp;lt;!-- pom.xml in root/app directory that builds the WAR file --&amp;gt;
&amp;lt;!-- Test configuration --&amp;gt;
&amp;lt;dependency&amp;gt;
  &amp;lt;groupId&amp;gt;com.codesolid&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;config_test&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;1.0-SNAPSHOT&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;

&amp;lt;!-- Production configuration   
&amp;lt;dependency&amp;gt;
  &amp;lt;groupId&amp;gt;com.codesolid&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;config_production&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;1.0-SNAPSHOT&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;             
--&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I&amp;#39;ve used the multi-module approach and it works fine, but having to build three projects to configure one WAR file is a bit heavy handed.  It also spreads the configuration files around more than I like.  Fortunately, there&amp;#39;s an easier way to get this done, and that is to resolve the configuration files at run time, not at build time.  &lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;PropertyPlaceholderConfigurer&quot;&gt;Configuring Spring Properties at Run Time Using the PropertyPlaceholderConfigurer&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;One powerful mechanism that Spring provides to make configuration flexible across different environments is the PropertyPlaceholderConfigurer.  Since I think it&amp;#39;s the better approach, let&amp;#39;s take a look at a more detailed tutorial.  The code for this is available under the PropertyPlaceholderConfigurer directory of our &lt;a href=&quot;https://github.com/CodeSolid/tutorials&quot;&gt;Github Tutorials Repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The structure of our PropertyPlaceholderConfigurer build is shown below:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/spring_configuration/PropertyPlaceholderConfigurer.jpg&quot;&gt;&lt;img src=&quot;/images/spring_configuration/PropertyPlaceholderConfigurer.jpg&quot; alt=&quot;PropertyPlaceholderConfigurer&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have a single bean under test (yes, you guessed it: TestBean), and our mission, if we choose to accept it, is to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Dynamically set up properties in our configuration files, so we can switch to new properties in production.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Inject the values of those properties into the test bean.  In many cases our properties would be consumed by another third-party bean, but injecting properties directly allows us to take the next step...&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Set up a unit test to show that we correctly injected the properties we want for the appropriate environment&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;&lt;a id=&quot;ApplicationContext&quot;&gt;Setting up  PropertyPlaceholderConfigurer in the ApplicationContext&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Our main &amp;quot;common configuration&amp;quot; area is in the META-INF\spring.  Our global properties file and main application context file go here.   Let&amp;#39;s look at applicationContext.xml, where the detailed comment explains what&amp;#39;s going on:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-http'&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;
&amp;lt;beans xmlns=&amp;quot;http://www.springframework.org/schema/beans&amp;quot; /&amp;gt;  &amp;lt;!-- Other namespaces omitted for brevity --&amp;gt;
    &amp;lt;!--
       The configuration below will use any application-wide properties files
       in the spring directory and make those properties available to all
       configurations (test, production, etc.).

       However, by setting the &amp;quot;environment&amp;quot; variable appropriately, we
       can use the files in either &amp;quot;test&amp;quot; or &amp;quot;production&amp;quot; (if you want staging etc.,
       simply create another directory under META-INF).

       For example, adding -Denvironment=test to the
       JVM command line will expose the properties located in META-INF/test.
       Likewise, you can set a system environment variable to do the same thing.

       The located property files are parsed and their values can
       then be used within other configuration files or in annotation-based
       configuration in the form of ${propertyKey}.

       See com.codesolid.properties.TestBean for an example of injecting these
       properties directly into a bean, and in the test directory, see
       com.codesolid.properties.tests for what the result is.
   --&amp;gt;

    &amp;lt;bean class=&amp;quot;org.springframework.beans.factory.config.PropertyPlaceholderConfigurer&amp;quot;&amp;gt;
        &amp;lt;property name=&amp;quot;locations&amp;quot;&amp;gt;
            &amp;lt;list&amp;gt;
                &amp;lt;value&amp;gt;classpath:META-INF/spring/*.properties&amp;lt;/value&amp;gt;
                &amp;lt;value&amp;gt;classpath:META-INF/${environment}/*.properties&amp;lt;/value&amp;gt;
            &amp;lt;/list&amp;gt;
        &amp;lt;/property&amp;gt;
    &amp;lt;/bean&amp;gt;

    &amp;lt;!-- Scan beans for annotation-based configuration --&amp;gt;
    &amp;lt;context:component-scan base-package=&amp;quot;com.codesolid.properties&amp;quot; /&amp;gt;
&amp;lt;/beans&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2&gt;&lt;a id=&quot;PropertiesFiles&quot;&gt;Some Properties Files to Test&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;To have something to test, we&amp;#39;ve set up three simple properties files.  First, we have a global &amp;quot;common.properties&amp;quot; with our humble title: &lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-bash'&gt;application.name=The Greatest Sample Ever&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Next come two db.properties files:&lt;/p&gt;

&lt;p&gt;test/db.properties:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-bash'&gt;# These are the values we'll use when testing.
database.driverClassName=com.mysql.jdbc.Driver
database.url=jdbc:mysql://localhost/mydb
database.username=myuser
database.password=mypassword&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;production/db.properties:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-bash'&gt;# Different values for the production server
database.driverClassName=com.mysql.jdbc.Driver
database.url=jdbc:mysql://localhost/proddb
database.username=prod_user
database.password=DoubleSecretProbation&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2&gt;&lt;a id=&quot;InjectingProperties&quot;&gt;Injecting Properties&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;To keep things simple, lets inject only two of these properties.  If our setup is correct and we set the environment variable &amp;quot;environment&amp;quot; to &amp;quot;test&amp;quot; we should be able to verify that we get the right application name (a global property), and the test environment value for (for example) database.username. &lt;/p&gt;

&lt;p&gt;We inject these properties in TestBean.java:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;]
package com.codesolid.properties;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

@Service(value=&amp;quot;testBean&amp;quot;)
public class TestBean {
    private String applicationName;
    private String databaseUser;

    // This property is set in common.properties and will be the same
    // for all environments, test, production, etc.
    @Value(&amp;quot;${application.name}&amp;quot;)
    public void setApplicationName(String applicationName) {
        this.applicationName = applicationName;
    }

    // In contrast, this property and other database related properties
    // are quite likely different in test and production.
    @Value(&amp;quot;${database.username}&amp;quot;)
    public void setDatabaseUser(String databaseUser) {
        this.databaseUser = databaseUser;
    }

    public String getDatabaseUser() {
        return databaseUser;
    }

    public String getApplicationName() {
        return applicationName;
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2&gt;&lt;a id=&quot;Testing&quot;&gt;Testing with JUnit&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;As a final step, let&amp;#39;s make sure we&amp;#39;re running our test environment and our properties are injected correctly.  Our JUnit test is as follows:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;]
package com.codesolid.properties.tests;

import com.codesolid.properties.TestBean;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.context.ApplicationContext;


import static org.junit.Assert.assertEquals;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(&amp;quot;classpath:META-INF/spring/applicationContext.xml&amp;quot;)
public class ContextTests {

    @SuppressWarnings(&amp;quot;SpringJavaAutowiringInspection&amp;quot;)
    @Autowired
    private ApplicationContext ac;

    /* Verify that we've correctly injected a property from the Spring directory 
    (in this case, the common.properties file).  Property files in this
    directory define properties that can be used in all environments. */
    @Test
    public void testApplicationName() {
        String expected = &amp;quot;The Greatest Sample Ever&amp;quot;;
        TestBean test = (TestBean) ac.getBean(&amp;quot;testBean&amp;quot;);
        String actual = test.getApplicationName();
        assertEquals(actual, expected);
    }

    /* Verify that we've correctly injected a property from the test directory's 
    db.properties. Property files in the test directory only apply to the test 
    environment and can be overridden in the production directory (for example). */
    @Test
    public void testDatabaseConfiguredCorrectly() {
        String expected = &amp;quot;myuser&amp;quot;;
        TestBean test = (TestBean) ac.getBean(&amp;quot;testBean&amp;quot;);
        String actual = test.getDatabaseUser();
        assertEquals(actual, expected);
    }&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Working with the PropertyPlaceholderConfigurer class lets you easily configure your WAR file for production, test, and any other environments you need -- and with that out of the way, you can now get busy writing your application.  Enjoy!&lt;/p&gt;
</description>
				<pubDate>Sat, 01 Jun 2013 23:08:04 -0700</pubDate>
				<link>/configuring-spring-for-test-versus-production</link>
				<guid isPermaLink="true">/configuring-spring-for-test-versus-production</guid>
			</item>
			
		
			
			<item>
				<title>A Simple Hibernate, MySQL, and JUnit Tutorial</title>
				<description>&lt;div id=&quot;table_of_contents&quot;&gt;
&lt;h1&gt;Table of Contents&lt;/h1&gt;
&lt;ul &gt;
&lt;li&gt;&lt;a href=&quot;#GettingStarted&quot;&gt;Getting Started with Hibernate and MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#ConfiguringMYSQL&quot;&gt;Configuring MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#ConfiguringHibernate&quot;&gt;Configuring Hibernate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#MinimizingSetupTime&quot;&gt;Minimizing Setup Time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#SimpleEntity&quot;&gt;A Simple Hibernate Entity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#GenericEntity&quot;&gt;A Hibernate Generic Entity Storage Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#JUnit&quot;&gt;The JUnit Test&lt;/a&gt;&lt;/li&gt;

&lt;/ul&gt;
&lt;/div&gt;

&lt;h2&gt;&lt;a id=&quot;GettingStarted&quot;&gt;Getting Started With Hibernate and MySQL&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;In this tutorial, we&amp;#39;re once again going to use JUnit as a learning tool for exploring various Java technologies -- in this case Hibernate.  We&amp;#39;ll be configuring Hibernate to run with MySQL in a way that works both in a standalone application or in a Spring or other web application.  Along the way we&amp;#39;ll also be setting up Log4J logging for hibernate.  We&amp;#39;ll work on a small generics class that -- although it doesn&amp;#39;t really do much more than wrap a few Hibernate functions -- will allow us to demonstrate and test out the basic CRUD operations -- Create, Read, Update, and Delete.&lt;/p&gt;

&lt;p&gt;As usual, you can download the complete project files for IntelliJ Idea from our &lt;a href=&quot;https://github.com/CodeSolid/tutorials&quot;&gt;Tutorials Repository on Github&lt;/a&gt;. This tutorial is located in the HibernateGeneric directory.  If you&amp;#39;re using Eclipse, check out our &lt;a href=&quot;/how-to-run-the-codesolid-tutorials-in-eclipse/&quot;&gt;Eclipse instructions&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;ConfiguringMYSQL&quot;&gt;Configuring MySQL&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;This tutorial assumes you have mysql installed and can log in as root.  If you don&amp;#39;t have MySQL on your system, you should &lt;a href=&quot;http://dev.mysql.com/doc/refman/5.1/en/windows-installation.html&quot;&gt;start here&lt;/a&gt; and work through the instructions appropriate to your environment.  Go into the mysql monitor (i.e., the mysql command line client).  To do this, run:
&lt;pre&gt;
&amp;lt;PathToMySQLBin&amp;gt;mysql.exe --user=root --password=YourRootPassword
&lt;/pre&gt;
(If you haven&amp;#39;t set a mysql root password, you should -- if you haven&amp;#39;t, you can simply use the command:
&lt;pre&gt;
&amp;lt;PathToMySQLBin&amp;gt;\mysql.exe --user=root
&lt;/pre&gt;
Once you&amp;#39;re connected in the mysql client, use the source command to run the dbsetup.sql script located in the database directory of the tutorial, for example:&lt;/p&gt;

&lt;pre&gt;source database\dbsetup.sql&lt;/pre&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-sql'&gt;CREATE DATABASE tutorials;
USE tutorials;
GRANT ALL ON tutorials.* to 'myuser'@'localhost' identified by 'mypassword';
commit;
flush privileges;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Of course, the user name and password given in this script are pretty brain-dead and certainly not secure so probably want to change them.  If you do, that&amp;#39;s fine, you&amp;#39;ll just need to make one other change, in the hibernate configuration file.  Let&amp;#39;s look at that next:&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;ConfiguringHibernate&quot;&gt;Configuring Hibernate&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;The hibernate configuration file is the file hibernate.cfg.xml in the root of the resources directory (i.e., at src/main/resources).  As you can see, we&amp;#39;ve configured the JDBC driver directly in this file.  If you changed the user name or password in the dbsetup.sql script, you need to make the corresponding chagnes to the &amp;quot;connection.username&amp;quot; and / or &amp;quot;connection.password&amp;quot; properties below.&lt;/p&gt;

&lt;p&gt;You might also experiment with setting the show&lt;em&gt;sql and use&lt;/em&gt;sql_comments to true, especially if you run into problems.  For now they are turned off to keep the test run output a little bit cleaner.&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-http'&gt;&amp;lt;?xml version='1.0' encoding='utf-8'?&amp;gt;
&amp;lt;!DOCTYPE hibernate-configuration PUBLIC
        &amp;quot;-//Hibernate/Hibernate Configuration DTD 3.0//EN&amp;quot;
        &amp;quot;http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd&amp;quot;&amp;gt;

&amp;lt;hibernate-configuration&amp;gt;
    &amp;lt;session-factory&amp;gt;

        &amp;lt;!-- Database connection settings --&amp;gt;
        &amp;lt;property name=&amp;quot;connection.driver_class&amp;quot;&amp;gt;com.mysql.jdbc.Driver&amp;lt;/property&amp;gt;
        &amp;lt;property name=&amp;quot;connection.url&amp;quot;&amp;gt;jdbc:mysql://localhost/tutorials&amp;lt;/property&amp;gt;
        &amp;lt;property name=&amp;quot;connection.username&amp;quot;&amp;gt;myuser&amp;lt;/property&amp;gt;
        &amp;lt;property name=&amp;quot;connection.password&amp;quot;&amp;gt;mypassword&amp;lt;/property&amp;gt;

        &amp;lt;!-- JDBC connection pool (use the built-in connection pool) --&amp;gt;
        &amp;lt;property name=&amp;quot;connection.pool_size&amp;quot;&amp;gt;1&amp;lt;/property&amp;gt;

        &amp;lt;!--
            SQL dialect
            There are other mysql dialects avaialable IF you run INTO trouble WITH this one.
            The FULL list IS:
                MySQL5Dialect
                MySQL5InnoDBDialect
                MySQLDialect
                MySQLInnoDBDialect
                MySQLMyISAMDialect
            See http://docs.jboss.org/hibernate/orm/3.5/api/org/hibernate/dialect/package-summary.html
        --&amp;gt;
        &amp;lt;property name=&amp;quot;dialect&amp;quot;&amp;gt;org.hibernate.dialect.MySQL5InnoDBDialect&amp;lt;/property&amp;gt;

        &amp;lt;!-- Enable Hibernate's automatic session context management --&amp;gt;
        &amp;lt;property name=&amp;quot;current_session_context_class&amp;quot;&amp;gt;thread&amp;lt;/property&amp;gt;

        &amp;lt;!-- Disable the second-level cache  --&amp;gt;
        &amp;lt;property name=&amp;quot;cache.provider_class&amp;quot;&amp;gt;org.hibernate.cache.NoCacheProvider&amp;lt;/property&amp;gt;

        &amp;lt;!-- Change these values to true to echo all executed SQL to stdout --&amp;gt;
        &amp;lt;property name=&amp;quot;show_sql&amp;quot;&amp;gt;false&amp;lt;/property&amp;gt;
        &amp;lt;property name=&amp;quot;use_sql_comments&amp;quot;&amp;gt;false&amp;lt;/property&amp;gt;

        &amp;lt;!-- Drop and re-create the database schema on startup --&amp;gt;
        &amp;lt;property name=&amp;quot;hbm2ddl.auto&amp;quot;&amp;gt;update&amp;lt;/property&amp;gt;

        &amp;lt;!-- This is the entity class that we'll be testing. --&amp;gt;
        &amp;lt;mapping class=&amp;quot;com.codesolid.tutorials.model.entities.Actor&amp;quot;/&amp;gt;

    &amp;lt;/session-factory&amp;gt;
&amp;lt;/hibernate-configuration&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I won&amp;#39;t post the log4j configuration here.  Hibernate issues a warning if logging is not enabled, so I have configured Hibernate to use the log file, &amp;quot;log4j.log&amp;quot; in the root of the project directory.  The configuration file for log4j is at src/main/resources/log4j.xml.&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;MinimizingSetupTime&quot;&gt;Minimizing Setup Time&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;As with any process that initially connects to a database, initializing Hibernate sessions takes a fair amount of time, and is not something you want to be doing over and over again in your tests.  In the case of Hibernate, creating the SessionFactory object takes even more time, adding up to about 1.4 seconds on a laptop, or about .8 seconds on a faster machine.  We don&amp;#39;t want to be running that for every test class.  (To be sure, in the kind of one-class suite we&amp;#39;re running in this tutorial, it wouldn&amp;#39;t make a difference, but one of the purposes of these tutorials is to give you steal-able code that you can use in larger projects.  What we want is to initialize the SessionFactory only once.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;http://docs.jboss.org/hibernate/orm/3.3/reference/en-US/html/tutorial.html&quot;&gt;Hibernate tutorial&lt;/a&gt; that comes with the Hibernate docs gives us a part of the solution, the HibernateUtil class, which exists for the sole purpose of ensuring a one time initialization of a SessionFactory, which it then caches as a static object.  I&amp;#39;ve used this class pretty much verbatim in the current tutorial, changing only the package name.&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;// This file is adapted with only minor changes from the original in the hibernate
// tutorial, http://docs.jboss.org/hibernate/orm/3.3/reference/en-US/html/tutorial.html.
package com.codesolid.tutorials.model.dal;

import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;

public class HibernateUtil {

    private static final SessionFactory sessionFactory = buildSessionFactory();

    private static SessionFactory buildSessionFactory() {
        try {
            // Create the SessionFactory from hibernate.cfg.xml
            return new Configuration().configure().buildSessionFactory();
        }
        catch (Throwable ex) {
            // Make sure you log the exception, as it might be swallowed
            System.err.println(&amp;quot;Initial SessionFactory creation failed.&amp;quot; + ex);
            throw new ExceptionInInitializerError(ex);
        }
    }

    public static SessionFactory getSessionFactory() {
        return sessionFactory;
    }

}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;OK, so we have a class where we can cache our SessionFactory, but the question remains -- how should we wire that up to our JUnit tests?  Since JUnit 4.9, we can use the @ClassRule annotation to set up a test suite with before and after methods that will run before and after all the classes in the suite have run.  This allows for the initialization of expensive resoures once before all the tests in the suite are run.&lt;/p&gt;

&lt;p&gt;The following listing shows the RuleSuite test suite, which builds with the rest of the tests in the src\test\java\code\codesolid\tests directory:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;package com.codesolid.tests;

import com.codesolid.tutorials.model.dal.HibernateUtil;
import org.apache.log4j.Level;
import org.apache.log4j.xml.Log4jEntityResolver;
import org.junit.ClassRule;
import org.junit.rules.ExternalResource;
import org.junit.runner.RunWith;
import org.junit.runners.Suite;
import org.apache.log4j.Logger;

@RunWith( Suite.class )
@Suite.SuiteClasses( {
        TestStorage.class
        /* , Add more test classes here separated by commas*/
} )
public class RuleSuite{

    static HibernateUtil util;

    // This is a static field.  Per the ClassRule documentation,
    // to use a ClassRule we need a field that is &amp;quot;public, static,
    // and a subtype of of TestRule.&amp;quot;
    // See http://junit.czweb.org/apidocs/org/junit/ClassRule.html
    @ClassRule
    public static ExternalResource testRule = new ExternalResource(){
        @Override
        protected void before() throws Throwable{
            Logger.getLogger(&amp;quot;com.codesolid.tests&amp;quot;).log(Level.DEBUG, &amp;quot;Inside RuleSuite::ExternalResource::before.&amp;quot;);
            util = new HibernateUtil();
        };

        @Override
        protected void after(){
            // Nothing to do here in this case.
            Logger.getLogger(&amp;quot;com.codesolid.tests&amp;quot;).log(Level.DEBUG, &amp;quot;Inside RuleSuite::ExternalResource::after.&amp;quot;);
        };
    };
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I&amp;#39;ve added some logging methods so you can see that the before and after methods are run only once at the start and end of the suite.&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;SimpleEntity&quot;&gt;A Simple Hibernate Entity&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;In order to have an entity to save, I created an &amp;quot;Actor&amp;quot; entity.  This represents a user in the system, but I&amp;#39;ve named the class &amp;quot;Actor&amp;quot; to avoid any potential conflict with the SQL keyword by the same name.  I am using Hibernate annotations to define the entity.&lt;/p&gt;

&lt;p&gt;@Table allows us to name the table.
@Entity marks the class as representing a Hibernate Entity, that is to say, an object that Hibernate can save to and load from the database.&lt;/p&gt;

&lt;p&gt;For the Id primary key field, we use the following Hibernate annotations to mark the field as the primary key and to auto-increment the field for each new record:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;@Id
@GeneratedValue(generator=&amp;quot;increment&amp;quot;)
@GenericGenerator(name=&amp;quot;increment&amp;quot;, strategy = &amp;quot;increment&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Finally, we used the column annotation to explicitly set the field name for the Role property to &amp;quot;user_role&amp;quot;:&lt;/p&gt;

&lt;p&gt;@Column(name=&amp;quot;user_role&amp;quot;)&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;/**
 * Class Actor
 * Description:  A user of the system, the subject of a user story.  We use
 *               actor instead of user as table name to avoid any conflict
 *               with the database concept of user
 */
package com.codesolid.tutorials.model.entities;
import org.hibernate.annotations.GenericGenerator;
import javax.persistence.*;

@Table( name = &amp;quot;ACTORS&amp;quot; )
@Entity
public class Actor {
    public static final String DEFAULT_ROLE = &amp;quot;Standard User&amp;quot;;

    public Actor() {
        setRole(Actor.DEFAULT_ROLE);
    }

    private Long id;
    private String role;

    @Id
    @GeneratedValue(generator=&amp;quot;increment&amp;quot;)
    @GenericGenerator(name=&amp;quot;increment&amp;quot;, strategy = &amp;quot;increment&amp;quot;)
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }


    @Column(name=&amp;quot;user_role&amp;quot;)
    public String getRole() {
        return role;
    }

    public void setRole(String role) {
        this.role = role;
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The final step to making the Entity work is one that&amp;#39;s easy to forget, but as we saw when we discussed the hibernate.cfg.xml file, make sure you include a mapping to the entity class, as we show again below:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-http'&gt;&amp;lt;!-- This is the entity class that we'll be testing. --&amp;gt;
&amp;lt;mapping class=&amp;quot;com.codesolid.tutorials.model.entities.Actor&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2&gt;&lt;a id=&quot;GenericEntity&quot;&gt;A Hibernate Generic Entity Storage Class&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;While working with Hibernate enitities,  it struck me that many of the basic operations one might do with an entity could be captured well in a generic class, which is what we&amp;#39;ll be using to test here. As you can see below, each of the methods was pretty much a wrapper around a single Hibernate session call -- with the exception of BeginTransaction, which combines getting the session from the session factory and starting the transaction.  &lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;package com.codesolid.tutorials.model.dal;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;

public class Storage  {

    public static SessionFactory getSessionFactory() {
        return HibernateUtil.getSessionFactory();
    }

    private T entity;
    private Session session;

    public void beginTransaction() {
        session = Storage.getSessionFactory().getCurrentSession();
        session.beginTransaction();
    }

    public void commit () {
        session.getTransaction().commit();
    }

    public Storage(T entity) {
        this.entity = entity;
    }

    public void update(T entity) {
        session.update(entity);
    }

    public Long insert(T entity) {
        return (Long) session.save(entity);
    }

    public void delete(T entity) {
        session.delete(entity);
    }

    // This call will issue a warning about the unchecked cast,
    // but we know the value returned will be of the right type because
    // we specify the entity (T) class in the call.
    //
    // Note that &amp;quot;get&amp;quot; will return a null if no value with this id fails
    @SuppressWarnings (value=&amp;quot;unchecked&amp;quot;)
    public T getById(Long id) {
        return (T) session.get(entity.getClass(), id);        
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Taken together, this class and the unit tests I wrote for it were a good way to discover a couple of interesting Hibernate gotchas.  The first Hibernate mine that I steped on was that objects are no longer usable outside the context of a transaction.  Before my testing uncovered this, my original implementation of getById was called loadById, and the implementation and test looked something like this:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;// Implementation  
    public T getById(Long id) {
        storage.beginTransaction();
        T obj = (T) session.load(entity.getClass(), id);
        session.getTransaction().commit();
        return obj;
    }

   // Test code:
   // ...
   Actor actor  = storage.getById(id);
   assertEquals(actor.getRole(), &amp;quot;Some Role&amp;quot;);&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This seemed like a safe approach (albeit not an efficient one since each call is wrapped in a transaction).  As it turns out, because Hibernate uses lazy initialization, the object returned from getById needed to still have the transaction active.  As a result, I got the following exception:&lt;/p&gt;

&lt;p&gt;org.hibernate.LazyInitializationException: could not initialize proxy - no Session&lt;/p&gt;

&lt;p&gt;This caused me to push the transaction management out to the client, so I exposed beginTransaction and commit methods on my storage class.&lt;/p&gt;

&lt;p&gt;At that point, the code and test looked like:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;// Implmentation
public T getById(Long id) {
    return (T) session.load(entity.getClass(), id);
}

// Test code
storage.beginTransaction();
Actor actor  = storage.getById(id);
assertEquals(actor.getRole(), &amp;quot;Some Role&amp;quot;);
storage.commit();&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The second interesting Hibernate quirk that I ran into was in trying to test my delete method.  Originally I wrote the test by deleting an object and then checking for the ObjectNotFoundException when I called loadById in an effort to reload the deleted object.  The first time I ran it, that test passed, but a few minutes later it failed.  It turns out that loadById may or may not return an ObjectNotFoundException, or it may instead return a &amp;quot;proxy object&amp;quot;, though I admit I have a bit of a hard time following the architectural genius behind the decision to return a proxy to an object that doesn&amp;#39;t exist yet -- or in this case, doesn&amp;#39;t exist any more.  At that time I researched it and found that getById has the more reasonable behavior of reliably returning a for objects that don&amp;#39;t exist, so the test and the code evolved accordingly.&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;JUnit&quot;&gt;The JUnit Test&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;With that, the final form of the JUnit test is below.  Even though I&amp;#39;m showing it last, in reality the process was more test-first, going back and forth between the tests, the configuration, and the classes under development.&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;package com.codesolid.tests;

import com.codesolid.tutorials.model.entities.*;
import com.codesolid.tutorials.model.dal.Storage;
import org.junit.Test;
import static org.junit.Assert.*;

public class TestStorage {

    @Test
    public void testWrite() {
        // Just a write, verify id set
        Actor user = new Actor();
        Storage storage = new Storage(user);
        storage.beginTransaction();
        user.setRole(&amp;quot;SuperUser&amp;quot;);
        assertNull(user.getId());
        storage.insert(user);
        assertNotNull(user.getId());
        storage.commit();
    }

    @Test
    public void testWriteAndRead() {

        // This time write and read back
        String overRideRole = &amp;quot;SuperUser&amp;quot;;

        // Write
        Actor actor = new Actor();
        Storage storage = new Storage(actor);
        storage.beginTransaction();
        actor.setRole(overRideRole);
        assertNull(actor.getId());
        storage.insert(actor);
        assertNotNull(actor.getId());
        Long id = actor.getId();
        storage.commit();

        // Read and verify
        Actor actor2  = new Actor();
        assertEquals(actor2.getRole(), Actor.DEFAULT_ROLE);
        storage = new Storage(actor2);
        storage.beginTransaction();
        actor2 = storage.getById(id);
        assertEquals(actor2.getRole(), overRideRole);
        storage.commit();
    }


    @Test
    public void testUpdate() {

        String overRideRole = &amp;quot;SuperUser&amp;quot;;
        String newOverrideRole = &amp;quot;GUEST&amp;quot;;

        // Insert an actor
        Actor actor = new Actor();
        Storage storage = new Storage(actor);
        storage.beginTransaction();
        actor.setRole(overRideRole);
        assertNull(actor.getId());
        storage.insert(actor);
        assertNotNull(actor.getId());
        Long id = actor.getId();
        storage.commit();

        // Read it back
        Actor actor2  = new Actor();
        assertEquals(actor2.getRole(), Actor.DEFAULT_ROLE);
        storage.beginTransaction();
        actor2 = storage.getById(id);
        assertEquals(actor2.getRole(), overRideRole);

        // Update it
        actor2.setRole(newOverrideRole);
        storage.update(actor2);
        storage.commit();

        // Read it again and verify update
        storage.beginTransaction();
        Actor actor3  = storage.getById(id);
        assertEquals(actor3.getRole(), newOverrideRole);
        storage.commit();
    }

    @Test
    public void testDelete() {

        Actor actor = new Actor();
        Storage storage = new Storage(actor);

        // Write
        storage.beginTransaction();
        storage.insert(actor);
        Long id = actor.getId();
        storage.commit();

        // Delete it now
        assert(actor.getId() &amp;gt; 0);
        storage.beginTransaction();
        storage.delete(actor);
        storage.commit();

        // Now we can't read it back, as expected
        storage.beginTransaction();
        Actor actor2 = storage.getById(id);
        assertNull(actor2);
        storage.commit();
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
				<pubDate>Wed, 22 May 2013 18:00:40 -0700</pubDate>
				<link>/a-simple-hibernate-mysql-and-junit-tutorial</link>
				<guid isPermaLink="true">/a-simple-hibernate-mysql-and-junit-tutorial</guid>
			</item>
			
		
			
			<item>
				<title>How to Run the CodeSolid Tutorials in Eclipse</title>
				<description>&lt;p&gt;If you&amp;#39;ve taken a look at the &lt;a href=&quot;https://github.com/CodeSolid/tutorials&quot;&gt;Github Repository&lt;/a&gt; for the CodeSolid tutorials, you may have noticed that the project files all use IntelliJ Idea.  I use the Ultimate Edition (currently Version 12) for most of my development, but recently I promised to look into using these project files in Eclipse.  I had a feeling it would work since I have sourced the Maven project -- i.e., the POM files, those named pom.xml in the root of each tutorial -- but being the good test infected developer that I am, I try not to take &amp;quot;that should work&amp;quot; for granted.&lt;/p&gt;

&lt;p&gt;Well, the good news in this case is that not only should it work, but it actually does.  I have tested it out on the Spring Tool Suite version 3.2, as well as on a more vanilla version of Eclipse (Indigo -- version 3.7).  Because we&amp;#39;re importing Maven files, Maven is resolving the dependencies -- meaning the Spring Tutorial works even without the Spring Tool Suite.  (How cool is that -- it&amp;#39;s magic!)  To run the projects, start by right clicking on any empty space in the Package Explorer window, as shown below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/tutorials_in_eclipse/EclipseImport.jpg&quot; alt=&quot;EclipseImport&quot;&gt;&lt;/p&gt;

&lt;p&gt;From the menu, select Import.  In the Import dialog box, you want to select Maven, then Existing Maven Project, as shown below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/tutorials_in_eclipse/EclipseImport2.png&quot; alt=&quot;EclipseImport2&quot;&gt;&lt;/p&gt;

&lt;p&gt;If you then navigate to the root of the tutorials directory, you can select which tutorials you want to import.  I&amp;#39;m writing this article when there are only two tutorials available -- you&amp;#39;ll likely see more projects available.  Select the project(s) you want, click finish, and you&amp;#39;re done!  You can now run the tutorials in Eclipse.  Enjoy!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/tutorials_in_eclipse/EclipseImport3.png&quot; alt=&quot;EclipseImport3&quot;&gt;&lt;/p&gt;
</description>
				<pubDate>Fri, 17 May 2013 13:04:09 -0700</pubDate>
				<link>/how-to-run-the-codesolid-tutorials-in-eclipse</link>
				<guid isPermaLink="true">/how-to-run-the-codesolid-tutorials-in-eclipse</guid>
			</item>
			
		
			
			<item>
				<title>Spring Unit Testing Using JUnit</title>
				<description>&lt;div id=&quot;table_of_contents&quot;&gt;
&lt;h1&gt;Table of Contents&lt;/h1&gt;
&lt;ul &gt;
&lt;li&gt;&lt;a href=&quot;#Introduction&quot;&gt;The Simplest Case - Exploring the IDE Starter Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#TestingSpringBeans&quot;&gt;Testing Some Basic Spring Beans&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#ApplicationContext&quot;&gt;Pojo Style: Getting an Application Context in a junit.org Test Runner&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;h2&gt;&lt;a id=&quot;Introduction&quot; name=&quot;Introduction&quot;&gt;Exploring the IDE Starter Project&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;In this tutorial we&amp;#39;ll set up some really basic Spring unit tests -- the sort of thing that is vanilla enough so you can steal it and get started on your own tests. I developed these tests in IntelliJ Idea Ultimate Edition, but when I check them in to the &lt;a href=&quot;https://github.com/codesolid/tutorials&quot;&gt;Github repository&lt;/a&gt; I&amp;#39;ll try to make something available in Maven and Eclipse, so you can try it out that way if you like. (Update -- that&amp;#39;s done, &lt;a href=&quot;http://www.particlewave.com/2013/05/17/how-to-run-the-codesolid-tutorials-in-eclipse/&quot;&gt;here are the instructions&lt;/a&gt;).  I originally developed these tests in a web app I was working on, but to keep things simple let&amp;#39;s start instead by creating a new project in Idea as a &amp;quot;Spring Application&amp;quot; for the project type.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.particlewave.com/wordpress/wp-content/uploads/2013/05/SwingJUnitScreenshot1.jpg&quot;&gt;&lt;img src=&quot;http://www.particlewave.com/wordpress/wp-content/uploads/2013/05/SwingJUnitScreenshot1.jpg&quot; alt=&quot;Spring Starter Project in IntelliJ&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can then make the project from the build menu, and you&amp;#39;ll see if you look around in the test directory (actually src\test\java\foo.bar, to be precise), that Idea has created your first Spring Test for you as SpringAppTests.java:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;package foo.bar;

import junit.framework.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(&amp;quot;classpath:spring-config.xml&amp;quot;)
public class SpringAppTests {
@Autowired
private HelloService helloService;

@Test
public void testSayHello() {
Assert.assertEquals(&amp;quot;Hello world!&amp;quot;, helloService.sayHello());
}
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This unit test is doing a few interesting things. First of all, it&amp;#39;s annotated as &amp;quot;@RunWith(SpringJUnit4ClassRunner.class)&amp;quot;. The Spring JUnit runner, which works in conjunction with the Spring &lt;a href=&quot;http://static.springsource.org/spring/docs/3.0.x/api/org/springframework/test/context/TestContextManager.html&quot;&gt;TestContextManager&lt;/a&gt;, allows you to easily set up Spring ApplicationContexts for your tests, as you can see it does here with the annotation @ContextConfiguration(&amp;quot;classpath:spring-config.xml&amp;quot;). Inside the SpringAppTests class, you can see that you can also use Dependency Injection to wire up your objects for you. Note that the object that&amp;#39;s under the @Autowired annotation is used in the test without an explicit constructor call.&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;TestingSpringBeans&quot; name=&quot;TestingSpringBeans&quot;&gt;Testing Some Basic Spring Beans&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Now let&amp;#39;s write our own test to exercise some basic beans to see how the Spring framework injects dependencies as needed. We&amp;#39;ll want to compare that to what would happen outside of the framework so we&amp;#39;ll set up our beans in such a way as to work differently depending on the context -- Spring versus non-Spring. (I was tempted to say Spring versus Fall in that last sentence, but Java suffers from enough puns already).&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s say we want to model some classes to capture software User Stories. Of course, every story needs a character, so we&amp;#39;ll want a class to model the person using the software. One very useful form of user story takes the basic form: As a &lt;Type of User&gt; I want to &lt;Something the software can do&gt; in order that &lt;some benefit to the user&gt;.&lt;/p&gt;

&lt;p&gt;So let&amp;#39;s write two beans to capture the relationship between a user and the UserStory. First, the UserStory class:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;// UserStory.java

package com.codesolid.tutorials;

/**
* Class UserStory
* Description: An example bean that models a user story.
* Uses the standard story form:
* &amp;quot;As a ______&amp;quot; (user role), &amp;quot;I want to ______&amp;quot; (actionDesired)
* &amp;quot;so that _____&amp;quot; (outcomeDesired).
*/
public class UserStory {
private User user;
private String actionDesired = &amp;quot;&amp;quot;;
private String outcomeDesired = &amp;quot;&amp;quot;;
public UserStory() {
}

public User getUser() {
return user;
}

public void setUser(User user) {
this.user = user;
}

public String getActionDesired() {
return actionDesired;
}

public void setActionDesired(String actionDesired) {
this.actionDesired = actionDesired;
}

public String getOutcomeDesired() {
return outcomeDesired;
}

public void setOutcomeDesired(String outcomeDesired) {
this.outcomeDesired = outcomeDesired;
}
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And the User class:
&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;package com.codesolid.tutorials;&lt;/p&gt;

&lt;p&gt;/**
* Class User
* Description: An example of a bean dependency. Story is dependent on Actor.
*/
public class User {
private String role;&lt;/p&gt;

&lt;p&gt;public User() {
setRole(&amp;quot;User&amp;quot;);
}&lt;/p&gt;

&lt;p&gt;public String getRole() {
return role;
}&lt;/p&gt;

&lt;p&gt;public void setRole(String role) {
this.role = role;
}
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;As you can see, if you were to construct a UserStory object at this point, the user field it contains would be null. The trade-off on class dependencies is basically this: You can ensure that your objects are always fully constructed by putting all the dependencies in the constructor. However, this means that your object becomes tightly coupled with other objects, and harder to test. Having accessors to set the dependencies means you have the flexibility to test only that part of the object that relies on the dependencies, or you can set up all your dependencies up front and test a fully constructed object.&lt;/p&gt;

&lt;p&gt;Spring can inject the dependencies either way, but many people prefer using the accessors using what&amp;#39;s known as &amp;quot;Setter Based Dependency Injection&amp;quot;.&lt;/p&gt;

&lt;p&gt;Take a look at the file src\main\resources\spring-config.xml. Here we&amp;#39;ve configured the dependency using XML. (Spring also allows this to be done using annotations, but we won&amp;#39;t cover that in this tutorial):&lt;/p&gt;

&lt;p&gt;When we add our dependencies, the file looks like this:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-XML'&gt;xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;
xmlns:context=&amp;quot;http://www.springframework.org/schema/context&amp;quot;
xsi:schemaLocation=&amp;quot;http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context.xsd&amp;quot;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We&amp;#39;re now ready to write some tests against this code. I&amp;#39;ll show you the whole listing in one go, since I&amp;#39;ve commented it fairly heavily to show what we&amp;#39;re demonstrating in each case. Bear with the imports -- there&amp;#39;s some code underneath, I promise!&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;package com.codesolid.tutorials.tests;

import static org.junit.Assert.*;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.support.FileSystemXmlApplicationContext;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.context.ApplicationContext;
import com.codesolid.tutorials.UserStory;
import com.codesolid.tutorials.User;
import static org.junit.Assert.assertEquals;
import static org.springframework.test.web.servlet.setup.MockMvcBuilders.webAppContextSetup;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(&amp;quot;file:src/main/resources/spring-config.xml&amp;quot;)
public class ContextTests {

@SuppressWarnings(&amp;quot;SpringJavaAutowiringInspection&amp;quot;)
@Autowired
protected ApplicationContext ac;

// Using ApplicationContext
// The getBean method is the workhorse of the Spring ApplicationContext.
// The user field in the UserStory object was set up (dependency injected)
// by Spring:
@Test
public void testUserNotNull() {
UserStory story = (UserStory) ac.getBean(&amp;quot;userStory&amp;quot;);
assertNotNull(story.getUser());
}

// Not using ApplicationContext
// Regular non-Spring instantiation
// Instantiating our own UserStory, you can see that the user
// is null.
@Test
public void testUserStoryNotFromContext() {
UserStory story = new UserStory();
assertNull(story.getUser());
}

// Not using ApplicationContext
// Regular non-Spring instantiation
// The default role if you just call the constructor
// is &amp;quot;User&amp;quot;.
@Test
public void testNonSpringUserDefaultRole()
{
User u = new User();
assertEquals(u.getRole(), &amp;quot;User&amp;quot;);
}

// Using ApplicationContext
// Since Spring instantiated this according to the property
// from spring-config.xml, it overrode the default &amp;quot;user&amp;quot;
// role with &amp;quot;SuperGenius User&amp;quot;. (This presumably
// is Wile E. Coyote.)
@Test
public void testUserRoleIsAsExpected() {
UserStory story = (UserStory) ac.getBean(&amp;quot;userStory&amp;quot;);
assertEquals(story.getUser().getRole(), &amp;quot;SuperGenius User&amp;quot;);
}
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As you can see, Spring allows for a great deal of flexibility in configuring the objects in the system. In a simple context like this one it may be hard to see the advantage of this, but in the context of a large application, having a configuration system like this in place means that the system is very flexible.&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;ApplicationContext&quot; name=&quot;ApplicationContext&quot;&gt;Getting an Application Context in a junit.org Test Runner&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;You&amp;#39;ll probably use the SpringJUnit4ClassRunner for most of your Spring testing, since it is derived from the &amp;quot;vanilla&amp;quot;, junit.orgJ Unit4ClassRunner. However it&amp;#39;s also possible to get an ApplicationContext outside of the context of the Spring test runner, and doing this in JUnit demonstrates how to achieve this programatically. The following sample shows some of the same tests we ran earlier set up in this way:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;package com.codesolid.tutorials.tests;
import com.codesolid.tutorials.UserStory;
import org.junit.Test;
import org.junit.Before;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.FileSystemXmlApplicationContext;
import static org.junit.Assert.*;

/* Here we run one of the same tests we run in ContextTests, but we separate it out here to demonstrate
* we can do it with a POJU (Plain Old JUnit :) test runner.
*/
public class JUnitContextTests {

ApplicationContext ac;

@Before
public void setUp()
{
ac = new FileSystemXmlApplicationContext(&amp;quot;file:src/main/resources/spring-config.xml&amp;quot;);
}

@Test
public void testUserCorrectFromPlainOldJUnitTest() {

UserStory story = (UserStory) ac.getBean(&amp;quot;userStory&amp;quot;);
// Spring is working fine using this app context
assertEquals(story.getUser().getRole(), &amp;quot;SuperGenius User&amp;quot;);

// In this case our User is not wired up
UserStory story2 = new UserStory();
assertNull(story2.getUser());
}

@Test
public void testPrewiredUserCorrect() {
UserStory story = (UserStory) ac.getBean(&amp;quot;userStory&amp;quot;);
assertEquals(story.getUser().getRole(), &amp;quot;SuperGenius User&amp;quot;);
}
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I hope you enjoyed this tutorial on Spring Unit Testing -- feel free to leave a comment if you&amp;#39;re finding it useful.&lt;/p&gt;
</description>
				<pubDate>Thu, 16 May 2013 12:32:44 -0700</pubDate>
				<link>/spring-unit-testing-using-junit</link>
				<guid isPermaLink="true">/spring-unit-testing-using-junit</guid>
			</item>
			
		
			
			<item>
				<title>Pros and Cons of Test Driven Development</title>
				<description>&lt;p&gt;If you ask anyone who works with me, I&amp;#39;m a huge fan of automated unit testing in general and Test Driven Development (TDD) in particular. Ever since I first tried it out on a project eleven years ago, I&amp;#39;ve been convinced that Test Driven Development is a huge improvement over the number one software development &amp;quot;methodology&amp;quot; in the U.S.: code and fix.&lt;/p&gt;

&lt;p&gt;But if TDD is so cool, the last sentence begs a very important question: why is code and fix so popular? Should you be considering more unit testing for your next project, or will you do just fine without it? Are there legitimate reasons not to consider automated unit testing? How much testing is enough?  What are the pros and cons of Test Driven Development and automated unit testing?&lt;/p&gt;

&lt;h3&gt;Pros&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you&amp;#39;re a software manager, the number one benefit to consider for automated unit testing is reduced costs. This may seem paradoxical -- how can writing &lt;strong&gt;more&lt;/strong&gt; code cost you &lt;strong&gt;less&lt;/strong&gt;? The answer is that unit tests let your developers find bugs earlier in the development process than they would otherwise.  As a result of this, empirical studies such as the one conducted by &lt;a href=&quot;http://research.microsoft.com/en-us/groups/ese/nagappan_tdd.pdf&quot;&gt;Nagappan et al&lt;/a&gt;. at Microsoft and IBM have shown a drop in the defect density of between 40% and 90% for teams using test driven development.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Unit tests are especially valuable as a safety net when the code needs to be changed to either add new features or fix an existing bug, since the  sanity check for new changes. Since maintenance accounts for between 60 and 90% of the software life cycle, it&amp;#39;s hard to overstate how the time taken up front to create a decent set of unit tests can pay for itself over and over again over the lifetime of the project.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Another big plus to automated unit testing is something that rarely gets much mention but is crucially important. Writing unit tests during development means you&amp;#39;ll always have a stub for exercising a given method in the debugger. Getting my start 20,000 years ago as I did as a C and C++ programmer -- there be pointers there! -- running your code through the debugger as you were writing it was something that All-Right-Thinking-Programmers(tm) had to do. As my friend, Jim Alisago, put it early on in my career, &amp;quot;You might as well start in the debugger because you&amp;#39;re going to end up there anyway.&amp;quot; I sometimes get the impression reading the literature that Unit Testing replaces debugging -- on the contrary, to me, it enables it and enhances it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Testing while writing also forces you to try to make your interfaces clean enough to be tested. It&amp;#39;s sometimes hard to see the advantage of this until you work on a body of code where it wasn&amp;#39;t done, and the only way to exercise and focus on a given piece of code is to run the whole system and set a break-point. Unit tested code therefore tends to be less tightly coupled than code that sprang fully formed from the clever mind of a cowboy developer.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Unit tests are a fantastic learning tool for developers using new technologies. Whenever I encounter something obtuse in some bit of software documentation, I find myself reaching for a small set of unit tests. Unit tests let me quickly find where the skeletons are buried in a new framework.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Along the same lines serve as documentation for existing code, showing developers new to the code how it works.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Cons&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;There is of course the up front cost of writing the unit tests.   I believe that in almost all cases this cost will be amortized over the life of the project.  However, if a quick and dirty prototype is needed in a hurry, this initial time cost may not be acceptable.  A caveat is in order here, however:  many a quick and dirty prototype has been rushed from developer conference to deliverable without stopping at go or collecting $200.  Today&amp;#39;s quick and dirty prototype is often tomorrow&amp;#39;s legacy albatross.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Speaking of legacy code, it is far, far easier to introduce unit testing at the start of a coding effort than it is to add unit tests during the maintenance phase of a project.  It&amp;#39;s more difficult enough that Michael Feathers was able to write a wonderful book about it.  However, as the Chinese are alleged to say, the best time to plant a tree was 20 years ago, but the second best time is today.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Like any good technique, unit testing can be carried to an extreme. My own experience has been that the biggest benefits come from a moderate effort, with the tests always exercising the code in the simplest way possible.  If you find yourself frequently re-factoring your tests, there&amp;#39;s a good chance you&amp;#39;re spending too much time on the test suite.  Similarly, there&amp;#39;s not much point to optimizing your tests with stubs and mocks if they don&amp;#39;t take that long to run yet.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Unit tests of course need to be maintained to be useful -- ideally keeping the error / failure rate at zero.  This of course means there are times when the tests themselves have to change to keep track of new changes to the code, but the whole point of the test suite is to bring the impact of your changes into sharp focus.  Breaking existing callers depending on an interface is not a big deal -- but doing it without knowing you did it is a real problem.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Unit tests are just unit tests.  Although, as we mentioned above, they do have a role in documentation, unit tests are not a substitute for documentation. Contrary to what many agile texts would have you believe, not all comments are &amp;quot;smells&amp;quot;.  Similarly, the planning that takes place in the process of producing initial specifications almost always justifies a reasonable effort.  Nor are unit tests a substitute for integration testing, acceptance testing, or other automated / manual testing done by sharp quality engineers.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Mon, 13 May 2013 20:12:16 -0700</pubDate>
				<link>/pros-and-cons-of-test-driven-development</link>
				<guid isPermaLink="true">/pros-and-cons-of-test-driven-development</guid>
			</item>
			
		
			
			<item>
				<title>A Simple JUnit Tutorial using Maven and IntelliJ Idea</title>
				<description>&lt;div id=&quot;table_of_contents&quot;&gt;
&lt;h1&gt;Table of Contents&lt;/h1&gt;
&lt;ul &gt;
&lt;li&gt;&lt;a href=&quot;#WhatIsJUnit&quot;&gt;What is JUnit?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#GetTheTools&quot;&gt;Get the Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#SettingUpTheMavenProject&quot;&gt;Set up the Maven Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#RunInMaven&quot;&gt;Run In Maven&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#ImportingTheProject&quot;&gt;Importing the Maven Project Into Idea&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#YourFirstTest&quot;&gt;Writing Your First Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#BuildingAndRunningTests&quot;&gt;Building and Running the Tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#FixingABug&quot;&gt;Fixing a Bug&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;h2&gt;&lt;a id=&quot;WhatIsJUnit&quot;&gt;What is JUnit?&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;JUnit is a powerful and easy to use tool that every Java programmer should know.  It&amp;#39;s a unit test framework  That is to say, it&amp;#39;s a framework for testing out small pieces of code, such as individual classes and methods, as the code is being developed.&lt;/p&gt;

&lt;p&gt;For those newcomers to Java who aren&amp;#39;t familiar with JUnit, Here is a really simple, &amp;quot;Hello World&amp;quot; style tutorial about how to use JUnit with Maven and IntelliJ Idea Community Edition -- both free tools.  By the way, this tutorial also works fine with the professional edition.&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;GetTheTools&quot;&gt;Get The Tools&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;If you need to set up those tools, here are the  &lt;a href=&quot;http://www.jetbrains.com/idea/download/index.html&quot;&gt;IntelliJ Idea download page&lt;/a&gt; and the &lt;a href=&quot;http://maven.apache.org/download.cgi#Installation&quot;&gt;Maven Download / Installation page&lt;/a&gt;.  Be sure to read the installation page carefully in the case of Maven especially&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;SettingUpTheMavenProject&quot;&gt;Set up the Maven Project&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Though it may seem counter-intuitive, I find that the easiest way to start with Maven and Idea projects is not to start in Idea, but to simply to save a maven project file (&amp;quot;pom.xml&amp;quot;) in a text editor.  Here is that file:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-http'&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;project xmlns=&amp;quot;http://maven.apache.org/POM/4.0.0&amp;quot;
         xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;
         xsi:schemaLocation=&amp;quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;quot;&amp;gt;
    &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;

    &amp;lt;groupId&amp;gt;com.codesolid&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;HelloJUnit&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;1.0&amp;lt;/version&amp;gt;

    &amp;lt;dependencies&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;junit&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;junit&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;4.11&amp;lt;/version&amp;gt;
            &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;
    &amp;lt;/dependencies&amp;gt;

&amp;lt;/project&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2&gt;&lt;a id=&quot;RunInMaven&quot;&gt;Run In Maven&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Save the file above using a plain text editor in a new directory that will be the root directory of you project, then open a command prompt at that location.  Enter the command  &amp;quot;mvn -q install&amp;quot;&lt;/p&gt;

&lt;p&gt;If you&amp;#39;re new to Maven, the cool thing about it is that it will install any dependencies your project needs, so if the universe is behaving as it should you should see output that looks something like:&lt;/p&gt;

&lt;pre&gt;

[debug] execute contextualize
[debug] execute contextualize

--------------------------------------------------
 T E S T S
--------------------------------------------------

Results :

Tests run: 0, Failures: 0, Errors: 0, Skipped: 0
&lt;/pre&gt;

&lt;p&gt;You&amp;#39;ll notice no tests were run -- that&amp;#39;s as expected, since we haven&amp;#39;t written them yet!  Before we do, while still at the command line there&amp;#39;s one more manual step we have to do, and that&amp;#39;s to set up our directory structure in a way that Maven expects it.  On Windows the command is:&lt;/p&gt;

&lt;pre&gt;
md src\main\java
md src\main\resources
md src\test\java
md src\test\resources
&lt;/pre&gt;

&lt;p&gt;On Unix or a Mac the command would be:
&lt;pre&gt;
mkdir -p src/main/java
mkdir -p src/main/resources
mkdir -p src/test/java
mkdir -p src/test/resources
&lt;/pre&gt;&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;ImportingTheProject&quot;&gt;Importing the Project Into Idea&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;At this point you&amp;#39;re ready to open the Idea IDE.  Now we&amp;#39;re going to create an Idea project by importing the maven file we just created.  Click on Import Project, and then navigate to where you have that pom file stored.  It should look something like:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/simple_junit/CaptureJUnit.jpg&quot; alt=&quot;Idea Import Project&quot;&gt;&lt;/p&gt;

&lt;p&gt;On the first dialog that comes up, I usually like to check the box that says &amp;quot;Import Maven projects automatically&amp;quot;, as shown below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/simple_junit/MavenImport.jpg&quot; alt=&quot;Maven Import&quot;&gt;&lt;/p&gt;

&lt;p&gt;You&amp;#39;ll then click through a few more dialog boxes, selecting the default for each.  On the one that asks you to select a JVM, make sure it looks like a valid one is selected.&lt;/p&gt;

&lt;p&gt;Once you&amp;#39;ve imported the project, locate the project view on the left, and navigate to the src\test\java directory, as shown below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/simple_junit/JUnitProjectView.jpg&quot; alt=&quot;JUnit Project View&quot;&gt;&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;YourFirstTest&quot;&gt;Your First Test&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Right click on the src\test\java directory, and select New / File.  Give it the name &amp;quot;TestHello.java&amp;quot;, and paste the following code into it:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-java'&gt;import org.junit.Test;
import static org.junit.Assert.*;

public class TestHello {

    @Test
    public void testPasses() {
        String expected = &amp;quot;Hello, JUnit!&amp;quot;;
        String hello = &amp;quot;Hello, JUnit!&amp;quot;;
        assertEquals(hello, expected);
    }

    @Test
    public void testFails() {
        // The worlds most obvious bug:
        assertTrue(false);
    }

    @Test
    public void testArray() {
        int [] array1 = new int[] {1, 2, 3};
        int [] array2 = new int[] {1, 2, 3};
        assertArrayEquals(array1, array2);
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2&gt;&lt;a id=&quot;BuildingAndRunningTests&quot;&gt;Building and Running the Tests&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;To build the test, from the Idea menu select &amp;quot;Build / Make Project&amp;quot;.  Next, from the Run menu select Debug.  If all goes well you should see a configuration named &amp;quot;Test Hello&amp;quot;.  Click that.&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;FixingABug&quot;&gt;Fixing a Bug&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;You will next see the output of the tests in a window that looks like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/simple_junit/JUnitDebug.jpg&quot; alt=&quot;JUnit Debugging&quot;&gt;&lt;/p&gt;

&lt;p&gt;You may have noticed when you pasted the code that the testFails method contains &amp;quot;The world&amp;#39;s most obvious bug&amp;quot;.  Because of this, that test will fail. You&amp;#39;ll notice that -- very conveniently -- there will be a link to TestHello.java:16 -- clicking that link will bring you right to the failing line of code, where you should be able to fix it easily. Running tests in the debugger like this is a very easy way to fix the failing code.&lt;/p&gt;

&lt;p&gt;Of course, these tests are very simple and do not test any &amp;quot;real&amp;quot; code.  In a real project you&amp;#39;d be moving back between fixing the bugs in the code, which the test code was exercising, while writing new tests to exercise new code.  But if you put your Java classes in src\main\java, you can easily test them from tests you add to src\test\java.  &lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;
</description>
				<pubDate>Sat, 11 May 2013 12:21:15 -0700</pubDate>
				<link>/a-simple-junit-tutorial-using-maven-and-intellij-idea</link>
				<guid isPermaLink="true">/a-simple-junit-tutorial-using-maven-and-intellij-idea</guid>
			</item>
			
		
			
			<item>
				<title>What If Carpenters Were Hired Like Programmers?</title>
				<description>&lt;p&gt;If carpenters were hired like programmers, job ads might look like this:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Help Wanted, Carpenter.  &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Skills Needed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Familiarity with Craftsman brand hammers and saws.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Five to ten years of experience building round tables out of mahogany.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Familiarity with the full carpentry life cycle including sawing, hammering, etc.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Good to Have:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Experience building tables for free (open source tables).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Knowledge of square tables.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Pine experience.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Wed, 01 May 2013 12:31:11 -0700</pubDate>
				<link>/what-if-carpenters-were-hired-like-programmers</link>
				<guid isPermaLink="true">/what-if-carpenters-were-hired-like-programmers</guid>
			</item>
			
		
			
			<item>
				<title>Employee Owned Business Draft Business Plan</title>
				<description>&lt;p&gt;This is a draft business plan for an employee owned software contracting business providing contracting, outsourcing, and staffing services focused on software development. Our initial focus will be on programming, and quality assurance.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Employee Ownership&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The point of being an employee owned business will be to ensure the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;That to the largest extent possible, the profits earned by the company will be enjoyed by the contractor doing the work and the salesperson booking the work.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;That all employees have a direct stake in the success of every contract and the success of the company. This is an important part of our business story.  The idea of peer review and how we implement on this needs to be further developed.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;That to the largest extent possible, company decisions are made through a collective and democratic process, governed by a more extensive constitution that will be drafted and adopted at a later date.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Proposed Revenue Sharing Split&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For contract work, our (proposed) company split for each billable dollar will be:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;60 cents toward direct employee compensation to the technical contractor doing the work (salary and benefits).
25 cents toward the salesperson / salespeople who were the procuring cause of the business. (A portion of this may also be paid to any contractors who may have helped bring in the business).
15 cents other -- (to be determined later by the employee owners) We expect that a substantial part of this will be recruitment bonuses for new hires and the remainder will be for company overhead. Alternatively, we may wish to fund performance bonuses either for outstanding technical achievement or increase the commission paid to full time salespeople.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cost Containment&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We will avoid offices for a long time, maybe forever. This is not to say that we’ll only pursue telecommute opportunities -- many contracts are on-site. I have worked for companies that did outsourcing and had everybody in a building and that may be a way to go in the future -- but we may be able to provide a better service if we combine on-site contractors with an effective system of remoting workers offsite (perhaps with tiered pricing for our customers). Company meetings by Skype, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Next Steps&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Hire employee number 2 etc. Further develop our attractiveness to our fellow potential employee owners. Think through what a great company would look like for some software developers, and make that happen.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Further refine our presentation that we make to clients. What are the key advantages of working with us versus whatever other choices you might have?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Refine this plan further.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Start approaching recruiters to learn more about the sales / HR end of the business and identify possible partners.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Think about if we want to focus on certain specifics in terms of languages / technologies and / or capabilities.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Mon, 15 Apr 2013 12:28:15 -0700</pubDate>
				<link>/employee-owned-business-draft-business-plan</link>
				<guid isPermaLink="true">/employee-owned-business-draft-business-plan</guid>
			</item>
			
		
			
			<item>
				<title>Don't Let the Development Department Run Your One Man Company</title>
				<description>&lt;p&gt;Over the last few days I revisited the code for my project, &lt;a href=&quot;http://www.relaysafe.com&quot;&gt;RelaySafe Secure Email&lt;/a&gt;, after taking some detours into:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Learning MongoDB and working on the beginnings of a different site and...&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Starting a Ruby on Rails User Group in Folsom, and within a week...&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Wondering if I&amp;#39;ll have the perseverance to continue with the Ruby on Rails User Group in Folsom and...&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Registering for a CollabFinder account and fielding &amp;quot;job offers&amp;quot; from folks who apparently don&amp;#39;t understand that the word &amp;quot;job&amp;quot; implies some sort of remuneration, and...&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Going off in another direction, in Spanish.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Along the way I also read an article by a developer who worked on an open source project I worked on.  The article was about being a developer and &lt;a href=&quot;http://tashian.com/carl/startup.html&quot;&gt;foundering in a start-up&lt;/a&gt;, and it sounded all too familiar to me.  I too know what it&amp;#39;s like to have one idea, work on it for awhile, hit a roadblock of some kind, and then instead of finding away around or through, ending up on a different road entirely.&lt;/p&gt;

&lt;p&gt;This is what happens when developers are in charge.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Salesmen are Your Friends&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I was in sales for awhile.  I&amp;#39;m not sure I was ever really good at it, but it did give me a better understanding of  how sales people look at the world.&lt;/p&gt;

&lt;p&gt;When I was in sales I wrote some web sites to help me, which from a software perspective were complete hacks, yet which were successful from a sales perspective.&lt;/p&gt;

&lt;p&gt;Sales is a different world.  As Dan Akroyd&amp;#39;s character, Ray, said famously in Ghostbusters, &amp;quot;I&amp;#39;ve worked in the private sector.  They expect results.&amp;quot;&lt;/p&gt;

&lt;p&gt;As a developer, I look at my silly pre-alpha app and wonder, &amp;quot;I wonder if this other thing over there would be more fun to work on?&amp;quot;&lt;/p&gt;

&lt;p&gt;As a salesman, I know that &amp;quot;this thing over there&amp;quot; that might be more fun to work on is both less finished and more difficult than my original app.&lt;/p&gt;

&lt;p&gt;Salesman are those guys in your company who are always asking &amp;quot;when will it be ready?&amp;quot;, as though the development work were easy, and as though you really could predict the finish date with absolute accuracy.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m going to let me inner salesman run the company for a few weeks.  It won&amp;#39;t be much fun listening to that bozo, but the app will move forward, and it may become something I can sell.&lt;/p&gt;
</description>
				<pubDate>Wed, 21 Nov 2012 18:00:02 -0800</pubDate>
				<link>/dont-let-the-development-department-run-your-one-man-company</link>
				<guid isPermaLink="true">/dont-let-the-development-department-run-your-one-man-company</guid>
			</item>
			
		
			
			<item>
				<title>Translating Application.html.erb to Haml</title>
				<description>&lt;p&gt;As part of my &lt;a href=&quot;http://johnlockwood.com/2012/11/07/learnapp/&quot;&gt;latest pet Rails&lt;/a&gt; project, I&amp;#39;m sharpening up my nascent HAML skills a bit.  &lt;/p&gt;

&lt;p&gt;If you&amp;#39;re thinking about learning HAML, let me assure you a little:  it&amp;#39;s not that hard.  Compared to programming generally, Rails in particular, HTML, and all the other stuff you learned before it occurred to you to learn HAML, HAML is pretty simple stuff.  The best way to learn it is to simply dive in as the tutorial suggests and translate a file or two from your current project.  That will teach you the basics.  When you&amp;#39;ve done a file or two, you&amp;#39;re ready to take on translating a layout such as application.html.erb to haml.  This is a bit more of a challenge -- but still not a big deal, really.&lt;/p&gt;

&lt;p&gt;I posted a couple of code samples that show the before and after to Gist.  The before of course is &lt;a href=&quot;https://gist.github.com/4051866&quot;&gt;application.html.erb&lt;/a&gt;.  The translated file also has a couple of modifications, because as I was working on this I was also internationalizing the site, but that&amp;#39;s OK, it&amp;#39;s good for a challenge.  Here is &lt;a href=&quot;https://gist.github.com/4051775&quot;&gt;application.html.haml&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Going through the HAML, first we have a doctype declaration:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;quot;ruby&amp;quot;]
!!!
[/cc]&lt;/p&gt;

&lt;p&gt;This will turn into an HTML5 doctype declaration:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;quot;html&amp;quot;]&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;Along with the &lt;a href=&quot;http://haml.info/docs/yardoc/file.REFERENCE.html&quot;&gt;HAML documetation&lt;/a&gt;, the head section of the layout is a sort of mini-haml lesson all by itself, so let&amp;#39;s take a look at that:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;quot;ruby&amp;quot;]
%head
  %title= content&lt;em&gt;for?(:title) ? yield(:title) : I18n.t(&amp;quot;site&lt;/em&gt;title&amp;quot;)
  %meta{:name =&amp;gt; &amp;quot;description&amp;quot;, :content=&amp;gt; &amp;quot;#{ content&lt;em&gt;for?(:description) ? yield(:description) : (I18n.t &amp;quot;site&lt;/em&gt;description&amp;quot;)}&amp;quot;}
  %meta{:charset =&amp;gt; &amp;quot;utf-8&amp;quot;}
  %meta{:author =&amp;gt; &amp;quot;John Lockwood&amp;quot;}{:cheese =&amp;gt; &amp;quot;limburger, :friends =&amp;gt; &amp;quot;moe larry&amp;quot;}&amp;#39;
  =stylesheet&lt;em&gt;link&lt;/em&gt;tag    &amp;quot;application&amp;quot;, :media =&amp;gt; &amp;quot;all&amp;quot;
  =javascript&lt;em&gt;include&lt;/em&gt;tag &amp;quot;application&amp;quot;
  =csrf&lt;em&gt;meta&lt;/em&gt;tags
  = yield(:head)
[/cc]&lt;/p&gt;

&lt;p&gt;The head tag and the title tag show the basic HAML conventions of using %tagname for tags, and indentation for nesting one tag within another.  After title we have an equals sign, =, to interpret the rest of the line as ruby code.  We&amp;#39;re setting up a flexible content&lt;em&gt;for block so we can set the title on a per-page basis, and we&amp;#39;ve modified the original line to use an internationalized string:  I18n.t(&amp;quot;site&lt;/em&gt;title&amp;quot;).  Anyway, the main point here is that we can have whatever ruby expression we want after the = and it will be evaluated and output to the page.&lt;/p&gt;

&lt;p&gt;When we get to the meta tags, things start to get a bit interesting.  To get HTML attributes, HAML uses a syntax that looks like Ruby hash attributes.&lt;/p&gt;

&lt;p&gt;Thus the HAML:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;quot;ruby]
%curly_request{:cheese =&amp;gt; &amp;quot;limburger, :friends =&amp;gt; &amp;quot;moe larry&amp;quot;}
[/cc]&lt;/p&gt;

&lt;p&gt;renders in HTML as:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;quot;html]&lt;/p&gt;

&lt;p&gt;...&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;So far so good, but what if you need to build your HTML attributes using Ruby code?  Not to worry, HAML provides for Ruby interpolation using a syntax akin to string interpolation in Ruby.  For example:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;quot;ruby&amp;quot;]
%meta{:name =&amp;gt; &amp;quot;description&amp;quot;, :content=&amp;gt; &amp;quot;#{ content&lt;em&gt;for?(:description) ? yield(:description) : (I18n.t &amp;quot;site&lt;/em&gt;description&amp;quot;)}&amp;quot;}
[/cc]&lt;/p&gt;

&lt;p&gt;In the code above, we&amp;#39;re creating a meta description tag, and our content attribute for this tag is the interpolated ruby expression:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;quot;ruby&amp;quot;]
content&lt;em&gt;for?(:description) ? yield(:description) : (I18n.t &amp;quot;site&lt;/em&gt;description&amp;quot;)
[/cc]&lt;/p&gt;

&lt;p&gt;So we&amp;#39;ve made our description flexible, and we&amp;#39;ve internationalized our default site description, so your site can be Google optimized for English speakers as &amp;quot;The best site for learning about eating cheese&amp;quot;, while your Guatemalan visitors will see &amp;quot;El mejor sitio para aprender comer queso.&amp;quot;&lt;/p&gt;

&lt;p&gt;International haml and cheese!  How cool is that?&lt;/p&gt;

&lt;p&gt;I&amp;#39;m tempted to leave it there on a tasty note, but let me just steer you clear of one little HAML gotcha to avoid.  Make sure when specifying attributes to not add any space before your attribute list.  The first whitespace it sees signals the content of the tag, so you need:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;quot;ruby&amp;quot;]
%meta{:name =&amp;gt; &amp;quot;description&amp;quot;}
[/cc]&lt;/p&gt;

&lt;p&gt;not&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;quot;ruby&amp;quot;]
%meta {:name =&amp;gt; &amp;quot;description&amp;quot;}
[/cc]&lt;/p&gt;

&lt;p&gt;The second tag will evaluate to:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;quot;html&amp;quot;]
{:name =&amp;gt; &amp;quot;description&amp;quot;}
[/cc]&lt;/p&gt;

&lt;p&gt;Definitely not what you want.  What will the Guatemalans think of you then?&lt;/p&gt;
</description>
				<pubDate>Sat, 10 Nov 2012 10:20:06 -0800</pubDate>
				<link>/translating-application-html-erb-to-haml</link>
				<guid isPermaLink="true">/translating-application-html-erb-to-haml</guid>
			</item>
			
		
			
			<item>
				<title>Thirty Point Five Reasons Why I Don't have a Rails Job.</title>
				<description>&lt;p&gt;There are at least twenty reasons I don&amp;#39;t have a Rails job. Actually there are 30.5 -- hindsight really is quite precise, isn&amp;#39;t it? &lt;/p&gt;

&lt;p&gt;Right now I&amp;#39;m on my laptop keyboard, and I generally prefer something full sized without this silly track pad in the middle that ends up making my cursor jump around when I&amp;#39;m trying to publish something stupid.&lt;/p&gt;

&lt;p&gt;Normally in an article like this you&amp;#39;d write an ordered list, but since I&amp;#39;m on a cheesy keyboard I&amp;#39;m going to make a virtue of necessity and quip that ordered lists are just a form of Powerpoint, and I&amp;#39;m going to write my reasons inline, like this:  (1) being too lazy, when on his laptop keyboard, to type a proper ordered list.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve been working pretty hard on Rails in my off hours, on and off for some four or five years now.  Sometimes I&amp;#39;ll work on an open source project for a little while, thinking that maybe (2) my lack of &amp;quot;giving back to the Rails community&amp;quot; is the reason I don&amp;#39;t have a Rails job.  (I don&amp;#39;t know if Rails is a ghetto or not, but it is a strange bunch of people who judge professional success by how much working for free one can put up with).  &lt;/p&gt;

&lt;p&gt;In case you missed it, the last paragraph had reason (3), I cite the Rails is a Ghetto article, without even linking to it, which is pretty much a variation on reason 1. &lt;/p&gt;

&lt;p&gt;OK, so back to working hard.  When I&amp;#39;m not trying to demonstrate my professionalism by being an amateur, I&amp;#39;m often working a project that&amp;#39;s supposed to make me money someday, thinking it&amp;#39;s my lack of a Sass app in the channel.  (That was 3.5, and sorry for the fraction, but I found it while proofreading).  Here&amp;#39;s &lt;a href=&quot;http://www.relaysafe.com&quot;&gt;my latest unfinished Rails project&lt;/a&gt;, which at present boasts (4) a mere 132 specs.&lt;/p&gt;

&lt;p&gt;That brings me to reason (5), dropping buzzwords like &amp;quot;specs&amp;quot; when recruiters think I should know something about unit testing instead, which brings me to my next points (6) relying on insider jokes to get me hired and (7) being implicitly disrespectful of recruiters.&lt;/p&gt;

&lt;p&gt;When I&amp;#39;m not working on either some open source project or a risky scheme, I&amp;#39;m spinning out of control learning new gems.  Wheeee!!!   I always yell Wheeee!!! when I&amp;#39;m spinning out of control learning new gems.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s so liberating (8) having a blog that nobody reads.  It really is.&lt;/p&gt;

&lt;p&gt;OK, so part of the thing is (9) I live in Sacramento (or close enough, but who the hell has heard of Orangevale?).&lt;/p&gt;

&lt;p&gt;Some upshots of this are that (10) there&amp;#39;s a perception that whether Rails is a (technical) Ghetto or not, Sacramento certainly is.  Also, the only Rails shop in the local area is [redacted], and (11) those dummies didn&amp;#39;t hire me after (12) I made a mistake on a programming problem which (13) only had about twenty or so specs in it.  And now I&amp;#39;ve gone and publicly called someone who didn&amp;#39;t hire me dummies, demonstrating one or more of the following:  (14) I&amp;#39;m not a good salesman or (15) my feelings are too easily hurt and (16) I&amp;#39;m just a bitter and depressed weirdo, not a young and vibrant Mac owner.  But hey, I redacted them.  Serves them right.  And that&amp;#39;s the last time I&amp;#39;m dacting them, too.&lt;/p&gt;

&lt;p&gt;There, I said it, you cheeky wonkers, (15) I don&amp;#39;t own a Mac.  I (16) program Rails on a Linux Mint box, which (17) some people don&amp;#39;t know is based on Ubuntu.  I even (18) use an IDE, which is why I have only 132 specs in my little unfinished project instead of the million and seventy-two it would need if I didn&amp;#39;t use an IDE.  That is to say, I use an IDE when I&amp;#39;m not using gvim, which of course is (19) not Textmate.  What&amp;#39;s worse, my IDE was written by the good folks at IntelliJ using Java, a language (20) which has semi-colons in it.&lt;/p&gt;

&lt;p&gt;Semi-colons!  Oh the humanity!&lt;/p&gt;

&lt;p&gt;And speaking of humanity, did I just call my readers &amp;quot;cheeky wonkers&amp;quot;?  Damn.  (21).&lt;/p&gt;

&lt;p&gt;Then there&amp;#39;s (22) my resume, which has lots of .NET and C# and Java and C++ and C and PHP and Perl and ASP and so forth on it, when you (23) recruiter types are looking for a &amp;quot;senior rails developer with 4-5 years experience&amp;quot;, meaning that either I have (24) too much experience or (25) too little, depending on how you want to reject me.&lt;/p&gt;

&lt;p&gt;Now, living in Sacramento (op cit.), people may also have the (26) mistaken idea that I won&amp;#39;t relocate if you throw a bunch of money at me, and that I&amp;#39;m just a cheeky wonker looking for a telecommute position, which granted would be nice, but not necessary.  Also, I can&amp;#39;t really show up at the local Rails user&amp;#39;s group, because 83.4% of the people there come from Streamsend, and I&amp;#39;ve already gone on record above as a bitter and lonely coot who (27) burns his bridges.&lt;/p&gt;

&lt;p&gt;This is getting out of hand.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s probably (28) too opinionated even for Rails.&lt;/p&gt;

&lt;p&gt;Gems I&amp;#39;ve learned and used in the last week include HAML, YARD, and Mongo.  I probably should have mentioned them earlier.  Maybe I&amp;#39;m (29) not opinionated enough.&lt;/p&gt;

&lt;p&gt;One or more of us has no sense of humor.&lt;/p&gt;

&lt;p&gt;Oh, sorry:  (30).&lt;/p&gt;
</description>
				<pubDate>Sat, 03 Nov 2012 03:59:48 -0700</pubDate>
				<link>/thirty-point-five-reasons-why-i-dont-have-a-rails-job</link>
				<guid isPermaLink="true">/thirty-point-five-reasons-why-i-dont-have-a-rails-job</guid>
			</item>
			
		
			
			<item>
				<title>In Praise of 100% Test Coverage, or How I Made My Code Smell Bad to Martin Fowler</title>
				<description>&lt;p&gt;I am working on a Rails project that I have &amp;quot;in production&amp;quot; (barely), albeit in a state that&amp;#39;s not even pre-beta enough to announce.&lt;/p&gt;

&lt;p&gt;So it&amp;#39;s not an application yet, but it sports 97 specs and 100% test coverage.&lt;/p&gt;

&lt;p&gt;Somewhere along the line it had something like 80% coverage, and I decided it would be fun to see what it took to get it up to 100%. Along the way I thought I&amp;#39;d read about 100% coverage and what a good thing it was, only to find that most of the folks talking about it were doing the whole post-modern-er than thou number on it. You&amp;#39;ve seen these arguments. Take a perfectly good tool in the programmer&amp;#39;s arsenal, then talk about why it&amp;#39;s not a magic bullet, (in the absence of anyone making any kind of serious claim that it is).&lt;/p&gt;

&lt;p&gt;Proably the smartest guy engaging in this sort of thing is Martin Fowler, who is way smarter than me, and certainly taken more seriously among the cool kids. Here is his &lt;a href=&quot;http://martinfowler.com/bliki/TestCoverage.html&quot;&gt;code coverage article&lt;/a&gt;. But you also have &lt;a href=&quot;http://www.exampler.com/testing-com/writings/coverage.pdf&quot;&gt;Brian Marick&lt;/a&gt;, whom Folwer considers &amp;quot;very wise&amp;quot; for having said &amp;quot;I expect a high level of coverage. Sometimes managers require one. There&amp;#39;s a subtle difference.&amp;quot;&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s look at some of the arguments that are proffered against code coverage, and see what we can make of them.&lt;/p&gt;

&lt;p&gt;Fowler writes:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt; &lt;em&gt;If you make a certain level of coverage a target, people will try to attain it. The trouble is that high coverage numbers are too easy to reach with low quality testing. At the most absurd level you have AssertionFreeTesting. But even without that you get lots of tests looking for things that rarely go wrong distracting you from testing the things that really matter.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The thread that runs through both Marick&amp;#39;s argument and Fowler&amp;#39;s is that if you make high coverage numbers a requirement, people will find a way around it. Well, yes, I agree, but so what? People are always going to find a way to do the wrong thing, but here&amp;#39;s the problem: speeding laws aren&amp;#39;t bad just because people use radar detectors, and when a murderer finds a clever way to hide a body, we don&amp;#39;t take the law against murder off the book -- we try to improve our forensics.&lt;/p&gt;

&lt;p&gt;Now, does code coverage distract me from testing the things that really matter? Of course not. Code coverage is just one tool. Shortly after I had reached 100% coverage on this project, I pushed it into &amp;quot;production&amp;quot; (there are no customers for it yet) for the first time, and tried using it with someone else, since one of my other favorite tools for improving software quality is to get it off my desk as quickly as possible so we can work out the &amp;quot;works on my machine&amp;quot; bugs. Of course, as soon as I did that, I found a problem and had to go after it.  And of course, the fix wasn&amp;#39;t to improve how many times each line of my 100% covered code was hit -- the fix was to drive the coverage numbers down temporarily by writing more code and tests to solve the problem.&lt;/p&gt;

&lt;p&gt;Now, if I hadn&amp;#39;t focused on code coverage first, could I have found that problem on my own?  Well, I could have thought about better ways to test my code, and I still try to do that even though I&amp;#39;m shooting for 100% coverage. But in terms of this problem, I don&amp;#39;t think it would have turned it up.  The reason we have QA even though we have unit tests is that individual developers have blind spots, and testing is hard.&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s look at another passage of Fowler&amp;#39;s:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;So what is the value of coverage analysis again? Well it helps you find which bits of your code aren&amp;#39;t being tested. It&amp;#39;s worth running coverage tools every so often and looking at these bits of untested code. Do they worry you that they aren&amp;#39;t being tested?&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;__At this point he goes on to quote Marick again:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;If a part of your test suite is weak in a way that coverage can detect, it&amp;#39;s likely also weak in a way coverage can&amp;#39;t detect.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To me, there are a number of problems with &amp;quot;running coverage tools every so often and looking at these bits of untested code&amp;quot;.&lt;/p&gt;

&lt;p&gt;First, running the tools less often means I&amp;#39;m forced to think about testing every so often. Now if I&amp;#39;m doing the right thing, I shouldn&amp;#39;t have to be forced to think about it, I should be thinking about it all the time. But the truth is, as much as I love to test, testing is hard, and it consumes time.  That being the case, tools that keep me motivated to do it are my friends.  Test coverage is one such tool.  Yes, the &amp;quot;atta boy&amp;quot; it gives me is not any kind of real assurance that I&amp;#39;ve done my job well, but it helps to have it anyway.&lt;/p&gt;

&lt;p&gt;Second, running the tools every so often means I have a LOT more code to look at when I do run them. When I was working on the bug above, my coverage got down to about 96%.  That&amp;#39;s actually a lot more of a drop than I expect to see when I&amp;#39;m further into the project and there&amp;#39;s a lot more code. But the real point is, after I&amp;#39;d done the tests I could think to do and gotten them passing, and done some manual testing as well, going after that 4% didn&amp;#39;t really take a lot of time. Moreover, that 4% all had to do with code that was fresh in my mind, which is a lot easier to write real tests for than something I look at &amp;quot;every so often&amp;quot;.  Getting up to 100% coverage was a chore when I first did it, and my project is brand new.  Doing it on an existing project would be that much harder, to be sure, and that&amp;#39;s the point.  I&amp;#39;d much rather invest a half hour here and there to keep the tests at 100% writing tests on fresh code than puzzling through uncovered code to try to find the naughty bits.  It&amp;#39;s just easier.&lt;/p&gt;

&lt;p&gt;Finally, keeping the code 100% covered means I always know exactly where to go to find the parts that aren&amp;#39;t -- they&amp;#39;re the parts I just worked on.  Yes, the tool tells where the uncovered parts are, but I&amp;#39;d rather not wade through all the noise that would be generated by all the other code that isn&amp;#39;t covered, trying to see what I missed in my tests of what I just wrote.&lt;/p&gt;

&lt;p&gt;During the day I work in a shop where most of our code is legacy C and C++.  One of the best practices if you have a compiler that does type checking is to have zero warnings -- which is trivial to do if you&amp;#39;re on a team that does it, because if you see any warnings you know you just put them there and you can fix them before you check in the code.   On one of the projects I worked on, in contrast, the team has let things go to the point where there were well over 1000 warnings the last time I counted, and that was years ago.   Of course, most of these warnings are trivial, but there are bound to be some real bugs in over 1000 of them.  Do you have any idea where?  Nope.  Does anyone else on the team?  Nope.&lt;/p&gt;

&lt;p&gt;Now, given the number of lines in the code, I could say that a certain number of warnings is acceptable -- certainly we have well, well over 90% of our code that &lt;em&gt;doesn&amp;#39;t&lt;/em&gt; have a warning in it. Fowler says a level of test coverage of 80-90% is good enough, and writes that he &amp;quot;would be suspicious of anything like 100% - it would smell of someone writing tests to make the coverage numbers happy, but not thinking about what they are doing.&amp;quot;&lt;/p&gt;

&lt;p&gt;The problem with that approach is that the same team that has the 1,000 warnings also has zero developer-run unit tests, tons of run time ASSERTS in debug mode -- you name it.  And surprise surprise, we spend an enormous amount of time chasing down issues that are embarrassing for a product that has been in production as long as ours has.&lt;/p&gt;

&lt;p&gt;So maybe I&amp;#39;m not thinking about what I&amp;#39;m doing when I push for 100% coverage.  Maybe.  But on the team with the ASSERTs and the warnings and the no-unit tests and all the rest -- I KNOW we&amp;#39;re not thinking about what we&amp;#39;re doing.&lt;/p&gt;

&lt;p&gt;No broken windows means just that -- NO broken windows.The problem with letting things be &amp;quot;just good enough&amp;quot; is that once your quality standards are just good enough, wait a few years and you&amp;#39;ll inevitably get to &amp;quot;please, somebody kill me.&amp;quot;&lt;/p&gt;
</description>
				<pubDate>Sun, 30 Sep 2012 18:48:17 -0700</pubDate>
				<link>/in-praise-of-100-test-coverage-or-how-i-made-my-code-smell-bad-to-martin-fowler</link>
				<guid isPermaLink="true">/in-praise-of-100-test-coverage-or-how-i-made-my-code-smell-bad-to-martin-fowler</guid>
			</item>
			
		
			
			<item>
				<title>How to Get In the Zone (A Reminder to myself in Case I Someday Read Me)</title>
				<description>&lt;p&gt;What matters to me most about software is that it lets me get in the zone, or a state of flow.&lt;/p&gt;

&lt;p&gt;Yes, software is how I make a living, but making a living at software, I very often report to a boss or other stakeholder whose pointy hair prevents me from getting into a state of flow, so by two in the afternoon I&amp;#39;m tired and forcing myself to just plod along at the now inimical keyboard.&lt;/p&gt;

&lt;p&gt;On the other hand, when I&amp;#39;m in a state of flow on a project, I could go for hours, except for occasional lonely moments like this when I feel I need to explain something to somebody.&lt;/p&gt;

&lt;p&gt;It&amp;#39;d be great to have a job where I could spend more time in the zone, which I find myself getting into quite often on my current Rails side-project.&lt;/p&gt;

&lt;p&gt;I could tell you the zone is about RSpec and Intellj with the Rails plugin and simplecov on a particular machine with Linux Mint installed and the right keyboard -- but of course, those are just temporary implementation details. I&amp;#39;ve been in the zone on the same keyboard under Windows 7 and Visual Studio and NUnit.&lt;/p&gt;

&lt;p&gt;What it&amp;#39;s really about is being alone with a good unit test suite on a good keyboard, making progress on a project.&lt;/p&gt;

&lt;p&gt;Ambition kills it, plodding along strengthens it.&lt;/p&gt;

&lt;p&gt;The whole elephant sometimes kills it, unless you can quickly grab the tail or the trunk or the leg to work on.&lt;/p&gt;

&lt;p&gt;Numbers help. How many specs did I do? What does the coverage report say?&lt;/p&gt;

&lt;p&gt;Knowing that at some point enough specs and enough coverage with a little bit of code each day will turn into a product helps.&lt;/p&gt;

&lt;p&gt;It may not be a great product, and it may not sell, but spending too much time on that sort of thinking is a surefire route out of the zone and onto working on someone else&amp;#39;s idea of a product, which is just a downward spiral. Someone else&amp;#39;s product is fine if you&amp;#39;re doing it when your fresh at 11:00 AM on a Tuesday and collecting a paycheck for it. But if you&amp;#39;re going to burn weekend after weekend away from your bicycle, doing it on someone else&amp;#39;s Rube Goldberg device, well, all that ever gets you is tired and frustrated.&lt;/p&gt;

&lt;p&gt;So here it is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Stay in the present.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Don&amp;#39;t take a job without counting the unit tests first, unless they let you write it from scratch (in which case, count the money first) :).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Work on the tail, or the trunk, or the leg.  Your zone poem for the day:  &amp;quot;The elephant is irrelevant&amp;quot;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you&amp;#39;re not getting paid for it, it&amp;#39;s your code, period.  If you need a friend, go to the pound and pet a puppy.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Get back to work, or go outside and ride your bicycle.  Explaining things should be done in moderation.  Ain&amp;#39;t nobody reading you anyway.  See the line with the puppy.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Sat, 15 Sep 2012 09:21:13 -0700</pubDate>
				<link>/how-to-get-in-the-zone-a-reminder-to-myself-in-case-i-someday-read-me</link>
				<guid isPermaLink="true">/how-to-get-in-the-zone-a-reminder-to-myself-in-case-i-someday-read-me</guid>
			</item>
			
		
			
			<item>
				<title>Using FactoryGirl with the Rails Console</title>
				<description>&lt;p&gt;I started doing some development work on the Rais blogging engine, &lt;a href=&quot;http://fdv.github.com/typo&quot;&gt;Typo&lt;/a&gt;, and wanted to use some of the helper methods I found in their factories within a test console.&lt;/p&gt;

&lt;p&gt;Here are the steps I had to go through:&lt;/p&gt;

&lt;p&gt;[cc]rails c test[/cc]&lt;/p&gt;

&lt;p&gt;The inside the console:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;quot;ruby&amp;quot;]
Factory.load(&amp;#39;spec/factories.rb&amp;#39;)
[/cc]&lt;/p&gt;

&lt;p&gt;Then you can use your helper methods or load factories as you normally would:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;quot;ruby&amp;quot;]&lt;/p&gt;

&lt;h1&gt;Use a helper method (if you have some)&lt;/h1&gt;

&lt;p&gt;my&lt;em&gt;object = my&lt;/em&gt;helper_method()&lt;/p&gt;

&lt;h1&gt;Load a factory normally&lt;/h1&gt;

&lt;p&gt;user = FactoryGirl.create(:user)&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;Admittedly if this were harder I would have gotten a longer article out of it, but you have to take the good with the bad.&lt;/p&gt;
</description>
				<pubDate>Sat, 14 Jul 2012 06:36:07 -0700</pubDate>
				<link>/using-factorygirl-with-the-rails-console</link>
				<guid isPermaLink="true">/using-factorygirl-with-the-rails-console</guid>
			</item>
			
		
			
			<item>
				<title>Getting Started With Typo</title>
				<description>&lt;p&gt;Why do Rails developers like me blog on WordPress, which is written in PHP, instead of Typo, which is written in Ruby on Rails?&lt;/p&gt;

&lt;p&gt;The answer is simple, really, maybe even obvious:  WordPress works better.  Wordpress has been in development longer, and it has more of everything, more plugins, more polish, more templates.  As of today, for example, Wordpress has some 20,244 plugins, while Typo has about 25.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s a bit of a landslide, really.&lt;/p&gt;

&lt;p&gt;The reason I wanted to take a look at Typo is that it fits in with my professional development goals, which are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;To work on some passive income Rails projects to improve my skills.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To work on some open source projects to further develop my skills and give something back.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To share my experiences here.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Finally, as the inevitable result, to land some paid Rails work.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sure, being early in development, Typo&amp;#39;s not right (yet) for the casual blogger.  But at the same time, it&amp;#39;s an ideal project on which a Rails developer can hope to make important contributions.&lt;/p&gt;

&lt;p&gt;So...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Getting Typo Up and Running&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;http://fdv.github.com/typo/&quot;&gt;Typo blog&lt;/a&gt; tells us that we&amp;#39;re supposed to start with something more or less like this:&lt;/p&gt;

&lt;p&gt;[cc]
$ gem install typo
$ typo install some/path
[/cc]&lt;/p&gt;

&lt;p&gt;Trying out the first line, we get a clue as to the sort of development fun we can have with this product:&lt;/p&gt;

&lt;p&gt;We&amp;#39;re greeted with the following in nice red letters:&lt;/p&gt;

&lt;h2&gt;[cc]&lt;/h2&gt;

&lt;p&gt;Since version 6.0, Typo is no longer available as a gem. 
Please download Typo source at http://typosphere.org/stable.tgz &lt;/p&gt;

&lt;p&gt;To install Typo from scratch: https://github.com/fdv/typo/wiki/Installing-Typo
Upgrading Typo from an older version: https://github.com/fdv/typo/wiki/Upgrading-to-typo-6.0&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;After you get that message, the gem that&amp;#39;s no longer available will be installed.  &lt;/p&gt;

&lt;p&gt;That&amp;#39;s OK, let&amp;#39;s not let it deter us from doing the right thing according to the warning.  Getting the stable release specified in the link and unzipping it, let&amp;#39;s visit the &lt;a href=&quot;https://github.com/fdv/typo/wiki/Installing-Typo&quot;&gt;documentation&lt;/a&gt; as suggested.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve just worked with the doc and updated the wiki page fix some inaccuracies and omissions, so hopefully it&amp;#39;s current (as of today at least).  So you should be able to work your way through that to the point where you&amp;#39;re ready to run &amp;quot;rails server&amp;quot; without trouble.  &lt;/p&gt;

&lt;p&gt;I was able to get it running, and was able to run edge server pretty easily too.  Just get the latest:&lt;/p&gt;

&lt;p&gt;[cc]
git clone git://github.com/fdv/typo.git
[/cc]&lt;/p&gt;

&lt;p&gt;Run the instructions above and you should be good to go!&lt;/p&gt;
</description>
				<pubDate>Thu, 12 Jul 2012 20:26:45 -0700</pubDate>
				<link>/getting-started-with-typo-2</link>
				<guid isPermaLink="true">/getting-started-with-typo-2</guid>
			</item>
			
		
			
			<item>
				<title>Troubleshooting Passenger and Devise Problems on Ruby on Rails</title>
				<description>&lt;p&gt;I spent more time than I&amp;#39;d like to admit yesterday on a problem with Devise that I was seeing on a Rails application that I was deploying to production.  Like most head-scratcher bugs that we as software developers track down, the solution often appears blindingly obvious -- once we find it, of course.  What happened was that my Devise routes, which had worked fine on the development server, suddenly stopped working when I moved the app to production.&lt;/p&gt;

&lt;p&gt;At first all I saw were 404 errors.  Thinking it was a Passenger issue, my first stop was to try finding out about Passenger logging.  This led me to set up my apache configuration file for this virtual host as follows:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;quot;XML&amp;quot;]&lt;/p&gt;

&lt;p&gt;ServerName myservername.com
  PassengerLogLevel 3                             &amp;lt;-- Add this line!
  DocumentRoot /var/www/apps/prjectdirectory/public&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Options -Multiviews
AllowOverride None
Order allow,deny 
    Allow from all
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;Since this was an early deployment effort, I also temporarily moved config/environments/development.rb to config/environments/production.rb, thus picking up some of the development time debug settings.&lt;/p&gt;

&lt;p&gt;By the time I&amp;#39;d done this, the page was at least starting to point me in the right direction, by displaying the error:&lt;/p&gt;

&lt;p&gt;[cc]
No route matches {:controller=&amp;gt;“devise/home”}.
[/cc]&lt;/p&gt;

&lt;p&gt;Well, that was a little more helpful than a 404 message, but not much.  The error output from passenger in the Apache log wasn&amp;#39;t much help either.  Google-Fu, StackOverflow -- nothing helpful.&lt;/p&gt;

&lt;p&gt;Meantime, one thing that kept nagging at me was the fact that I was also seeing the problem if I ran the app under WebBrick using production settings (i.e.:  &amp;quot;RAILS_ENV=production rails s&amp;quot;).  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Looking in the Wrong Place&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Often I find that a few minutes before a daunting software puzzler turns into trivial child&amp;#39;s play, I stop looking for the solution in the &amp;quot;wrong&amp;quot; (according to hindsight) place.  In this case, the fact that this was also failing in WebBrick led me to conclude that what I should be troubleshooting in this case was not passenger -- but the Rails app itself.  Never mind that it worked in development -- it wasn&amp;#39;t working here, in not one but two web servers.  &lt;/p&gt;

&lt;p&gt;At this point I turned on Rails logging.  (Yay -- good answer -- and the crowd went wild!)&lt;/p&gt;

&lt;p&gt;Adding the following line to production.rb was all I needed:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;quot;ruby&amp;quot;]
config.log_level = :debug
[/cc]&lt;/p&gt;

&lt;p&gt;Doing that, restarting the server and navigating to mysite.com/users/sign_up, the log (in the default location of &amp;quot;log/production.log&amp;quot; showed me this call stack:&lt;/p&gt;

&lt;p&gt;[cc]
Started GET &amp;quot;/users/sign&lt;em&gt;up&amp;quot; for 207.183.247.194 at 2012-07-10 23:56:21 +0000
Processing by Devise::RegistrationsController#new as HTML
  Rendered devise/&lt;/em&gt;links.erb (0.5ms)
  Rendered devise/registrations/new.html.erb within layouts/application (4.4ms)
  Rendered layouts/&lt;em&gt;dev&lt;/em&gt;nav.html.erb (0.8ms)
Completed 500 Internal Server Error in 18ms
[/cc]&lt;/p&gt;

&lt;p&gt;At this point the log helpfully was pointing me to just the page where the error was happening.  Looking at the partial in &amp;quot;views/layouts/&lt;em&gt;dev&lt;/em&gt;nav.html.erb&amp;quot;, the advice of the articles I&amp;#39;d found about the problem along the way now made sense:  this was a scoping problem in a link_to call.  Actually there were a few such calls, but the solution was the same in each case:  Add a &amp;quot;/&amp;quot; to the beginning of the controller &amp;quot;name&amp;quot;.  In other words, change this:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;quot;ruby&amp;quot;]&lt;/p&gt;

&lt;p&gt;&amp;lt;%= link_to &amp;quot;Home&amp;quot;, :controller =&amp;gt; &amp;quot;home&amp;quot;, :action =&amp;gt; &amp;quot;index&amp;quot; %&amp;gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;To this:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;quot;ruby&amp;quot;]&lt;/p&gt;

&lt;p&gt;&amp;lt;%= link_to &amp;quot;Home&amp;quot;, :controller =&amp;gt; &amp;quot;/home&amp;quot;, :action =&amp;gt; &amp;quot;index&amp;quot; %&amp;gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;This makes sure that &amp;quot;home&amp;quot; isn&amp;#39;t considered to be a Devise controller, even in the context of rendering a Devise view.&lt;/p&gt;

&lt;p&gt;In simpler terms, the best way to debug Passenger and Devise problems on Rails is not to treat them as Passenger or Devise problems.   Underneath whatever&amp;#39;s broken is a Rails application, and that Rails application has excellent logging available.&lt;/p&gt;
</description>
				<pubDate>Wed, 11 Jul 2012 12:47:20 -0700</pubDate>
				<link>/troubleshooting-passenger-and-devise-problems-on-ruby-on-rails</link>
				<guid isPermaLink="true">/troubleshooting-passenger-and-devise-problems-on-ruby-on-rails</guid>
			</item>
			
		
			
			<item>
				<title>Testing Devise Authentication in Rails 3.1</title>
				<description>&lt;p&gt;I ran into a bit of a hiccup while writing tests in RSpec for a site I&amp;#39;m working on which is using Devise for authentication.  I spent a short time working through the documentation at &lt;a href=&quot;https://github.com/plataformatec/devise/wiki/How-To:-Controllers-and-Views-tests-with-Rails-3-(and-rspec)&quot;&gt;testing Devise using rspec and controller tests&lt;/a&gt;, only to end up stubbing my toe on the following caveat:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Authenticated routes in Rails 3
If you choose to authenticate in routes.rb, you lose the ability to test your routes via assert&lt;em&gt;routing (which combines assert&lt;/em&gt;recognizes and assert_generates, so you lose them also). It’s a limitation in Rails: Rack runs first and checks your routing information but since functional/controller tests run at the controller level, you cannot provide authentication information to Rack which means request.env[‘warden’] is nil and Devise generates one of the following errors:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;NoMethodError: undefined method &amp;#39;authenticate!&amp;#39; for nil:NilClass
  NoMethodError: undefined method &amp;#39;authenticate?&amp;#39; for nil:NilClass
The solution is to test your routes via integration tests. Authenticating your routes has its advantages, this is one of the disadvantages.&lt;/p&gt;

&lt;p&gt;This was just the error I was getting when running my controller tests, so it looked like I needed to go after them in in integration tests.&lt;/p&gt;

&lt;p&gt;Fortunately with a bit of Google-Fu, it turned out this is not an unusual problem. I was lucky to run into Andy Lindeman&amp;#39;s excellent post on &lt;a href=&quot;http://alindeman.github.com/2011/09/25/testing-devise-with-rspec-request-specs-and-capybara.html&quot;&gt;Testing Devise with RSpec and Capybara&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;First I had to install CapyBara, which I hadn&amp;#39;t worked with before (See Lindeman&amp;#39;s article for details on how to install this).  I based my solution on Lindeman&amp;#39;s code, but with a couple of variations.  First, I wanted to wrap his code in a module so I could call it from any test.  Also, I modified his code to ensure that if the user was not registered, we&amp;#39;d register him, and if he was registered, we&amp;#39;d log him in.  This helped me make the code he provided easier to use and more re-entrant.&lt;/p&gt;

&lt;p&gt;To accomplish this in RSpec, I added the following line to spec_helper.rb in the spec directory:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;quot;ruby&amp;quot;]
    config.extend RequestMacros, :type =&amp;gt; :request
[/cc]&lt;/p&gt;

&lt;p&gt;That done, I added the module code to a new file, spec/support/request_macros.rb.  As you can see in the snippet below, it looks for the user in the database, and if not found, registers the user (which logs the user in as a side effect).  If the user is found, it logs the user in.  (I&amp;#39;ve coded the email and password here along the way, but this could be DRY&amp;#39;ed up a bit by getting the user information from FactoryGirl).&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;quot;ruby&amp;quot;]
module RequestMacros 
  def login&lt;em&gt;site&lt;/em&gt;admin
   before(:each) do
      # Ensure registered
      email = &amp;quot;someone@test.com&amp;quot;
      password = &amp;quot;password&amp;quot;
      user = User.find&lt;em&gt;by&lt;/em&gt;email(email)
      if user.nil?
        visit &amp;quot;/users/sign&lt;em&gt;up&amp;quot;
        fill&lt;/em&gt;in &amp;quot;Email&amp;quot;,                 :with =&amp;gt; email 
        fill&lt;em&gt;in &amp;quot;Password&amp;quot;,              :with =&amp;gt; password
        fill&lt;/em&gt;in &amp;quot;Password confirmation&amp;quot;, :with =&amp;gt; password
        click&lt;em&gt;button &amp;quot;Sign up&amp;quot;
        page.should have&lt;/em&gt;content(&amp;quot;successfully&amp;quot;)
      else
        visit &amp;quot;/users/sign&lt;em&gt;in&amp;quot;
        fill&lt;/em&gt;in &amp;quot;Email&amp;quot;,                 :with =&amp;gt; email 
        fill&lt;em&gt;in &amp;quot;Password&amp;quot;,              :with =&amp;gt; password
        click&lt;/em&gt;button &amp;quot;Sign in&amp;quot;
      end
   end
  end
end
[/cc]&lt;/p&gt;

&lt;p&gt;Finally, because in integration testing we&amp;#39;re not really testing Rails objects but are dealing with input and output as the web browser sees it, I had to set up a test page to verify that things were working as planned.  I&amp;#39;ll no doubt yank this page later as I develop &amp;quot;real tests&amp;quot; for the functionality I want, and develop the functionality along with the tests.  In the meantime, the target test page (views/people/test.html.erb) is simplicity itself:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;quot;rails&amp;quot;]
&amp;lt;%= 
if user&lt;em&gt;signed&lt;/em&gt;in? 
  &amp;quot;true&amp;quot;
else
  &amp;quot;false&amp;quot;
end
%&amp;gt;&lt;/p&gt;

&lt;p&gt;[/cc]&lt;/p&gt;

&lt;p&gt;With this done and the route for the test in place (we don&amp;#39;t need a controller method because the default rendering will pick up the view), we&amp;#39;re now ready for the test itself, in spec/requests/people_spec.rb. (Assuming you want to test the &amp;quot;PeopleController&amp;quot;, if not, modify this and the view location to suit). You&amp;#39;ll see we test that we can log in a second time as well:&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;quot;ruby&amp;quot;]
require &amp;#39;spec_helper&amp;#39;&lt;/p&gt;

&lt;p&gt;describe &amp;quot;People&amp;quot;, :type =&amp;gt; :request do&lt;/p&gt;

&lt;p&gt;login&lt;em&gt;site&lt;/em&gt;admin &lt;/p&gt;

&lt;p&gt;it &amp;quot;signs&lt;em&gt;me&lt;/em&gt;in&amp;quot; do
   visit &amp;quot;/people/test&amp;quot;
   page.should have_content(&amp;quot;true&amp;quot;)
  end&lt;/p&gt;

&lt;p&gt;it &amp;quot;signs&lt;em&gt;me&lt;/em&gt;in&lt;em&gt;again&amp;quot; do
   visit &amp;quot;/people/test&amp;quot;
   page.should have&lt;/em&gt;content(&amp;quot;true&amp;quot;)
  end
end
[/cc]&lt;/p&gt;

&lt;p&gt;Run the spec as below to verify that it works!&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;quot;bash&amp;quot;]
rake spec SPEC=spec/requests/people_spec.rb
[/cc]&lt;/p&gt;

&lt;p&gt;Hopefully that will save you a few minutes of time.  Enjoy!&lt;/p&gt;
</description>
				<pubDate>Fri, 06 Jul 2012 19:09:58 -0700</pubDate>
				<link>/testing-devise-authentication-in-rails-3-1</link>
				<guid isPermaLink="true">/testing-devise-authentication-in-rails-3-1</guid>
			</item>
			
		
			
			<item>
				<title>How I Became a Ruby on Rails Contractor (Trapped in a Microsoft Programmer's Body)</title>
				<description>&lt;p&gt;I work in a Microsoft shop during the day working mostly on legacy code written in C, C++, C#, and some VB.NET. There was an incident at work recently that turned me into a Rails Contractor, through some interesting alchemy involving pointy hair, which I will describe below.&lt;/p&gt;

&lt;p&gt;But before telling you my war story, a bit about my Rails experience: I learned Rails the same way I learned every language and framework I know -- by coding in it in my spare time.  I&amp;#39;ve made my living as a programmer / web developer doing that since about 1993.  Currently I&amp;#39;m working on a private Rails project, which is probably a bad thing since I can&amp;#39;t point to it on Github and show you my stuff.  I&amp;#39;ll fix that shortly by doing some public rails work.&lt;/p&gt;

&lt;p&gt;Now on to the war story. As I said, I work mainly on legacy code. In his excellent book on the subject, Michael Feathers defines legacy code as code that&amp;#39;s not under test. That&amp;#39;s what I work on -- vast expanses of code through which dozens of programmers have slogged since Regan was in office. The first development time unit tests in the system were tests that I added, and I only came here some four years ago, so that tells you how long this untested code had been hacked on. So needless to say, it&amp;#39;s been a challenge to get tests in after the fact.&lt;/p&gt;

&lt;p&gt;Here is our software &amp;quot;process&amp;quot;: For major releases, our software goes through QA, running whatever tests we have. The quality is poor, so we have multiple service packs to fix it, which also go through QA. But because our test coverage isn&amp;#39;t what it should be, the quality of the service packs is poor. Our solution to this is to send out &amp;quot;Emergency Patches&amp;quot; -- releases that don&amp;#39;t go through QA testing at all.&lt;/p&gt;

&lt;p&gt;Yes, you really read that right, and it really said that.  To fix our quality problems, we patch our software, test the patch, but we don&amp;#39;t send the software back to QA to run whatever scant regression tests we have -- we just send the patch out the door.  Problem?  What problem?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Software Death Spiral&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yesterday one of my bosses asked me why we were having regressions in one area of the product. I work on database drivers, and the area in question was our handling of Oracle LONGs, a data type that Oracle deprecated in 1997, when Bill Clinton was president. I replied that we don&amp;#39;t have regression tests for it in the suite that QA runs, and that it wasn&amp;#39;t too much work to add them, but would leave us in the position of certifying our product against another vendor&amp;#39;s deprecated type. So this development manager talks to the manager of technical support, who&amp;#39;s job it is to tell us which fixes we ship without testing, which she determines according to the customer screaming for the fix.&lt;/p&gt;

&lt;p&gt;Our process is CSDD: Customer Screaming Driven Development.&lt;/p&gt;

&lt;p&gt;The answer I received was that the support manager &amp;quot;agreed&amp;quot; with me that we don&amp;#39;t need regression tests for LONGs. We just need &amp;quot;something very targeted and specifc: a fix for this one problem...&amp;quot;&lt;/p&gt;

&lt;p&gt;In other words, the manager&amp;#39;s solution for the regressions he was asking me about was to do more patches in that area without regression testing, and to attribute the idea to me!&lt;/p&gt;

&lt;p&gt;It was at that very moment that I became a Ruby on Rails Contractor.  To be sure, I was occupying the space of a nominal .NET / C# / C++ / C programmer, but now I was a Rails Contractor sitting in the wrong chair.  Echos of my old career as a contractor came back to me, where I was able to fight and win the battle of Test First Development in a Java shop, before Ruby on Rails was invented.  As a result, we found and killed all kinds of problems that we wouldn&amp;#39;t have otherwise.  (That was shortly after teaching myself Java, as it happens.  Learn.  Do.  Learn more.  Do more.  That&amp;#39;s the cycle).&lt;/p&gt;

&lt;p&gt;Rails is not a magic bullet, of course, but at least a framework that includes unit tests baked in -- as well as gems like Rspec and FactoryGirl and Capybara -- has a fighting chance of attracting one or two managers who understand that testing is important.&lt;/p&gt;

&lt;p&gt;Leave me a comment if you&amp;#39;re such a manager. I&amp;#39;d love to hear from you.&lt;/p&gt;
</description>
				<pubDate>Fri, 06 Jul 2012 13:12:14 -0700</pubDate>
				<link>/hire-this-ruby-developer-trapped-in-a-microsoft-programmers-body</link>
				<guid isPermaLink="true">/hire-this-ruby-developer-trapped-in-a-microsoft-programmers-body</guid>
			</item>
			
		
			
			<item>
				<title>Yet Another Code Formatting Test</title>
				<description>&lt;p&gt;I wasn&amp;#39;t too satisfied with the last code formatting gizmo I used.  So I&amp;#39;ve been experimenting with  kpumuk&amp;#39;s awesome &lt;a href=&quot;http://wordpress.org/extend/plugins/codecolorer/&quot;&gt;CodeColorer&lt;/a&gt; plugin.  I&amp;#39;m loving the results, see below...&lt;/p&gt;

&lt;p&gt;[cc lang=&amp;quot;ruby&amp;quot;]
module RequestMacros 
  def login&lt;em&gt;site&lt;/em&gt;admin
   before(:each) do
      # Ensure registered
      email = &amp;quot;someone@test.com&amp;quot;
      password = &amp;quot;password&amp;quot;
      user = User.find&lt;em&gt;by&lt;/em&gt;email(email)
      if user.nil?
        visit &amp;quot;/users/sign&lt;em&gt;up&amp;quot;
        fill&lt;/em&gt;in &amp;quot;Email&amp;quot;,                 :with =&amp;gt; email 
        fill&lt;em&gt;in &amp;quot;Password&amp;quot;,              :with =&amp;gt; password
        fill&lt;/em&gt;in &amp;quot;Password confirmation&amp;quot;, :with =&amp;gt; password
        click&lt;em&gt;button &amp;quot;Sign up&amp;quot;
        page.should have&lt;/em&gt;content(&amp;quot;successfully&amp;quot;)
      else
        visit &amp;quot;/users/sign&lt;em&gt;in&amp;quot;
        fill&lt;/em&gt;in &amp;quot;Email&amp;quot;,                 :with =&amp;gt; email 
        fill&lt;em&gt;in &amp;quot;Password&amp;quot;,              :with =&amp;gt; password
        click&lt;/em&gt;button &amp;quot;Sign in&amp;quot;
      end
   end
  end
end
[/cc]&lt;/p&gt;

&lt;p&gt;So far my tests in the Visual Editor didn&amp;#39;t work out too well even when following the directions.  However I&amp;#39;m very pleased with the result I get in the non-visual editor, and one can always type one&amp;#39;s own HTML for any post with code in it.&lt;/p&gt;
</description>
				<pubDate>Fri, 06 Jul 2012 12:29:02 -0700</pubDate>
				<link>/yet-another-code-formatting-test</link>
				<guid isPermaLink="true">/yet-another-code-formatting-test</guid>
			</item>
			
		
			
			<item>
				<title>On Buying Too Much Crap, and What It Might Be Like to Stop</title>
				<description>&lt;p&gt;I buy too much crap.  The chances are pretty good that you do, too.  Actually, the chances are even better that you&amp;#39;re a spambot, but let&amp;#39;s leave to one side the issue of my low readership for now.  If you&amp;#39;re here as a human denizen of the interwebs, you probably buy about as much crap as I do.&lt;/p&gt;

&lt;p&gt;Two days ago I started writing down how much crap I buy, and the unusual effect of that, a couple of days later, is that what I really want to do is start an experiment where I don&amp;#39;t buy any crap for a period of time -- let&amp;#39;s say a month.&lt;/p&gt;

&lt;p&gt;Sure, there&amp;#39;s food and rent and all that, and there are the inevitable and welcome social obligations to spend money on -- dinner with my daughter and flowers for my wife, the two things I bought on Wednesday when I began writing things down.  But there&amp;#39;s no need to buy all that other crap that may sing it&amp;#39;s little &amp;quot;Buy Me&amp;quot; siren song in my ear over the next month.&lt;/p&gt;

&lt;p&gt;I was thinking about buying a book I saw yesterday, partly for me and partly for my wife.  The irony of this thought is that I saw the book in a public library, where borrowing the book wouldn&amp;#39;t have cost me a cent, and I would have less crap to put on a shelf at the end of the process.&lt;/p&gt;

&lt;p&gt;This might not be a bad thing.  The shelves are already doing OK.  &lt;/p&gt;

&lt;p&gt;The cupboards are doing even better. My wife and I have, as of this moment, in the house (leaving off my stash at work), some fifteen boxes of teabags.  Now even with that, a week ago I bought a loose leaf tea infuser and some tea. &lt;/p&gt;

&lt;p&gt;What the hell do I need an infuser for, when I have a cupboard with fifteen boxes of tea?&lt;/p&gt;

&lt;p&gt;Well, I wanted one.  I went up on Amazon -- yes, of course I&amp;#39;m an Amazon Prime member, are you kidding me?  I went up on Amazon and the crap-buying centers of my brain instantly lit up like a department store Christmas tree.&lt;/p&gt;

&lt;p&gt;So now I have a tea infuser, and a notebook to write down the crap I buy.  I&amp;#39;m proud to say I used an existing notebook for that -- no new crap to track the crap.  &lt;/p&gt;

&lt;p&gt;Also, I am going to start using up the tea.  In order to enjoy my new purchase, I&amp;#39;m going to bring some of those boxes to work and use my free work scissors to cut them open -- hey presto, loose leaf tea.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ll let you know how it all goes.&lt;/p&gt;
</description>
				<pubDate>Fri, 04 May 2012 06:08:57 -0700</pubDate>
				<link>/on-buying-too-much-crap-and-what-it-might-be-like-to-stop</link>
				<guid isPermaLink="true">/on-buying-too-much-crap-and-what-it-might-be-like-to-stop</guid>
			</item>
			
		
			
			<item>
				<title>checking for mysql_query() in mysqlclient.lib... no</title>
				<description>&lt;p&gt;This week in Ruby pain, I was trying to install the mysql gem and was having a bit of difficulty.&lt;/p&gt;

&lt;p&gt;The solution turned out to be some combination of the following commands:&lt;/p&gt;

&lt;div&gt;
  &lt;pre data-line=''&gt;&lt;code class='language-bash'&gt;sudo apt-get install libmysql-ruby
sudo aptitude install libmysqlclient16-dev
sudo ln -s /usr/lib/mysql/ /usr/local/lib/mysql

More details on the original error:
ERROR:  Error installing mysql:
    ERROR: Failed to build gem native extension.

        /home/john/.rvm/rubies/ruby-1.9.2-p290/bin/ruby extconf.rb
checking for mysql_query() in -lmysqlclient... no
checking for main() in -lm... yes
checking for mysql_query() in -lmysqlclient... no
checking for main() in -lz... yes
checking for mysql_query() in -lmysqlclient... no
checking for main() in -lsocket... no
checking for mysql_query() in -lmysqlclient... no
checking for main() in -lnsl... yes
checking for mysql_query() in -lmysqlclient... no
checking for main() in -lmygcc... no
checking for mysql_query() in -lmysqlclient... no
*** extconf.rb failed ***
Could not create Makefile due to some reason, probably lack of
necessary libraries and/or headers.  Check the mkmf.log file for more
details.  You may need configuration options.&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
				<pubDate>Sat, 03 Mar 2012 09:07:38 -0800</pubDate>
				<link>/checking-for-mysql_query-in-mysqlclient-lib-no</link>
				<guid isPermaLink="true">/checking-for-mysql_query-in-mysqlclient-lib-no</guid>
			</item>
			
		
			
			<item>
				<title>Testing a Code Markup Plugin</title>
				<description>&lt;p&gt;I just installed the &lt;a href=&quot;http://thunderguy.com/semicolon/wordpress/code-markup-wordpress-plugin/&quot;&gt;Code Markup Plugin&lt;/a&gt; and thought I&amp;#39;d give it a bit of a test drive.  Some HTML and PHP ought to be enough to prove the concept, I would think:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[code lang=&amp;quot;php&amp;quot;]
&amp;lt;html&amp;gt;
   &amp;lt;body&amp;gt;
      
   &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
[/code]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
				<pubDate>Fri, 17 Feb 2012 13:57:16 -0800</pubDate>
				<link>/testing-a-code-markup-plugin</link>
				<guid isPermaLink="true">/testing-a-code-markup-plugin</guid>
			</item>
			
		
			
			<item>
				<title>This Week in my Unhired Rails Developer Journey</title>
				<description>&lt;p&gt;I&amp;#39;ve been getting a lot of good Rails stuff done this week, mixed in with only a little bit of career train wreck.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m not one of your cool kids.  I don&amp;#39;t own a Mac.  I make mistakes.  Move on.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;I&amp;#39;ve decided that not only was SlickEdit not worth the upgrade as a Rails environment two years ago, it&amp;#39;s still not.  Although in fairness at least they&amp;#39;re now doing something for their legacy customers in the way of discounting that they weren&amp;#39;t doing when I wrote that other article, in terms of Rails they seem to be pretty much have about the same support as they did two years ago, which is to say, not much.   Making this decision meant I had to make some serious new finger-memory investment in gvim, which I&amp;#39;ve started to do with the help of the excellent book, &lt;a href=&quot;http://iccf-holland.org/click5.html&quot;&gt;Learning Vi and Vim&lt;/a&gt;.  I&amp;#39;ve been using gvim in a naive way for years -- it&amp;#39;s time to become an expert.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Adding ruby support to Vim also means getting the right vim plugins.  This is still a work in progress, but I&amp;#39;m doing pretty well already with the &lt;a href=&quot;http://www.vim.org/scripts/script.php?script_id=1567&quot;&gt;rails plugin&lt;/a&gt; only, so maybe it isn&amp;#39;t really a work in progress.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I jumpstarted my current aprojectx project (that would be:  &amp;quot;a&amp;quot; so it shows up first on Git, and &amp;quot;project x&amp;quot; so I don&amp;#39;t have to change its name if I decide it needs to turn into something other than &lt;a href=&quot;http://www.youtube.com/watch?v=8gFCW3PHBws&quot;&gt;what it&amp;#39;s trying to be lately)&lt;/a&gt;. Before I met the OpenGovernment folks I had a project started which to date only really had a preliminary theme and Devise set up, which is fairly trivial to do given Devise&amp;#39;s clean design.  So that became the basis for the current project.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Aprojectx is of course checked in to Github as a private project, meaning that not only have I not yet told you what aprojectx is trying to be lately, I have it in a secret hiding place.  So as of this moment it&amp;#39;s on &lt;a href=&quot;http://www.youtube.com/watch?v=Y0cF2piwjYQ&quot;&gt;Double Secret Probation&lt;/a&gt;.  Thank God.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The career train wreck I had earlier in the week did have one advantage, in that it allowed me to ramp up a little on Rspec, Rake, and even a bit into a sort of hand-coded fixture support.  The takeaway for now is that I got rake installed and ready so I can do Behavior Driven Double Secret Probation.  You&amp;#39;ve no doubt heard of this, especially if unlike me you are are a mac-owning cool kid.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I wanted to have Rspec in place for the next phase of development, which was to swap out the current database implementation for MongoDB, which means getting rid of ActiveRecord, the first task so far that might take more than about fifteen minutes of easy work, not because it&amp;#39;s hard in itself, but because I may have to write some Mongo-based Devise models.  Since that may be of general interest, I might release that as open source, if seven people haven&amp;#39;t already done it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;But alas, before I could do that, I had a bit of a deployment interlude.  I did a trial deployment to a sample EngineYard account; that all went pretty well until I arrived at an error which pointed to the fact that I&amp;#39;d nestled my rails app a level in from the root because conceptually AProjectX also has a non-Rails component to it.  EngineYard doesn&amp;#39;t like having your rails app not be the root Github application.  So I think I&amp;#39;ll fix that now, now that my gorgeous wife and I are back from getting my bicycle fixed and looking at bikes for her as well.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And with that, it&amp;#39;s Monday.&lt;/p&gt;
</description>
				<pubDate>Sun, 12 Feb 2012 17:50:35 -0800</pubDate>
				<link>/this-week-in-my-unhired-rails-developer-journey</link>
				<guid isPermaLink="true">/this-week-in-my-unhired-rails-developer-journey</guid>
			</item>
			
		
			
			<item>
				<title>Taking Another Look At Python</title>
				<description>&lt;p&gt;The first few times I encountered Python was in a local bookstore, and I think the same book was there each time.  Each time I was immediately put off by this unfortunate volume, which seemed to suggest that the greatest thing about Python was the whitespace, and gave me the impression that whitespace was more significant than it was.&lt;/p&gt;

&lt;p&gt;Not quite.  It turns out that there is a &lt;a href=&quot;http://en.wikipedia.org/wiki/Whitespace_(programming_language)&quot;&gt;Whitespace language&lt;/a&gt; (who knew?), but Python isn&amp;#39;t it.  Well, I do hate making mistakes, but it seems the myth about whitespace being significant in Python is pretty common, enough so for at least &lt;a href=&quot;http://www.secnetix.de/olli/Python/block_indentation.hawk&quot;&gt;one author&lt;/a&gt; to dispel it.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m into my third or fourth look at Phython now, and I&amp;#39;m starting to get why so many programmers like it.  First, Python&amp;#39;s design and culture are based on being as simple and as obvious as possible. Forcing correct indentation is one example.  The Pythonic question to ask is not why you should be forced to indent correctly, but for heaven&amp;#39;s sake, why would you want the freedom to do it wrong?  &amp;quot;As Alex Martelli put it in his &lt;em&gt;Pyhon Cookbook&lt;/em&gt; (2nd ed., p. 230): &amp;#39;To describe something as clever is NOT considered a compliment in the Python culture.&amp;#39;&amp;quot; (&lt;a href=&quot;http://en.wikipedia.org/wiki/Python_(programming_language)&quot;&gt;Wikipedia&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;The obviousness of Python shines through brilliantly in the Windows binaries, including Idle, which has the incredible good manners to include a really good searchable help system (that&amp;#39;s also available directly through a chm file).  A windows help system on Windows?  What were these people thinking?  The Ruby approach:  &amp;quot;You can&amp;#39;t do Ruby on Windows, Get a  Mac, and by the way, documentation violates the DRY principle&amp;quot;.&lt;/p&gt;

&lt;p&gt;Before the flame wars start I should point out that I like Ruby enough to be volunteering on an open source project that&amp;#39;s written in it and would love to work in a Ruby shop.  Ruby has some incredible strengths, but clarity is not one of them.  As Clark Maurer &lt;a href=&quot;http://blog.slickedit.com/2007/09/comparing-python-to-perl-and-ruby/&quot;&gt;nailed it&lt;/a&gt; in his demonstration of a typical Ruby yield statement plus block mess:  &amp;quot;What planet did this come from?&amp;quot;&lt;/p&gt;

&lt;p&gt;To me it seems like being clever is a hallmark of youth.  As a younger man I was a clever C++ programmer.  Older programmers have generally slogged through enough of other people&amp;#39;s trying-to-be-clever code to hold being prosaic and obvious as virtues.  Yes, if I had a down and dirty script that had to get done, I&amp;#39;d rather write it in Perl, where I can be clever, but six months later, I&amp;#39;d rather maintain it in Python, when the obviousness I was forced to adopt at the start begins to pay off.&lt;/p&gt;

&lt;p&gt;Being clever is fun, and the speed boost is exhilarating.  If you&amp;#39;re being clever, believe me, I understand the allure.  But take my advice -- cut it out and be obvious.  Your future self will thank you for it.&lt;/p&gt;
</description>
				<pubDate>Sat, 04 Feb 2012 06:22:26 -0800</pubDate>
				<link>/taking-another-look-at-python</link>
				<guid isPermaLink="true">/taking-another-look-at-python</guid>
			</item>
			
		
			
			<item>
				<title>Back into Rails</title>
				<description>&lt;p&gt;I haven&amp;#39;t wanted to really dig into a software language in a long time, but I&amp;#39;ve been brushing up my Ruby and Rails skills and enjoying it thoroughly. It&amp;#39;s still fun even if I only get to do it in my spare time. I haven&amp;#39;t had the pleasure of making money at it yet, and currently I make a living digging up dinosaur bones in what we will charitably call C++ since that&amp;#39;s what the file extensions seem to denote.&lt;/p&gt;

&lt;p&gt;Dinosaur bones. Well, what the hell, I&amp;#39;m an old guy. We tend to do that.&lt;/p&gt;

&lt;p&gt;So what&amp;#39;s the Rails frenzy about? Well it&amp;#39;s certainly not about working, at least in the short term. There isn&amp;#39;t a Rails job within 50 miles of here. Sacramento is the land that time forgot, like that Twilight Zone episode where the guy gets off the train and it&amp;#39;s the 1920&amp;#39;s.&lt;/p&gt;

&lt;p&gt;The real genesis of the thing started when I wanted to put a web site together that would support and allow open Direct Democracy. The idea is that we&amp;#39;d take Congressional voting records and develop a sort of report card as to the extent to which our representatives did -- or didn&amp;#39;t -- represent us. Of course, the foregone conclusion is that they don&amp;#39;t, but in the process of finding that out, we might arrive at a more perfect union.&lt;/p&gt;

&lt;p&gt;Stranger things have happened.&lt;/p&gt;

&lt;p&gt;I started out trying to tackle this beast in PHP, and dug into CakePHP as a way of avoiding the two problems I always had to avoid when working on Rails:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The hosting sucks.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Trying to work on Rails in Windows is like trying to speak Chinese in Venezuela. Sure, you can do it, but if your goal is Chinese, you&amp;#39;re really better off in China. Which in the case of Rails means a Linux box or a Mac.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The problem was that solving this problem via CakePHP is like solving having car trouble by buying a toy car. CakePHP runs brilliantly on Apache Windows and I&amp;#39;m sure hosting would be a breeze, but compared to Rails it turns out to be somewhat limiting, both in the maturity of the platform and the size of the community of developers and contributors.&lt;/p&gt;

&lt;p&gt;So as we speak, a copy of Paragon Hard Disk Manager 11 is running in the background, backing up a big old Windows partition before moving a bunch of stuff around and installing dual boot Linux, which it will also help me do. Then this laptop will become a laptop again, and my wife can use the desktop Linux machine that&amp;#39;s just sitting in the living room gathering dust as a real desktop machine. The total cost of this solution is well over a thousand bucks less than the Macbook Air I&amp;#39;m drooling over, but until we find Jenniffer a job here in the US (she&amp;#39;s a Drafter with lots of Autodesk if you know anyone), I&amp;#39;m in &amp;quot;let&amp;#39;s do it on the cheap&amp;quot; mode.&lt;/p&gt;

&lt;p&gt;So in the last few weeks I&amp;#39;ve been re-exploring the Rails world, and finding all sorts of goodies:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt;. OK, GitHub has been there for several years, but I only recently set up an account, first for my CakePHP stuff and later for the Rails work. I paid a few bucks to be able to keep private repositories, but I&amp;#39;m also possibly going to do some Open Source work.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://blog.davidchelimsky.net/2007/05/14/an-introduction-to-rspec-part-i/&quot;&gt;RSpec&lt;/a&gt;.  OK, yes, Cucumber too but to my untrained eyes so far I must say Cucumber looks wordy enough to step outside the boundaries of &lt;a href=&quot;http://en.wikipedia.org/wiki/You_ain&amp;#x27;t_gonna_need_it&quot;&gt;YAGNI&lt;/a&gt;, whereas RSpec still seems pretty clean.  Tomayto, Tomahto.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Russ Olsen&amp;#39;s &lt;a href=&quot;http://www.amazon.com/Eloquent-Ruby-Addison-Wesley-Professional/dp/0321584104/ref=sr_1_1?ie=UTF8&amp;amp;qid=1325954089&amp;amp;sr=8-1&quot;&gt;Eloquent Ruby&lt;/a&gt;.  This is one of those books that does a great job of putting the language into some sort of context, and does so in a way both teaches you more about the language and lets you make sense of it at the same time.  This one&amp;#39;s worth a look.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/plataformatec/devise&quot;&gt;Devise&lt;/a&gt;.  Want to have feature rich web site registration and authentication pretty much ready to rock and roll in about half an hour?  There you go.  By way of comparison, I spent maybe half a day on some stock CakePHP code to do the same thing, and it wasn&amp;#39;t even close to as done.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/rbjarnason/open-active-democracy&quot;&gt;Open Democracy&lt;/a&gt; and &lt;a href=&quot;https://github.com/opengovernment/govkit&quot;&gt;GovKit&lt;/a&gt;, some open source projects making rolling an open democracy web site less of a development effort (oh well, so much for teaching myself things) and more of an integration effort (hey presto, learn by doing).  And hey look, the &lt;a href=&quot;http://sunlightfoundation.com/&quot;&gt;Sunlight Foundation&lt;/a&gt; -- I&amp;#39;m digging stuff up even as we speak.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So there you go.  Learn Ruby.  It&amp;#39;s the patriotic thing to do.&lt;/p&gt;
</description>
				<pubDate>Sat, 07 Jan 2012 09:10:21 -0800</pubDate>
				<link>/back-into-rails</link>
				<guid isPermaLink="true">/back-into-rails</guid>
			</item>
			
		
			
			<item>
				<title>How Much Is Enough</title>
				<description>&lt;p&gt;The cops arrived at dawn from fifteen jurisdictions&lt;/p&gt;

&lt;p&gt;They roused the terrible rabble (who they later charged with camping)&lt;/p&gt;

&lt;p&gt;Firing tear gas on men, women, and children&lt;/p&gt;

&lt;p&gt;The latest in crowd control&lt;/p&gt;

&lt;p&gt;They shot Scott Olsen in the head &lt;/p&gt;

&lt;p&gt;They shot Scott Olsen in the head&lt;/p&gt;

&lt;p&gt;And fractured his skull&lt;/p&gt;

&lt;p&gt;Enough cops&lt;/p&gt;

&lt;p&gt;Enough jurisdictions&lt;/p&gt;

&lt;p&gt;How many Scott Olsens will get shot in the head for camping?&lt;/p&gt;

&lt;p&gt;While Fox News lies about ACORN&lt;/p&gt;

&lt;p&gt;Support the troops&lt;/p&gt;

&lt;p&gt;How much will you believe?&lt;/p&gt;

&lt;p&gt;How much is enough?&lt;/p&gt;

&lt;p&gt;How many jobs will you send overseas&lt;/p&gt;

&lt;p&gt;To cook your numbers this quarter?&lt;/p&gt;

&lt;p&gt;How many black lies told by how many white men and &lt;/p&gt;

&lt;p&gt;First black presidents?&lt;/p&gt;

&lt;p&gt;Don’t tax the job creators&lt;/p&gt;

&lt;p&gt;Pay no attention while we sign these trade agreements&lt;/p&gt;

&lt;p&gt;Colombia, South Korea, Panama&lt;/p&gt;

&lt;p&gt;Your free trade isn’t free&lt;/p&gt;

&lt;p&gt;You can’t have protectionism without protecting something&lt;/p&gt;

&lt;p&gt;What could it be that isn’t free that you could be protecting?&lt;/p&gt;

&lt;p&gt;Somebody’s job&lt;/p&gt;

&lt;p&gt;Somebody you’ll shoot in the head&lt;/p&gt;

&lt;p&gt;for camping&lt;/p&gt;

&lt;p&gt;Instead of protecting his job.&lt;/p&gt;

&lt;p&gt;How much is enough?&lt;/p&gt;

&lt;p&gt;How much of our money&lt;/p&gt;

&lt;p&gt;Will get robbed in the next election&lt;/p&gt;

&lt;p&gt;While FOX lies about ACORN&lt;/p&gt;

&lt;p&gt;Whle FOX lies about anti-semitism&lt;/p&gt;

&lt;p&gt;While FOX lies in the stomach of America&lt;/p&gt;

&lt;p&gt;like leftover food for fools left to rot&lt;/p&gt;

&lt;p&gt;While fat cats float flat tax&lt;/p&gt;

&lt;p&gt;While you smug in your private community&lt;/p&gt;

&lt;p&gt;While you swung your nine irons&lt;/p&gt;

&lt;p&gt;While you pasted new phones on your loneliness&lt;/p&gt;

&lt;p&gt;How many processors do you need&lt;/p&gt;

&lt;p&gt;For a phone&lt;/p&gt;

&lt;p&gt;To watch FOX lie?&lt;/p&gt;

&lt;p&gt;To lie on your back or &lt;/p&gt;

&lt;p&gt;In your teeth&lt;/p&gt;

&lt;p&gt;Or come, ye 99ers&lt;/p&gt;

&lt;p&gt;To the next how many rallies&lt;/p&gt;

&lt;p&gt;to be shot in how many heads&lt;/p&gt;

&lt;p&gt;by how many cops&lt;/p&gt;

&lt;p&gt;from how many jurisdictions?&lt;/p&gt;

&lt;p&gt;The sun is rising&lt;/p&gt;

&lt;p&gt;On America shot in the face&lt;/p&gt;

&lt;p&gt;The sun is rising too&lt;/p&gt;

&lt;p&gt;because we’re here&lt;/p&gt;

&lt;p&gt;together&lt;/p&gt;

&lt;p&gt;in solidarity&lt;/p&gt;

&lt;p&gt;asking &lt;/p&gt;

&lt;p&gt;how much is enough?&lt;/p&gt;
</description>
				<pubDate>Thu, 27 Oct 2011 04:32:39 -0700</pubDate>
				<link>/how-much-is-enough</link>
				<guid isPermaLink="true">/how-much-is-enough</guid>
			</item>
			
		
			
			<item>
				<title>In Solidarity with Occupy Wall Street</title>
				<description>&lt;p&gt;I&amp;#39;ve been following &lt;a href=&quot;http://occupywallst.org/&quot;&gt;Occupy Wall Street&lt;/a&gt; with great interest on Twitter, and last Saturday Jenniffer and I went down to &lt;a href=&quot;http://www.meetup.com/occupytogether/Sacramento-CA/&quot;&gt;Occupy Sacramento&lt;/a&gt; for a time to meet the folks and show our support.&lt;/p&gt;

&lt;p&gt;Although Occupy Wall Street finally makes it worthwhile to be on Twitter, I thought it was time to write a little more than 140 characters about what a wonderful thing the movement is and how much I enjoyed my brief time meeting with the folks in Sacramento.  To be honest, it&amp;#39;s hard to put into words what a wonderful feeling it was to be there.&lt;/p&gt;

&lt;p&gt;During the Bush era, I was positively embarrassed to be an American.  When the bailouts came in 2008, I left the real estate business I&amp;#39;d been building for several years to go back to work as a computer programmer.   I remember hearing about statistics that went something like this (sorry if this is a bit imprecise, but it&amp;#39;s from memory):   Of 2,000 calls to one of our California Senators (I forget which one), all but six of them were opposed to the bailout.  So public opposition was something like 99.7%.&lt;/p&gt;

&lt;p&gt;The Senator voted for the bailout.&lt;/p&gt;

&lt;p&gt;Any illusions about our government being &amp;quot;representative&amp;quot; that I might have been foolish enough to hold onto before that time were shattered by that news.&lt;/p&gt;

&lt;p&gt;Until Occupy Wall Street came along, I had no idea what to do about it.  Moreover, I certainly wasn&amp;#39;t trying, because I didn&amp;#39;t even think anyone &lt;em&gt;could&lt;/em&gt; do anything about it.&lt;/p&gt;

&lt;p&gt;Now I am full of hope for the future, and respect for the people of this movement.  They have shown me that there is something that I can do -- that we all can do.  They have reminded me of the words of the Declaration of Independence, that:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Governments are instituted among Men, deriving their just powers from the consent of the governed, — That whenever any Form of Government becomes destructive of these ends, it is the Right of the People to alter or to abolish it, and to institute new Government, laying its foundation on such principles and organizing its powers in such form, as to them shall seem most likely to effect their Safety and Happiness.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I hereby withdraw my consent.&lt;/p&gt;

&lt;p&gt;Are we on the eve of a second American Revolution?  Who can say?  I for one don&amp;#39;t think the corporate state will give up its prerogatives willingly, but perhaps I underestimate the power of non-violent movements to wield influence.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s not that I know where all of this will end up.  But for the first time in my memory I believe the answer might be something other than hell-in-a-hand-basket.&lt;/p&gt;

&lt;p&gt;Stay strong.  I love you guys.&lt;/p&gt;
</description>
				<pubDate>Fri, 21 Oct 2011 12:43:58 -0700</pubDate>
				<link>/in-solidarity-with-occupy-wall-street</link>
				<guid isPermaLink="true">/in-solidarity-with-occupy-wall-street</guid>
			</item>
			
		
			
			<item>
				<title>Web Design and Being in a State of Flow</title>
				<description>&lt;p&gt;For someone who considers himself skeptical and rational, I&amp;#39;m a huge fan of self help books.  Naturally, given my skeptical and rational bent, my taste in such books leans heavily toward those that either really are somewhat scientific or at least make a pretense of being that way.&lt;/p&gt;

&lt;p&gt;Lately I&amp;#39;ve been reading Daniel Goleman&amp;#39;s &lt;a href=&quot;http://www.amazon.com/gp/search/ref=as_li_qf_sp_sr_il_tl?ie=UTF8&amp;amp;keywords=Emotional%20Intelligence&amp;amp;tag=sacramentorea-20&amp;amp;index=aps&amp;amp;linkCode=as2&amp;amp;camp=1789&amp;amp;creative=9325&quot;&gt;Emotional Intelligence&lt;/a&gt;, which is the kind of intelligence I don&amp;#39;t have as much of.  I have a good supply of the other kind, according to such measures as the Stanford/Binet IQ test and the SATs.  But as regards Emotional Intelligence, I rank somewhere between &amp;quot;average at best&amp;quot; and &amp;quot;hopelessly out of control&amp;quot;, depending on what test I take.&lt;/p&gt;

&lt;p&gt;The test that predicts I&amp;#39;m hopelessly out of control suggests as possible &amp;quot;favored careers&amp;quot; such possibilities as psychotherapist, philosophy professor, or web designer.  Among careers that are disfavored are fighter pilot and construction manager.  Interestingly enough, being a CEO is both favored and disfavored for me.&lt;/p&gt;

&lt;p&gt;The implication is that if you&amp;#39;re a bit of a kook, you shouldn&amp;#39;t be flying planes or building buildings, but it&amp;#39;s OK to mess with people&amp;#39;s heads or build web sites, and no one is sure if you should be running a company.  &lt;/p&gt;

&lt;p&gt;Perhaps Howard Hughes kept the door open for us.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fortunately, Web Design is On The List&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I was delighted to find out that Web Design was on the list of acceptable professions for unacceptable people, since I really like doing it so much, and often find that I can work on a site for many hours at a time while becoming completely engrossed in what I&amp;#39;m doing, a state that Michael Csikszentmihalyi wrote about in yet another self-help book, &lt;a href=&quot;http://www.amazon.com/gp/search/ref=as_li_qf_sp_sr_il_tl?ie=UTF8&amp;amp;keywords=Flow&amp;amp;tag=sacramentorea-20&amp;amp;index=aps&amp;amp;linkCode=as2&amp;amp;camp=1789&amp;amp;creative=9325&quot;&gt;Flow:  The Psychology of Optimal Experience&lt;/a&gt;.  Of all the web sites I&amp;#39;ve built, only a few have actually paid me, and if you work out the hourly rate and compare it to my day job as a programmer, it turns out that not being creative actually pays a lot better.&lt;/p&gt;

&lt;p&gt;I suppose that if my day job were to become web design, I&amp;#39;d have to develop systems and repetitive product offerings so I could make a decent living at it.  In other words, I&amp;#39;d have to treat it more &amp;quot;practically&amp;quot;.  &lt;/p&gt;

&lt;p&gt;I wonder what the personality testers would make of that.&lt;/p&gt;
</description>
				<pubDate>Tue, 21 Jun 2011 19:04:54 -0700</pubDate>
				<link>/web-design-and-being-in-a-state-of-flow</link>
				<guid isPermaLink="true">/web-design-and-being-in-a-state-of-flow</guid>
			</item>
			
		
			
			<item>
				<title>CSS3 and Modern Web Design Resources This WeekRecursos Para CSS y Diseño Web Moderno Esta Semana</title>
				<description>&lt;p&gt;I&amp;#39;ve been preparing for a tutorial series that I will write soon that will start with a blank screen in a text editor and finish with a complete modern CSS3 web site layout.  I might also include a bilingual Wordpress and / or Drupal theme, depending on how ambitious I&amp;#39;m feeling once I&amp;#39;m well into it.  In preparation, I&amp;#39;ve been perusing several websites to think about what sorts of things I would like to include. I&amp;#39;ll post a follow-up to this article outlining the work we&amp;#39;ll be doing in the tutorial, but meantime, I thought I&amp;#39;d share some of the resources I found, which are excellent.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What We Can Build&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The first thing we’ll want to provide for is the ability to grow the site to an indefinite size, and one key element to supporting this is a nested navbar menu.  Coding these without breaking something used  to be a major project, but JQuery and (to a lesser extent CSS3) have simplified things tremendously.  For a basic tutorial with starter code, check out &lt;a href=&quot;http://twitter.com/danwellman&quot;&gt;Dan Wellman&lt;/a&gt;’s &lt;a href=&quot;http://net.tutsplus.com/tutorials/html-css-techniques/how-to-create-a-drop-down-nav-menu-with-html5-css3-and-jquery/&quot;&gt;How to Create a Drop-down Nav Menu with HTML5, CSS3 and jQuery&lt;/a&gt;.   You can find several more tutorials and lots of good ideas for how one might implement drop downs in &lt;a href=&quot;http://twitter.com/1stwebdesigner&quot;&gt;1stWebDesigner&lt;/a&gt;’s &lt;a href=&quot;http://bit.ly/b7VqWi&quot;&gt;38 jQuery And CSS Drop Down Multi Level Menu Solutions&lt;/a&gt;.  Time sink warning:  it’s hard to pick a favorite among the articles he highlights.&lt;/p&gt;

&lt;p&gt;Of course we’ll also want rounded corners and CSS3 gradients.  Is it the most universally compatible solution that will work on every browser?  Of course not, but it should degrade well, and one of our goals in the article series will be to excercies our flabby CSS muscles a bit.  A starting point for these is Schillmania&amp;#39;s &lt;a href=&quot;http://www.schillmania.com/content/entries/2009/css3-and-the-future/&quot;&gt;CSS 3 and The Future: Image-free Rounded Corners, Drop Shadows and Gradients&lt;/a&gt;.  Finally, we may have to throw in a little pure CSS eye candy, such as those you can find in &lt;a href=&quot;http://twitter.com/film_girl&quot;&gt;Christina Warren&lt;/a&gt;&amp;#39;s &lt;a href=&quot;http://mashable.com/2010/06/04/awesome-css3-techniques/&quot;&gt;7 Awesome CSS3 Techniques You Can Start Using Right Now&lt;/a&gt;.  I want bubble quotes, so my monthly non-spam comment will look really, really cool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What We Need at the Keyboard&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Oh my gosh, I can’t believe I’ve developed a real taste for Earl Gray Tea.  My life as a geek is complete if I can say that the first thing we’ll need at the keyboard is “Tea, Earl Gray, Hot”.  One other item that I’m sure will prove equally nice to have around as time goes by is SmashingMagazine&amp;#39;s the &lt;a href=&quot;http://media.smashingmagazine.com/wp-content/uploads/images/css3-cheat-sheet/css3-cheat-sheet.pdf&quot;&gt;Cascading Style Sheets Cheat Sheet&lt;/a&gt;.   Another useful starting point if you&amp;#39;re a beginning student (or like me, a half-baked intermediate student) of CSS is their introduction, &lt;a href=&quot;http://www.smashingmagazine.com/2009/10/05/mastering-css-coding-getting-started/&quot;&gt;Mastering CSS Coding, Getting Started&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It’s a discouraging, really.  Wanting to write an article series on an Internet that includes SmashingMagazine.com is like trying to be a playwright when you live accross the street from William Shakespeare.  Might as well just hyperlink to Othello and call it a day.  But perhaps you&amp;#39;ll find it useful.&lt;/p&gt;

&lt;p&gt;Lo siento, pero este artículo aun no está traducido desde inglés.  ¿Que puedo decir?  Trabajo demasiado durante la semana, porque me pagan.  Les prometo que voy a traducirlo pronto.  Gracias por tu paciencia.&lt;/p&gt;
</description>
				<pubDate>Tue, 15 Jun 2010 06:08:36 -0700</pubDate>
				<link>/css3-and-modern-web-design-resources-this-week</link>
				<guid isPermaLink="true">/css3-and-modern-web-design-resources-this-week</guid>
			</item>
			
		
			
			<item>
				<title>The Unimaginable</title>
				<description>&lt;p&gt;Recently, my life seems to be full of things I never imagined. Indeed, being a few weeks away from turning 51 is itself something I never imagined. My father died when he was 47, and given the way I behaved in my younger days, I was convinced I’d also leave my myriad fans behind some time in my forties, so in this respect each additional moment comes as a surprise. Apparently the fortuitous combination of maternal genetics and the adage that “only the good die young” has offered me a measure of protection.&lt;/p&gt;

&lt;p&gt;In addition to the profound mystery of my prolonged respiration, my life is full of lesser curiosities. For example, I’ve been using Twitter lately. In this respect I’m like one fine episode of Gilligan’s Island, in which in one scene Gilligan resists wearing a dress thus: “You can’t make me, you can’t make me, you can’t make me.”&amp;quot; Of course in the next scene Gilligan is wearing a dress.&lt;/p&gt;

&lt;p&gt;I have now donned Twitter, and yes, I agree: it looks as ridiculous on me as Gilligan’s Dress. I’m at &lt;a href=&quot;http://twitter.com/JohnLockwood&quot;&gt;@JohnLockwood&lt;/a&gt;. Say hello, it would be a tweet.&lt;/p&gt;

&lt;p&gt;Still more unusual than using Twitter is this: I follow Tony Robbins. You all know Tony Robbins, pop psychology’s answer to &lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;client=firefox-a&amp;amp;hs=L01&amp;amp;rls=org.mozilla%3Aen-US%3Aofficial&amp;amp;q=Guy+Smiley&amp;amp;btnG=Search&quot;&gt;Guy Smiley&lt;/a&gt;. I’m interested in what he has to say. Through the usual means of Google, learn, hyperlink, repeat, I learned a little more about Neurolinguistic Programming by looking at some pages about Robbins. It’s interesting too. I’ll probably buy a book or two about it.&lt;/p&gt;

&lt;p&gt;That much is not unusual: I’ll probably buy a book or two. What can I say, I’m an intellectual, and intellectuals buy books. Amazon.com eyes me with the very lust that the lion has for a slow zebra.&lt;/p&gt;

&lt;p&gt;The big oddity of my forties was leaving software development to pursue a career in sales. Of course in recent years, temperament and the economy have conspired to return me to my earlier craft, and so – much like angular momentum – nerdhood would appear to be conserved. A bigger surprise awaited me in finding out that I’d not only find a a regular W2 job with the 8 to 5 and the cubicle and the donuts on Friday, but actually, in some measure, enjoy it.&lt;/p&gt;

&lt;p&gt;The day job notwithstanding, I have not yet abandoned my quest for the most unimaginable thing of all: my life’s calling. In this case, by unimaginable I mean something quite literal: if I have a life’s calling, I can’t imagine what it is.&lt;/p&gt;

&lt;p&gt;I’m not entirely convinced that having a life’s calling is not something that motivational types like Tony Robbins haven’t made up to sell books about how to find it, secure in the knowledge that most people pass their lives as I do: more or less farting around. Selling houses is a good business model because they’re expensive, but a lot more people have houses than a clearly defined sense of what their purpose in life is. So on the demand side, selling the idea of finding oneself is not a bad way to go.&lt;/p&gt;

&lt;p&gt;I’m going to spend some time finding myself. If I succeed, I’ll let you know where I was all along. I’ll bring a water bottle in case I appear to be dehydrated.&lt;/p&gt;
</description>
				<pubDate>Sat, 29 May 2010 06:58:43 -0700</pubDate>
				<link>/the-unimaginable</link>
				<guid isPermaLink="true">/the-unimaginable</guid>
			</item>
			
		
			
			<item>
				<title>Facebook Privacy Concerns</title>
				<description>&lt;p&gt;Lately the well publicized quitting of Facebook by many Google empoyees and others over privacy issues has struck me as rather funny. OK, exactly what state secrets do you have on Facebook that would be a huge problem if someone found out? You like the movie Avatar? You play basketball? Yep, I could get your bank account information easily with that data. Your name? Make one up if you&amp;#39;re paranoid. Your birthday? Likewise.&lt;/p&gt;

&lt;p&gt;Look: the whole point of a web site like Facebook is to share a bunch of meaningless details with friends and people for whom the bar to being your friend is their desire to have a high number of friends.&lt;/p&gt;

&lt;p&gt;Next headline: Fitness Club Members Quitting Over Exercise Concerns.&lt;/p&gt;
</description>
				<pubDate>Fri, 28 May 2010 05:59:40 -0700</pubDate>
				<link>/facebook-privacy-concerns</link>
				<guid isPermaLink="true">/facebook-privacy-concerns</guid>
			</item>
			
		
			
			<item>
				<title>Saturday Morning With The Dog vs. Twitter and Facebook</title>
				<description>&lt;p&gt;Word of warning: this isn’t going to be a fair fight at all.&lt;/p&gt;

&lt;p&gt;The relationship I have with my dog on a walk is tremendously satisfying. In the first place, she loves it. There’s no opportunity in a a typical day to give another being as much joy as I can give my dog simply by finding the leash and walking out the door. Then there’s the loyalty: on the leash, my dog wants to wander off, and on it she wants to pull a bit. But for all that, she’s always amenable to being called back to be by my side, and with the exception of cats and squirrels, which must be chased, her attention is generally squarely on me, which assuages my megalomania. And recently she even stopped on command and refrained from chasing a cat. Remarkable.&lt;/p&gt;

&lt;p&gt;Now this is good for 30-60 minutes or so, during which I’m moving, my heart is beating, lungs are filling with air, and the cold mornings of a planet on the brink of another ice age are very invigorating.&lt;/p&gt;

&lt;p&gt;Then there’s Twitter and Facebook. My basic routine is shaping up to look something like this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Open Tweetdeck.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Scan messages for something interesting.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Hmm, slim pickings. Well, Purva’s awake. Say something dumb to Purva.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Read a real estate post or two by a prodigious blogger pal. Hmm, loan fraud is always something buyers commit, not lenders. Consider an article with an ant-capitalist morale. Realize it won’t fit in 140 characters.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Look for another interesting post.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reply to Jeffo.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Write an article about my dog.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click the Tweetdeck refresh button, anything interesting now? OK, fine.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And then of course, I finish getting dressed. Now where was that leash?&lt;/p&gt;
</description>
				<pubDate>Sat, 22 May 2010 09:32:14 -0700</pubDate>
				<link>/saturday-morning-with-the-dog-vs-twitter-and-facebook</link>
				<guid isPermaLink="true">/saturday-morning-with-the-dog-vs-twitter-and-facebook</guid>
			</item>
			
		
			
			<item>
				<title>Confessions of a Social Media Retard Moron</title>
				<description>&lt;p&gt;Lately I’ve been really trying to blog more and Twitter more and FaceBook more.&lt;/p&gt;

&lt;p&gt;I’m not sure why yet. I thnk I might be selling something someday, but I’m not sure what. This is probably how people should sell on social media, rather gently. There’s a company near here that I added to my friends on Twitter, because they asked an interesting question or two about the area, and their first response was to send me a private message with “How can we help you with your [company business related] needs?”&lt;/p&gt;

&lt;p&gt;Well, you can’t, really, I was just saying hello.&lt;/p&gt;

&lt;p&gt;On the other end of the spectrum, I noticed that Jay Thompson has thousands of followers. That guy is everywhere. And he doesn’t sell, but if I had a referral I’d give it to him, because I know who he is. He’s very nice.&lt;/p&gt;

&lt;p&gt;On the non-business side of the spectrum we have Purva Brown. Purva just enjoys Facebook and talks about what she likes to talk about, and has a good time. I admire that.&lt;/p&gt;

&lt;p&gt;Even though I’m trying hard to feel my way around the whole Web 2.0 phenomenon, the core problem I have is threefold:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;As often as not, I have nothing (or very little) to say. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I have a really hard time just going out there and saying nothing, because people who update me on the kind of trivial details that I generally have in stock bore the daylights out of me, and I don’t want to inflict that on others. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I don’t take a lot of pictures. I don’t know why. I have a nice camera. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I think to be really successful at social media, you have to be just confident enough in yourself to blab at the mouth a lot, yet not so egotistical that you feel the need to have something to say.&lt;/p&gt;

&lt;p&gt;Take this post.&lt;/p&gt;

&lt;p&gt;Please.&lt;/p&gt;
</description>
				<pubDate>Thu, 20 May 2010 20:54:19 -0700</pubDate>
				<link>/confessions-of-a-social-media-retard</link>
				<guid isPermaLink="true">/confessions-of-a-social-media-retard</guid>
			</item>
			
		
			
			<item>
				<title>Social Networking, Are You Kidding Me?</title>
				<description>&lt;p&gt;Well, leave it to &lt;a href=&quot;http://www.andrewrhee.net/&quot;&gt;Andrew Rhee&lt;/a&gt;, my very smart friend, to finally teach me what social network marketing is about.&lt;/p&gt;

&lt;p&gt;The problem I had in understanding social network marketing was that when I first encountered it, it was as a Realtor, and most of my colleagues were just setting up pages like “Podunk Real Estate” and asking me to be fans. This struck me as rather self serving and not very interesting.&lt;/p&gt;

&lt;p&gt;Andrew straightened me out the other day by telling me that he rarely goes on Google except to find information, but when a friend recommends something (on Twitter, for example), he often is very interested. Oh, yeah, I get that! That’s plain old vanilla referral marketing, only with a web site as a telephone.&lt;/p&gt;

&lt;p&gt;Bear with me: I’m old.&lt;/p&gt;

&lt;p&gt;So anyway, I’m going to start fooling around more with integrating social network content into my sites. That would be in between making drastic changes to my life, working, learning Spanish, and going to the gym.&lt;/p&gt;

&lt;p&gt;Well, at least I’m not bored.&lt;/p&gt;

&lt;p&gt;So this post serves to announce that intention to my legions of raving fans. Oh, right. As well, it’s a test post, since I’ve just set up TwitterFeeds to Twitter and the MyFace, aka Facebook.&lt;/p&gt;

&lt;p&gt;Let’s see if I can read myself there by writing myself here.&lt;/p&gt;
</description>
				<pubDate>Sat, 15 May 2010 08:13:57 -0700</pubDate>
				<link>/social-networking-are-you-kidding-me</link>
				<guid isPermaLink="true">/social-networking-are-you-kidding-me</guid>
			</item>
			
		
			
			<item>
				<title>Knee Jerk Open Source-ialism</title>
				<description>&lt;p&gt;I have a few conservative friends. I can&amp;#39;t help it. I live in El Dorado County, not Berkeley. One of my conservative friends who I haven&amp;#39;t seen in a few years used to say that his quarrel with liberals was that they had a lot of knee-jerk ideas. A search for &amp;quot;knee jerk liberal&amp;quot; returns 431,000 Google results, while &amp;quot;knee jerk conservative&amp;quot; returns only 408,000, which proves (scientifically, of course) that liberals have 5.6% more knees than conservatives. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.particlewave.com/images/blog/KneeJerkOpenSourceialism_C109/image.png&quot;&gt;&lt;img src=&quot;http://www.particlewave.com/images/blog/KneeJerkOpenSourceialism_C109/image_thumb.png&quot; alt=&quot;image&quot;&gt;&lt;/a&gt;Our abundance of knees is why conservatives less often have a leg to stand on. Unfortunately, this also means we liberals have 5.6% more jerks, so don&amp;#39;t rest on your laurels just yet.&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;What Has Liberalism to Do With Open Source? *&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Nothing.&lt;/p&gt;

&lt;p&gt;Surprised? You may find one of your mental knees trying to jerk as we speak. People seem to innately associate open source with Barrack Obama, gay marriage, and the rest of the rebel alliance, while of course when we think closed source, we generally think of Microsoft, which conjures up Darth Vader, Dick Cheney, and the tanks at Tiananmen Square.&lt;/p&gt;

&lt;p&gt;Hey, don’t blame me. I didn’t make up your mental categories.&lt;/p&gt;

&lt;p&gt;I do however find this very interesting. I was beginning to think about this as I started to notice that everywhere I turned when starting to think about creating an Employee Owned Software Collective, I found that the companies out there were all open source companies. The first company I came across was the Ronin Tech Collective, who describe themselves thus:&lt;br&gt;
_&lt;br&gt;
We are a worker-owned and operated technology collective, focused on workplace democracy and promoting a democratic society while supporting progressive businesses, non-profits, and cooperatives by providing open-source website development and consulting._&lt;/p&gt;

&lt;p&gt;I have an email out to them, because that’s all good. (I’m not religious about languages – good socialist that I am, I’m atheistic about them). My point, again, though is that the assumption is that progressivism and open source go together. Check out the United Federation of Worker Cooperative’s welcome of their newest member, which I’ll reprint here since ultimately they’ll end up with a still newer member and the link would be no good:     &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Welcome to our newest member! Passionate about sustainability,this web design and custom application developer has deep roots in Seattle&amp;#39;s progressive communities.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now if you navigate to the company in question, you’ll find that they &lt;em&gt;“[serve] sustainability-driven businesses and organizations with professional Internet expertise. We build highly interactive websites with open source software to help you achieve your goals.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Of course, if you’re going to “support progressive businesses” or serve “sustainability-driven businesses”, you need to be open source, right?&lt;/p&gt;

&lt;p&gt;Why? For the same reason “stark” doesn’t go with “hungry”. Nobody’s stark hungry, though we know stark means completely. If you’re stark, then by golly, we all know you’re stark naked.&lt;/p&gt;

&lt;p&gt;When I mentioned to my wife that I was thinking about starting an employee owned collective, fine wife as she is, she didn’t say, “What, are you crazy? You have a good job, you’ll go broke.” What she said was: “You should look into Open Source.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Is There Anything Wrong With This?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So what’s wrong with a company using Open Source and being Progressive? Nothing at all. Here are a few ideas though:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Don’t Limit Your Customer Base&lt;/strong&gt;&lt;br&gt;
Yes, there are a lot of companies who are building curly light-bulbs or selling low cruelty mochas, but why should we as an employee run business sell only to them? What if the National Rifle Association wants a web site? Do we turn them down?   &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;*&lt;em&gt;Serve Your Employees&lt;br&gt;
*&lt;/em&gt;I just talked to a friend I’ve known for some forty-nine years or so, when our mom’s used to stick us in the same playpen so they could talk. He told me the story of how a bank he used to work for as a DBA wanted to switch from SQL Server to PostgreSQL, and his initial reaction was: “I don’t want that on my resume.” He went on to tell how he met some folks at a PostgreSql conference who told him the story of how they were travelling in a van and concerned that if the Van crashed, there’d be no more PostgreSQL support. Programmers want to work in a place where there skills are transferrable. This is so they can take their marbles and go home if your project gets too stupid. Try this: go up on Dice and search for “Ruby on Rails”, then search for “ASP.NET”. I will wait here for you.        &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;*&lt;em&gt;Open Source is Good Because It’s Free&lt;br&gt;
*&lt;/em&gt;Well, this is partially true. I’m always amazed at how many blogs _about _ASP.NET are _running _on Wordpress or Blogspot or another non-ASP platform. At the same time, I see the fact that open source Application Service Provider companies don’t offer an upgrade and consulting path for medium to large businesses who want a Microsoft hosted platform to be hosted in house to be a huge opportunity.   &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Moreover, as a &lt;em&gt;programmer&lt;/em&gt;, free software is not good. Software that I own (in whole or in part) and can sell is good. Does that mean I’m going to do a bad job or not offer my clients a fair price? No, it just means I’m not working for free.        &lt;/p&gt;

&lt;p&gt;Labor union organizers had a word for people who did things cheaply for the bosses. They called them scabs. Of course, in the course of things, labor unions and socialism gave way to liberalism. (&lt;a href=&quot;http://www.lala.com/#song/360569488119466184&quot;&gt;Love me, love me, love me, I’m a Liberal&lt;/a&gt;). Today we who are afraid to be called liberals are known as progressives, and we lament the fate of workers around the world while refusing steadfastly to pay for music, software, or anything else of artistic value.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Win-Win or Don’t Play&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The problem of course with working as a programmer for a big company is that you&amp;#39; don’t have a say in how the software is created. Working open source, you can do whatever you want for free, and then try to sell that to people who by definition don’t pay for things. Working as an employee-owner in a closed source shop, you can build your skills and own the software that is sold and forms the basis of the consulting business -- the “means of production”, if you will. Your clients will benefit from your longevity to the company and the dedication with which you take a long term view to create outstanding software. Everybody wins. And nobody gets run over by a tank.&lt;/p&gt;
</description>
				<pubDate>Sun, 01 Nov 2009 13:50:08 -0800</pubDate>
				<link>/knee-jerk-open-source-ialism</link>
				<guid isPermaLink="true">/knee-jerk-open-source-ialism</guid>
			</item>
			
		
			
			<item>
				<title>Employee Owned Software Company</title>
				<description>&lt;p&gt;ParticleWave is currently being organized as startup employee owned cooperative, owned and controlled exclusively by its employees.&lt;/p&gt;

&lt;p&gt;This document is a *&lt;em&gt;DRAFT *&lt;/em&gt;of how that might look – based on one founder’s take on how we might be organized and do business. If others are interested and committed to this idea, then we should probably get together weekly or something and go through &lt;a href=&quot;http://www.cccd.coop/info/starting_operating_a_coop&quot;&gt;this process&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This document consists of the following sections.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Business Activities&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DRAFT Organizational Structure&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Related Resources / Reading&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Business Activities&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ParticleWave owners will create multiple lines of business that will, in our consensus opinion, be rewarding to the membership both as people who need to eat and as creative software developers. Some potential business activities include:      &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;*&lt;em&gt;Application Service Provider Model Applications&lt;br&gt;
*&lt;/em&gt;We will create commercial web applications using ASP.NET MVC or other web development environments that will compete directly and favorably with solutions developed by companies like 37 Signals (a Ruby on Rails shop). Unlike 37 Signals, however, we will also offer these applications as licensed solutions sold with or without an associated consulting engagement. [My own preference is to see this grow into our core business model].         &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;*&lt;em&gt;Consulting and Contract Programming and Web Development&lt;br&gt;
*&lt;/em&gt;In addition to creating long term value through service applications owned by the company, we will also create software to be owned by clients. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;DRAFT organizational structure.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The word owner is used throughout as a synonym for owner-employee. Although we may from time to time hire employees who are not asked to stay on as owners (temp workers, contractors, or potential owners on probation), the company will be 100% owned by active employees. (The only exception to this rule is outlined below in “Legacy Ownership”). There is therefore no stock sold outside the company. Also, as much as possible, we will try to have work performed by employee owners, so temporary workers should be the exception and not the rule. It is not our intent to create a core of “senior partners” who benefit from the work of others, but a true cooperative system.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Company Shares&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;All owners receive one ownership share for every hour of work contributed that is either billable outside the company or contributes to the goals of the company as laid down by the voting owners. A share is a percentage of the yearly profit payout if the company is profitable, with the downside risk that the hour could have been better spent playing World of Warcraft or eating a hamburger. This is not a stock option, which we all know often turns out to be valueless toilet paper, but a full ownership share, which may also turn out to be valueless toilet paper.&lt;/p&gt;

&lt;p&gt;We will create a mechanism for tracking hours that the members can use. The current number of shares, amount of capitalization, and other income and expense information will be available to all members.&lt;/p&gt;

&lt;p&gt;Company shares may not be transferred or sold.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Voting Members&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Owners who are skilled enough to work billable hours and who wish to help direct the affairs of the company and make a more significant contribution may, with the approval of the existing voting members. Voting members will capitalize the company. The capitalization requirements are $4,800, payable as either:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Twenty-four monthly payments of $200. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Forty-eight monthly payments of $100.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Voting members expect to work for the company full time, either now or as soon as practicable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Management&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The company is managed by the informed consensus of all voting owners.&lt;/p&gt;

&lt;p&gt;A Board of Directors consisting of not more than five owners will be elected every six months. Their responsibilities will be limited to the following areas of concern:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Ensuring compliance with Federal, State, and Local laws and tax requirements. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;(Annually) setting the ratio of gross receipts to be allocated to the general fund versus the membership fund. The general fund should consist of the no more than the amount needed to cover the expenses of the business, plus a prudent reserve. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Working with those outside the company (sales, managing vendors etc). Working with the ownership at large to reach a consensus on any and all hiring or firing decisions. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Members of the board will make the same compensation as anyone else, assuming anyone else does. Also, the board should be mindful that it’s purpose is to serve the owners collectively. Shares of ownership and the corresponding dividend payments will always be equal among Non-Voting Members, Voting Members, and the Board. There are no preferred shares, and the rule is one hour of work, one share.&lt;/p&gt;

&lt;p&gt;All other company affairs will be decided at a company meeting to be held at regular intervals. This document naturally can’t cover everything we do. Initially, the meetings will be held weekly. Any matter may be raised by any voting owner, with the outcome to be decided by as much as possible by a consensus. In the event a consensus cannot be reached, the outcome will be decided by a simple majority.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Legacy Ownership&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Capital shares must be transacted within 90 days of an owner’s termination of their employment.        &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Work shares are retained according to the work share formula described in the section “Ownership Share Formula.” &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Further Reading&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.community-wealth.org/_pdfs/articles-publications/coops/article-logue.pdf&quot;&gt;What is an Employee Owned Cooperative&lt;/a&gt;.&lt;br&gt;
This article is an excellent introduction to how Employee Owned Cooperatives may be structured.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.usworker.coop/front&quot;&gt;U.S. Federation of Worker Cooperatives&lt;/a&gt;&lt;br&gt;
Organization consisting of member companies organized as cooperatives. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Rochdale_Principles&quot;&gt;The Rochdale Prinicples&lt;/a&gt;&lt;br&gt;
A core set of principles and values that many co-op organizations follow.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cccd.coop/&quot;&gt;California Center for Cooperative Development&lt;/a&gt;&lt;br&gt;
State analog to the US Federation of Worker Cooperatives. There’s a lot of good information here including an introduction to &lt;a href=&quot;http://www.cccd.coop/info/types_of_coops/worker_coops&quot;&gt;Worker Owned Co-Operatives&lt;/a&gt;.       &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.nceo.org&quot;&gt;National Center for Employee Ownership&lt;/a&gt;&lt;br&gt;
A detailed resource of information we may need going forward.       &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.ronincollective.com/&quot;&gt;Ronin Tech Collective&lt;/a&gt;.&lt;br&gt;
A Vermont web development software company organized as an Employee Owned Cooperative&lt;/p&gt;
</description>
				<pubDate>Sun, 01 Nov 2009 11:12:49 -0800</pubDate>
				<link>/employee-owned-software-company</link>
				<guid isPermaLink="true">/employee-owned-software-company</guid>
			</item>
			
		
			
			<item>
				<title>Employee Owned Software -- Why You Should (n't?) Watch Michael Moore Movies</title>
				<description>&lt;p&gt;I met a few out of town friends to see Michael Moore’s Capitalism, a Love Story recently. As usual, Howard Zinn loving socialist that I am, listener to this guy that I am …&lt;/p&gt;

&lt;p&gt;this movie was quite appealing to me, and I began to think about how cool it would be to work for an employee owned software collective.&lt;/p&gt;

&lt;p&gt;So that&amp;#39;s what I&amp;#39;m going to do.&lt;/p&gt;

&lt;p&gt;How hard can it be?&lt;/p&gt;

&lt;p&gt;Oh, right, it can be an arduous part time struggle to get the thing going while woikin&amp;#39; for the man every night and day. But I never lost a minute of sleepin&amp;#39;, worrying &amp;#39;bout the way things might have been.&lt;/p&gt;

&lt;p&gt;Oh, sorry, that&amp;#39;s a different song, isn&amp;#39;t it?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Further Reading&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Anyway, here are a couple of resources if this idea appeals to you as it does to me:&lt;/p&gt;

&lt;p&gt;The guys actually have an &lt;a href=&quot;http://www.ronincollective.com&quot;&gt;employee owned software collective&lt;/a&gt; in the liberal Ben and Jerry&amp;#39;s Gay Marriage state of Vermont. A collective, no less. Let&amp;#39;s hope Papa Joe Stalin doesn&amp;#39;t come by and wipe them out.&lt;/p&gt;

&lt;p&gt;Isn&amp;#39;t socialism exciting?&lt;/p&gt;

&lt;p&gt;I enjoy it.&lt;/p&gt;

&lt;p&gt;The more detail oriented among you may enjoy this (PDF Alert) article about &lt;a href=&quot;http://www.community-wealth.org/_pdfs/articles-publications/coops/article-logue.pdf&quot;&gt;What Is an Employee Cooperative&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;There’s even a &lt;a href=&quot;http://www.usworker.coop/front&quot;&gt;bit of a club&lt;/a&gt; we can join. Kind of a Star Trek Economics Chamber of Commerce. &lt;/p&gt;

&lt;p&gt;Let’s just hope I’m not the ensign in the red shirt.&lt;/p&gt;

&lt;p&gt;Kaplah, comrades!&lt;/p&gt;
</description>
				<pubDate>Sun, 01 Nov 2009 09:59:08 -0800</pubDate>
				<link>/an-employee-owned-software-collective</link>
				<guid isPermaLink="true">/an-employee-owned-software-collective</guid>
			</item>
			
		
			
			<item>
				<title>Working with ASP.NET AJAX and Client-Side Scripting</title>
				<description>&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Implement Web Forms by using ASP.NET AJAX. May include but is not limited to: EnablePartialRendering, Triggers, ChildrenAsTriggers, Scripts, Services, UpdateProgress, Timer, ScriptManagerProxy&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Interact with the ASP.NET AJAX client-side library. May include but is not limited to: JavaScript Object Notation (JSON) objects; handling ASP.NET AJAX events&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Consume services from client scripts.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Create and register client script. May include but is not limited to: inline, included .js file, embedded JavaScript resource, created from server code&lt;/p&gt;
</description>
				<pubDate>Tue, 27 Oct 2009 13:21:00 -0700</pubDate>
				<link>/working-with-asp-net-ajax-and-client-side-scripting</link>
				<guid isPermaLink="true">/working-with-asp-net-ajax-and-client-side-scripting</guid>
			</item>
			
		
			
			<item>
				<title>Programming Web Applications</title>
				<description>&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Customize the layout and appearance of a Web page. May include but is not limited to: CSS, Themes and Skins, Master Pages, and Web Parts, App_Themes, StyleSheetTheme&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Work with ASP.NET intrinsic objects. May include but is not limited to: Request, Server, Application, Session, Response, HttpContext&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Implement globalization and accessibility. May include but is not limited to: resource files, culture settings, RegionInfo, App&lt;em&gt;GlobalResources, App&lt;/em&gt;LocalResources, TabIndex, AlternateText , GenerateEmptyAlternateText, AccessKey, Label.AssociatedControlID&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Implement business objects and utility classes. May include but is not limited to: App_Code , external assemblies&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Implement session state, view state, control state, cookies, cache, or application state.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Handle events and control page flow. May include but is not limited to: page events, control events, application events, and session events, cross-page posting; Response.Redirect, Server.Transfer, IsPostBack, setting AutoEventWireup&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Implement the Generic Handler.&lt;/p&gt;
</description>
				<pubDate>Fri, 23 Oct 2009 13:26:00 -0700</pubDate>
				<link>/programming-web-applications</link>
				<guid isPermaLink="true">/programming-web-applications</guid>
			</item>
			
		
			
			<item>
				<title>Targeting Mobile Devices</title>
				<description>&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Access device capabilities. May include but is not limited to: working with emulators&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Control device-specific rendering. May include but is not limited to: DeviceSpecific control; device filters; control templates&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Add mobile Web controls to a Web page. May include but is not limited to: StyleSheet controls; List controls; Container controls&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Implement control adapters. May include but is not limited to: App_Browsers; rendering by using ChtmlTextWriter or XhtmlTextWriter&lt;/p&gt;
</description>
				<pubDate>Mon, 19 Oct 2009 13:24:00 -0700</pubDate>
				<link>/targeting-mobile-devices</link>
				<guid isPermaLink="true">/targeting-mobile-devices</guid>
			</item>
			
		
			
			<item>
				<title>DirectoryInfo Example</title>
				<description>&lt;p&gt;In the spirit of our DriveInfo example, which was a little slip of a thing, here&amp;#39;s a DriveInfo example. &lt;/p&gt;

&lt;p&gt;`&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;using System;
using System.Collections.Generic;
using System.IO;

class DirectoryInfoExample
{
    static void Main(string[] args)
    {
        string dir = @&amp;quot;C:\&amp;quot;;
        Console.WriteLine(&amp;quot;Listing directories underneath {0}&amp;quot;, dir);
        DirectoryInfo diList = new DirectoryInfo(dir);
        foreach (DirectoryInfo di in diList.GetDirectories())
        {
            Console.WriteLine(&amp;quot;{0}&amp;quot;, di.FullName);
        }
        Console.WriteLine(&amp;quot;Listing files in {0}&amp;quot;, dir);

        foreach (FileInfo fi in diList.GetFiles())
        {
            Console.WriteLine(&amp;quot;File name:  {0}\nCreated:  {1},\nLength:   {2} bytes&amp;quot;, 
                 fi.Name, fi.CreationTime, fi.Length);
        }
        Console.ReadKey();     
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;`&lt;/p&gt;
</description>
				<pubDate>Sat, 03 Oct 2009 12:46:00 -0700</pubDate>
				<link>/directoryinfo-example</link>
				<guid isPermaLink="true">/directoryinfo-example</guid>
			</item>
			
		
			
			<item>
				<title>BlogEngine.NET Comes to The Workbench</title>
				<description>&lt;p&gt;As I&amp;#39;ve started to develop a modest control for displaying ASP.NET certification exam questions and some other bits and pieces of code that I haven&amp;#39;t written about yet, it got to be pretty obvious that writing about ASP.NET on a PHP blog was a lot like trying to get married on top of a backhoe. Yes, it&amp;#39;s possible in principle, but for most purposes it&amp;#39;s probably best avoided. &lt;/p&gt;

&lt;p&gt;More concretely, I want to be able to roll exam questions into a blog post and let folks comment on them, while still having a database of questions and being able to develop the exam logic independently of the blog. Also, I want to write ASP.NET code and be able to display it in the blog. Some of that’s certainly doable using tricks like Web Services, but that’s not a lightweight approach to the problem.&lt;/p&gt;

&lt;p&gt;So tonight while the old body was begging me for a nap, good programmer that I am I threw some caffeine at the problem and put up a quick &lt;a href=&quot;http://www.aspworkbench.com/blog&quot;&gt;BlogEngine.NET blog on AspWorkbench&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;What – no ParticleWave theme yet? Hey man, I just installed it. Chill.&lt;/p&gt;

&lt;p&gt;Given that I’ve never installed a BlogEngine.NET instance on Godaddy before, it wasn’t too awful – I’ll try to write some tips tomorrow while they’re still somewhat fresh in my mind but when I’m a bit more coherent. There are several quirks that need polishing. For example, although I got the test email to succeed after some searching, neither the contact form nor the “Send email when someone posts a comment” feature have decided to join the party. The installation was something of a pain having been through several successful “Wordpress famous fifteen minute” installs, but some of that was first time learning curve. On the plus side, Live Writer connected and worked with no trouble at all, which is a big deal for me because I’m a Live Writer junkie.&lt;/p&gt;

&lt;p&gt;Most importantly, I’m now in a position to integrate more ASP.NET into my blogging about ASP.NET – go figure!&lt;/p&gt;
</description>
				<pubDate>Fri, 02 Oct 2009 23:54:23 -0700</pubDate>
				<link>/blogengine-net-comes-to-the-workbench</link>
				<guid isPermaLink="true">/blogengine-net-comes-to-the-workbench</guid>
			</item>
			
		
			
			<item>
				<title>Microsoft Exam 70-562</title>
				<description>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Configuring and Deploying Web Applications (10 percent) &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Consuming and Creating Server Controls (20 percent) &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Working with Data and Services (17 percent) &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Troubleshooting and Debugging Web Applications (16 percent) &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Working with ASP.NET AJAX and Client-Side Scripting (15 percent) &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Targeting Mobile Devices (5 percent) &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Programming Web Applications (17 percent) &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Wed, 30 Sep 2009 13:25:00 -0700</pubDate>
				<link>/microsoft-exam-70-562</link>
				<guid isPermaLink="true">/microsoft-exam-70-562</guid>
			</item>
			
		
			
			<item>
				<title>Copying, Moving, Deleting, Creating, and Reading Files (With Or Without Deep Love Poetry)</title>
				<description>&lt;p&gt;`&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;using System;
using System.IO;

class FileAndFileInfoExample
{
    static void Main(string[] args)
    {
        // Show some mechanisms for creating, moving, 
    // copying and deleting files
        try
        {
            // Get a couple of filenames
            string file1 = @&amp;quot;C:\FileInfoExample_Sample.txt&amp;quot;;
            string file2 = @&amp;quot;C:\FileInfoExample_Sample2.txt&amp;quot;;

            // Create a text file.
            TextWriter tw = File.CreateText(file1);

            // Write a moving love poem into it.
            tw.WriteLine(&amp;quot;I had a girl.&amp;quot;);
            tw.WriteLine(&amp;quot;Her name was Sue.&amp;quot;);
            tw.WriteLine(&amp;quot;Loved her dear,&amp;quot;);
            tw.WriteLine(&amp;quot;Loved her true.&amp;quot;);
            tw.WriteLine(&amp;quot;Till one day&amp;quot;);
            tw.WriteLine(&amp;quot;She broke my heart.&amp;quot;);
            tw.WriteLine(&amp;quot;Took a shotgun -- &amp;quot;);
            tw.WriteLine(&amp;quot;Blew me apart.&amp;quot;);

            // Sealed with a kiss for Sue
            tw.Close();

            // Copy our beautiful creation
            File.Copy(file1, file2);

            // Delete the original
            File.Delete(file1);

            // Move the new file back using File
            File.Move(file2, file1);

            // Using FileInfo instead this time...
            FileInfo fi = new FileInfo(file1);

            // Copy it again.
            fi.CopyTo(file2);

            // Delete the original again
            fi.Delete();

            // Get file2
            fi = new FileInfo(file2);

            // Move it back to one.
            fi.MoveTo(file1);

            // Show our poem to the world
            string [] lovePoem = File.ReadAllLines(file1);
            foreach (string profoundLine in lovePoem)
            {
                Console.WriteLine(profoundLine);
            }

            // Make sure no jealous poets steal our work
            fi = new FileInfo(file1);
            fi.Delete();
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }

        Console.ReadKey();
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;`&lt;/p&gt;
</description>
				<pubDate>Mon, 28 Sep 2009 19:50:00 -0700</pubDate>
				<link>/copying-moving-deleting-creating-and-reading-files-with-or-without-deep-love-poetry</link>
				<guid isPermaLink="true">/copying-moving-deleting-creating-and-reading-files-with-or-without-deep-love-poetry</guid>
			</item>
			
		
			
			<item>
				<title>Featured .NET Certification Study Question</title>
				<description>&lt;p&gt;We have a new featured question over on the ASPWorkbench.&lt;/p&gt;

&lt;p&gt;Here it is:     &lt;/p&gt;

&lt;p&gt;Which of the following are differences between XML Serialization and standard serialization? Check all that apply.      &lt;/p&gt;

&lt;p&gt;A) XML Serialization allows both public and private data members to be serialized, while standard serialization supports only public data.&lt;/p&gt;

&lt;p&gt;B) Only standard serialization uses the [Serializable] attribute to determine if a class is serializable.&lt;/p&gt;

&lt;p&gt;C) Using the BinaryFormatter class along with standard serialization allows for more runtime efficiency than XML Serialization.&lt;/p&gt;

&lt;p&gt;D) Standard serialization does not support the SOAP protocol.&lt;/p&gt;

&lt;p&gt;For the answer, head over to the Workbench while this is still the &lt;a href=&quot;http://www.aspworkbench.com/blog/&quot;&gt;featured question&lt;/a&gt;. (I know, that’s a bit of a cheesy process, but I just haven’t yet had time to get the archives and the site registration going – coming soon though).&lt;/p&gt;
</description>
				<pubDate>Sat, 26 Sep 2009 20:16:30 -0700</pubDate>
				<link>/featured-aspworkbench-question</link>
				<guid isPermaLink="true">/featured-aspworkbench-question</guid>
			</item>
			
		
			
			<item>
				<title>A Quick DriveInfo Example</title>
				<description>&lt;p&gt;Too easy.&lt;/p&gt;

&lt;p&gt;`   &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;using System;
using System.IO;

public class DriveInfoExample
{
    public static void Main(string [] args)
    {
        DriveInfo [] dilist = DriveInfo.GetDrives();
        foreach (DriveInfo di in dilist)
        {
            Console.WriteLine(&amp;quot;Drive:  {0}, type: {1}&amp;quot;,
            di.Name, di.DriveType);
        }
        Console.ReadKey();
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;`&lt;/p&gt;
</description>
				<pubDate>Sat, 26 Sep 2009 12:42:00 -0700</pubDate>
				<link>/a-quick-driveinfo-example</link>
				<guid isPermaLink="true">/a-quick-driveinfo-example</guid>
			</item>
			
		
			
			<item>
				<title>What's So Funny About the UpdatePanel Control, Love and Understanding?</title>
				<description>&lt;p&gt;&lt;a href=&quot;http://www.particlewave.com/blog/2009/09/18/certification-and-its-discontents/&quot;&gt;I recently reported&lt;/a&gt; that I had a domain for an ASP.NET site to hack around on with nothing on it yet. Since then I’ve made some progress and had some fun coding some ASP.NET, so I can now show off a minor feature on a new web site, the &lt;a href=&quot;http://www.aspworkbench.com/blog/&quot;&gt;Featured ASP.NET Certification Question&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This isn’t exactly Google or even StackOverflow yet, to be sure, but there were nevertheless a fair bit of learning and practice goals along the way to this simple looking page.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Site and The Control&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;First, I ported the master page from this site, so that was worth remembering how to do. Master pages can also expose properties to their content pages, which I haven’t done yet, but perhaps I’ll get into that when I add authentication to the site.&lt;/p&gt;

&lt;p&gt;The next steps were to set up a brain-dead and stubbed out custom control, ExamQuestionControl, while on the lower decks working out the database structure and connection strings for development and production and testing along the way using NUnit tests (&lt;a href=&quot;http://www.particlewave.com/blog/2009/07/23/development-driven-development/&quot;&gt;Yes, Dan&lt;/a&gt;, NUnit Tests). Once those were in place I began testing out the Plain Old CLR Objects and a simple, one method repository consisting of “QuestionFindByID”, which was all I needed at this point. I implemented the repository using very basic (and hence certification-friendly) calls into the ADO.NET Connected Classes (one of which forms the basis for my first Featured Question). Once NUnit had lifted the database up by its bootstraps, It was quite a simple matter to un-stub the formerly brain-dead ExamQuestionControl.&lt;/p&gt;

&lt;p&gt;Once the control was more or less working, I decided (as if setting myself up to take a look at the AJAX chapter) that I didn’t like the fact that the “Show Answer” button posted back the entire page to the server. Microsoft’s UpdatePanel control provided an elegantly simple way to AJAX enable my control to avoid a full page refresh. No seriously. If your hatred of Microsoft is interfering with your Buddhist practice, sit still and contemplate the UpdatePanel control, and you’ll be filled with loving kindness.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Early Hiccups&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the earliest stages of the work, getting the hosting set up and so forth, I ran into a few noteworthy hurdles. One was that I needed to compile the site and bin deploy the code-behind pages. Other problems involved &lt;a href=&quot;http://stackoverflow.com/questions/266205/is-there-a-way-that-i-can-run-a-asp-net-mvc-project-on-godaddy-com-shared-web-hos/1416036#1416036&quot;&gt;deploying an MVC site to godaddy.com&lt;/a&gt;, but as you can see from the link, a kind fellow traveler provided the solution. Before I found that link, I had to re-code the master pages to inherit from System.Web.UI.MasterPage instead of System.Web.Mvc.ViewMasterPage. Once I found that link, however, I was able to restore the ViewMasterPage with no problems.&lt;/p&gt;

&lt;p&gt;What I would recommend to your attention when you get to the deployment phase of your project is to right click on your project and check out the “Publish…” menu option. As others pointed out in the earlier link, the easiest thing to do turned out to be to publish to a local directory and upload files. The link above shows you how to bin deploy MVC, and that trick no doubt works on other weird dependency issues.&lt;/p&gt;

&lt;p&gt;Once I’d played with that a bit I decided to clean up what I’d originally uploaded, and noticed then that Visual Studio’s publish doesn’t copy over image files referenced in your CSS if you select the option to only copy what’s needed. Copy those, end of problem.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.particlewave.com/images/blog/Whats.NETMasterPagesLoveandUnderstanding_115DD/image.png&quot;&gt;&lt;img src=&quot;http://www.particlewave.com/images/blog/Whats.NETMasterPagesLoveandUnderstanding_115DD/image_thumb.png&quot; alt=&quot;image&quot;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
				<pubDate>Mon, 21 Sep 2009 06:54:00 -0700</pubDate>
				<link>/whats-so-funny-about-asp-net-master-pages-love-and-understanding</link>
				<guid isPermaLink="true">/whats-so-funny-about-asp-net-master-pages-love-and-understanding</guid>
			</item>
			
		
			
			<item>
				<title>IComparable Example</title>
				<description>&lt;p&gt;Here&amp;#39;s a quick IComparable example. The memorization feat for this interface is that CompareTo returns &lt;0 when “this” is less than the object passed to it. The rest follows easily: return 0 when both objects are equal and &gt; 0 when this instance greater than obj passed to CompareTo. Remember, this is self centered so everything’s in terms of this.&lt;/p&gt;

&lt;p&gt;`   &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;

// A simple class that implements IComparable 
// interface to sort by title
class Book : IComparable
{  
    private string m_title;
    private string m_author;

    public Book(string _title, string _author)
    {
        m_title = _title;
        m_author = _author;
    }

    public string Title
    {
        get { return m_title; }
        set { m_title = value; }
    }

    public string Author
    {
        get { return m_author; }
        set { m_author = value; }
    }

    // We let Visual Studio do the stub implementation, 
    // then we filled it out. 
    #region IComparable Members

    public int CompareTo(object obj)
    {
    // This instance comes before null.
        if (obj == null)
            return 1;

        else if (!(obj is Book))
        {
            throw new ArgumentException(&amp;quot;Object passed to Book::CompareTo is not a Book&amp;quot;);
        }
        else
        {
            return Title.CompareTo(((Book)obj).Title);
        }
    }

    public override string ToString()
    {
        return Title + &amp;quot; by &amp;quot; + Author;
    }

    #endregion
}

class IComparableTest
{
    static void Main(string[] args)
    {
        SortedList list = new SortedList();

        // Add in unsorted order.  Sorted list will sort by key (Book) using
        // the CompareTo method we implemented
        list.Add(new Book(&amp;quot;The thrill of victory&amp;quot;, &amp;quot;Some Lucky Winning Guy&amp;quot;), 0);
        list.Add(new Book(&amp;quot;A Loser Speaks&amp;quot;, &amp;quot;Melvin Nobody&amp;quot;), 1);
        list.Add(new Book(&amp;quot;Zymurgy Unleashed&amp;quot;, &amp;quot;Aaron Firstman&amp;quot;), 2);

        for (int i = 0; i &amp;lt; list.Count; i++)
        {            
            Console.WriteLine(&amp;quot;Entered at:  {0}, a Book:  {1}&amp;quot;, list.GetByIndex(i), list.GetKey(i));
        }

        // Uncomment this to see if running in debugger:
        // Console.ReadKey();
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;`&lt;/p&gt;
</description>
				<pubDate>Mon, 14 Sep 2009 12:53:00 -0700</pubDate>
				<link>/icomparable-example</link>
				<guid isPermaLink="true">/icomparable-example</guid>
			</item>
			
		
			
			<item>
				<title>Implementing interoperability, reflection, and mailing functionality in a .NET Framework application (11 percent)</title>
				<description>&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Expose COM components to the .NET Framework and .NET Framework components to COM.&lt;/p&gt;

&lt;p&gt;May include but is not limited to: Import a type library as an assembly; Create COM types in managed code; Compile an interop project; Deploy an interop application; Qualify .NET types for interoperation; Apply Interop attributes, such as the ComVisibleAttribute class; Package an assembly for COM; Deploy an application for COM access.            &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Call unmanaged DLL functions within a .NET Framework application, and control the marshalling of data in a .NET Framework application.&lt;/p&gt;

&lt;p&gt;May include but is not limited to: Platform Invoke; Create a class to hold DLL functions; Create prototypes in managed code; Call a DLL function; Call a DLL function in special cases, such as passing structures and implementing callback functions; Create a new Exception class and map it to an HRESULT; Default marshalling behavior; Marshal data with Platform Invoke; Marshal data with COM Interop; MarshalAsAttribute class and Marshal class            &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Implement reflection functionality in a .NET Framework application, and create metadata, Microsoft intermediate language (MSIL), and a PE file by using the System.Reflection.Emit namespace.&lt;/p&gt;

&lt;p&gt;May include but is not limited to: Assembly class; Assembly Attributes; Info classes; Binder class and BindingFlags; MethodBase class and MethodBody class; Builder classes            &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Send electronic mail to a Simple Mail Transfer Protocol (SMTP) server for delivery from a .NET Framework application.&lt;/p&gt;

&lt;p&gt;May include but is not limited to: MailMessage class; MailAddress class and MailAddressCollection class; SmtpClient class, SmtpPermission class, and SmtpPermissionAttribute class; Attachment class, AttachmentBase class, and AttachmentCollection class; SmtpException class, SmtpFailedReceipientException class, and SmtpFailedReceipientsException class; SendCompletedEventHandler delegate; LinkedResource class and LinkedResourceCollection class; AlternateView class and AlternateViewCollection class&lt;/p&gt;
</description>
				<pubDate>Sat, 12 Sep 2009 20:59:00 -0700</pubDate>
				<link>/implementing-interoperability-reflection-and-mailing-functionality-in-a-net-framework-application-11-percent</link>
				<guid isPermaLink="true">/implementing-interoperability-reflection-and-mailing-functionality-in-a-net-framework-application-11-percent</guid>
			</item>
			
		
			
			<item>
				<title>.NET Regular Expressions Example: Basic use of Match and MatchCollection</title>
				<description>&lt;p&gt;Here is the first of what should really be several .NET Regular Expressions examples. I firmly believe that in any given environment, you’re going to end up spending most of your programming career manipulating strings one way or another. Because of this, learning .NET’s regular expression support -- unlike many of the other topics you’re likely to encounter on the certification exam, is not one of those Use It and Lose It things. It’s something that’s really useful.&lt;/p&gt;

&lt;p&gt;`   &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;

namespace GlobalizationDrawingText
{
    class RegularExpressionExample1
    {
        static void Main(string[] args)
        {
            // Let&amp;#39;s set up a needle to search for and a couple of haystacks
            Regex re = new Regex(&amp;quot;needle&amp;quot;);
            string haystack = &amp;quot;hay hay hay needle hay haybeatle hay_dirt hay hay&amp;quot;;
            string needleless /* to say */ = &amp;quot;hay hay hay hay hay&amp;quot;;

            // Do some really simple matching
            Match match1 = re.Match(haystack);
            Match match2 = re.Match(needleless);
            Console.WriteLine(&amp;quot;Haystack had &amp;quot;
                + (match1.Success ? &amp;quot;a needle.&amp;quot; : &amp;quot;no needles.&amp;quot;));
            Console.WriteLine(&amp;quot;Needleless had &amp;quot; 
                + (match2.Success ? &amp;quot;a needle.&amp;quot; : &amp;quot;no needles.&amp;quot;));

            // Let&amp;#39;s use MatchCollection to gather some hay.
            // Motivation:  what the hay.
            re = new Regex(@&amp;quot;hay\w*\b&amp;quot;);
            MatchCollection mc = re.Matches(haystack);
            foreach (Match hay in mc)
            {
                Console.WriteLine(&amp;quot;Found:  {0}&amp;quot;, hay.Value);
            }

            Console.ReadKey();
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;`&lt;/p&gt;
</description>
				<pubDate>Thu, 10 Sep 2009 17:25:00 -0700</pubDate>
				<link>/net-regular-expressions-example-basic-use-of-match-and-matchcollection</link>
				<guid isPermaLink="true">/net-regular-expressions-example-basic-use-of-match-and-matchcollection</guid>
			</item>
			
		
			
			<item>
				<title>Early ASP.NET MVC Troubleshooting</title>
				<description>&lt;p&gt;After happily switching between Visual 2005 and Visual Studio 2010 beta for several days, I installed Visual Studio 2008 recently so I could get started on ASP.NET MVC. Well Hello World worked more or less without a hitch, but inside that “more or less” are two stumbling blocks I hit which I mention here in case anyone else stubs their toes in the same place:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;At first, the Visual Studio install didn’t work. It turned out this was either a virus scanner or automated backup. Turning both off as recommended in the Microsoft troubleshooting docs did the trick.       &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The second little bit of trouble came when trying to create a new SQL Server database file in the App_Data folder to start playing around with something beyond Hello World. For providing what appears to be the solution (still installing), and for coming up in first place in Google ahead of Microsoft, Pinal Dave is the winner of today’s &lt;a href=&quot;http://blog.sqlauthority.com/2008/09/21/sql-server-2008-fix-connection-error-with-visual-studio-2008-server-version-is-not-supported&quot;&gt;gratuitous link to a solution&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.sqlauthority.com/2008/09/21/sql-server-2008-fix-connection-error-with-visual-studio-2008-server-version-is-not-supported/&quot;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
				<pubDate>Sun, 06 Sep 2009 12:51:00 -0700</pubDate>
				<link>/early-asp-net-mvc-troubleshooting</link>
				<guid isPermaLink="true">/early-asp-net-mvc-troubleshooting</guid>
			</item>
			
		
			
			<item>
				<title>Implementing serialization and input/output functionality in a .NET Framework application (18 percent)</title>
				<description>&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Serialize or deserialize an object or an object graph by using runtime serialization techniques.&lt;/p&gt;

&lt;p&gt;May include but is not limited to: Serialization interfaces; Serialization attributes; SerializationEntry structure and SerializationInfo class; ObjectManager class; Formatter class, FormatterConverter class, and FormatterServices class; StreamingContext structure            &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Control the serialization of an object into XML format by using the System.Xml.Serialization namespace.&lt;/p&gt;

&lt;p&gt;May include but is not limited to: Serialize and deserialize objects into XML format by using the XmlSerializer class; Control serialization by using serialization attributes; Implement XML serialization interfaces to provide custom formatting for XML serialization; Delegates and event handlers provided by the System.Xml.Serialization namespace            &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Implement custom serialization formatting by using the Serialization Formatter classes.&lt;/p&gt;

&lt;p&gt;May include but is not limited to: SoapFormatter; BinaryFormatter class            &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Access files and folders by using the File System classes.&lt;/p&gt;

&lt;p&gt;May include but is not limited to: File class and FileInfo class; Directory class and DirectoryInfo class; DriveInfo class and DriveType enumeration; FileSystemInfo class and FileSystemWatcher class; Path class; ErrorEventArgs class and ErrorEventHandler delegate; RenamedEventArgs class and RenamedEventHandler delegate            &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Manage byte streams by using Stream classes.&lt;/p&gt;

&lt;p&gt;May include but is not limited to: FileStream class; Stream Class (NOT Readers and Writer classes, as they are separate objectives); MemoryStream class; BufferedStream class            &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Manage .NET Framework application data by using Reader and Writer classes.&lt;/p&gt;

&lt;p&gt;May include but is not limited to: StringReader class and StringWriter class; TextReader class and TextWriter class; StreamReader class and StreamWriter class; BinaryReader class and BinaryWriter class            &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Compress or decompress stream information in a .NET Framework application and improve the security of application data by using isolated storage.&lt;/p&gt;

&lt;p&gt;May include but is not limited to: IsolatedStorageFile class; IsolatedStorageFileStream class; DeflateStream class; GZipStream class&lt;/p&gt;
</description>
				<pubDate>Fri, 04 Sep 2009 20:55:00 -0700</pubDate>
				<link>/implementing-serialization-and-inputoutput-functionality-in-a-net-framework-application-18-percent</link>
				<guid isPermaLink="true">/implementing-serialization-and-inputoutput-functionality-in-a-net-framework-application-18-percent</guid>
			</item>
			
		
			
			<item>
				<title>Review of Stephen Walther’s ASP.NET MVC Framework Unleashed</title>
				<description>&lt;p&gt;&lt;em&gt;This is a reprint of a review I did on Amazon.com.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I bought Stephen Walther&amp;#39;s ASP.NET MVC Framework Unleashed after several months of working on a legacy C and C++ project which looks nothing like Walther&amp;#39;s book. Following that I spent many a happy Saturday and Sunday ramping up on Ruby on Rails, but finally giving up to revisit my Microsoft skills. ASP.NET MVC is a serious attempt by Microsoft to lure wayward Ruby on Rails types like me back into the fold, and I consider myself re-folded. &lt;/p&gt;

&lt;p&gt;Given my background, any halfway decent book on ASP.NET MVC would probably have been welcome, but Walther&amp;#39;s book is especially welcome because it makes a serious attempt to treat ASP.NET MVC in the context of Test Driven Development. Well, all of that is what you&amp;#39;d expect if you take the cynical view that Microsoft is competing for developer mind share against Ruby on Rails, where the tests are &amp;quot;baked right in&amp;quot; (of course they all pass by default, but that&amp;#39;s another story). But Walther&amp;#39;s book is far more than a cheerleading book about TDD, and actually gets you into how to structure your code to support it. Using a generic repository class and relying heavily on the dependency injection pattern, Walther leads you through setting up your code so that it&amp;#39;s loosely coupled, testable, and (presumably) easily refactored. &lt;/p&gt;

&lt;p&gt;Admittedly, it sometimes looks like Walther&amp;#39;s approach takes too much manual lifting compared to Ruby on Rails -- and that&amp;#39;s especially true when you run into Microsoft annoyances like not being able to refresh an Entity Data Model from the database. On the other hand, it&amp;#39;s hard for an experienced software developer not to take a skeptical view of the magical rails &amp;quot;we can build a blog in 15 minutes&amp;quot; approach to the world. But still I feel that the techniques Walther talks about are the kind of thing that I really need to try out on an application or two. &lt;/p&gt;

&lt;p&gt;I gave the book four stars because there were a few sections that I thought could have been explained better. For example, I used his chapter on deployment almost immediately to create an application that supports both &amp;quot;legacy&amp;quot; ASP.NET and ASP.NET MVC, and the information there worked great, but I felt the file differences could have been narrowed down a bit more. Also in his discussion of the generic repository, I felt like we lost sight of the model there for awhile. Since there was a lot of ground to cover, a general overview discussing how the Entity Data Framework, the model, the repository and the service layer were all going to tie together might have been helpful. My final quibble is that I felt there could have been a bit more material on the relationships among the Entity Data Framework, LINQ, and LINQ to SQL. I think Walther&amp;#39;s book gave the impression that the EDF and LINQ are orthogonal, whereas other Microsoft sources lead me to believe they&amp;#39;re more complimentary. &lt;/p&gt;

&lt;p&gt;Despite its flaws, however, I want to leave you with the title of my review, that this is one of the best programming books I&amp;#39;ve read in a long time. It&amp;#39;s the kind of book that expands your horizons and makes you want to try things out the way the author has outlined. To be sure, Walther&amp;#39;s book is not the book you want to read if you goal is to hack together an unstructured ASP.NET MVC application in record time. But if your goal is to learn ASP.NET MVC while becoming a better programmer along the way, this book merits your serious attention and you should be pulling your credit card out now.&lt;/p&gt;
</description>
				<pubDate>Mon, 31 Aug 2009 08:59:00 -0700</pubDate>
				<link>/review-of-stephen-walthers-asp-net-mvc-framework-unleashed</link>
				<guid isPermaLink="true">/review-of-stephen-walthers-asp-net-mvc-framework-unleashed</guid>
			</item>
			
		
			
			<item>
				<title>Embedding configuration, diagnostic, management, and installation features into a .NET Framework application (14 percent)</title>
				<description>&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Embed configuration management functionality into a .NET Framework application.&lt;/p&gt;

&lt;p&gt;May include but is not limited to: Configuration class and ConfigurationManager class; ConfigurationSettings class, ConfigurationElement class, ConfigurationElementCollection class and ConfigurationElementProperty class; Implement IConfigurationSectionHandler interface; ConfigurationSection class, ConfigurationSectionCollection class, ConfigurationSectionGroup class and ConfigurationSectionGroupCollection class; Implement ISettingsProviderService interface; Implement IApplicationSettingsProvider interface; ConfigurationValidationBase class; Implement IConfigurationSystem interface&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Create a custom Microsoft Windows Installer for .NET components by using the System.Configuration.Install namespace, and configure .NET Framework applications by using configuration files, environment variables, and the .NET Framework Configuration tool (Mscorcfg.msc).&lt;/p&gt;

&lt;p&gt;May include but is not limited to: Installer class; Configure which runtime version a .NET Framework application should use; Configure where the runtime should search for an assembly; Configure the location of an assembly and which version of the assembly to use; Direct the runtime to use the DEVPATH environment variable when searching for assemblies; AssemblyInstaller class; ComponentInstaller class; Configure a .NET Framework application by using the .NET Framework Configuration tool (Mscorcfg.msc); ManagedInstallerClass; InstallContext class; InstallerCollection class; Implement IManagedInstaller interface; InstallEventHandler delegate; Configure concurrent garbage collection; Register remote objects by using configuration files&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Manage an event log by using the System.Diagnostics namespace.&lt;/p&gt;

&lt;p&gt;May include but is not limited to: Write to an event log; Read from an event log; Create a new event log&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Manage system processes and monitor the performance of a .NET application by using the diagnostics functionality of the .NET Framework.&lt;/p&gt;

&lt;p&gt;May include but is not limited to: Get a list of all running processes; Retrieve information about the current process; Get a list of all modules loaded by a process; PerformanceCounter class, PerformanceCounterCategory and CounterCreationData class; Start a process both by using and by not using command-line arguments; StackTrace class; StackFrame class&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Debug and trace a .NET Framework application by using the System.Diagnostics namespace.&lt;/p&gt;

&lt;p&gt;May include but is not limited to: Debug class; Debugger class; Trace class, CorrelationManager class; TraceListener class; TraceSource class; TraceSwitch class; XmlWriterTraceListener class; DelimitedListTraceListener class and EventlogTraceListener class; Debugger attributes&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Embed management information and events into a .NET Framework application.&lt;/p&gt;

&lt;p&gt;May include but is not limited to: Retrieve a collection of Management objects by using the ManagementObjectSearcher class and its derived classes; ManagementQuery class; Subscribe to management events by using the ManagementEventWatcher class&lt;/p&gt;
</description>
				<pubDate>Sun, 30 Aug 2009 13:00:00 -0700</pubDate>
				<link>/embedding-configuration-diagnostic-management-and-installation-features-into-a-net-framework-application-14-percent</link>
				<guid isPermaLink="true">/embedding-configuration-diagnostic-management-and-installation-features-into-a-net-framework-application-14-percent</guid>
			</item>
			
		
			
			<item>
				<title>Delegates and Events</title>
				<description>&lt;p&gt;In .NET, delegates are classes that implement type safe function pointers.  Like all function pointers, they can be used whereever you need dynamic execution of code.  One use of delegates that is ubiquitous in .NET is as a mechanism for handling events.  Both ASP.NET Webforms and the Windows development Winforms classes uses such delegates as event handlers.  So does our little program below, which shows how to translate keypresses into events, then handle certain events as they&amp;#39;re raised.&lt;/p&gt;

&lt;p&gt;As a side note, this was the first sample I developed using Visual Studio 2010 beta (though it compiles and runs fine under 2005 as well).&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;code&amp;gt;
using System;

/*
 *  Since we&amp;#39;ll be raising events, we create a simple
 *  EventArgs class that knows about System.ConsoleModifiers 
 *  (i.e. keyboard states like CTRL, ALT, SHIFT)
 */
public class KeyEventArgs : EventArgs
{
    private ConsoleModifiers _cm;

    public KeyEventArgs(ConsoleModifiers cm)
    {
        _cm = cm;
    }
    public ConsoleModifiers Modifiers
    {
        get { return _cm; }
    }
}

/*
 * Define an event delegate.  Our publisher defines instances
 * of this delegate.  Our subscribers add event handlers to the 
 * publisher&amp;#39;s delegates for the events they&amp;#39;re interested in.
 */
public delegate void KeyEventDelegate(object obj, KeyEventArgs e);

/* 
 * A simple event publisher.  Translate keypresses into events that
 * a subscriber can subscribe to.
 * */
class KeyPublisher
{
    // Translate keypresses into events
    public void KeypressToEvent(ConsoleKeyInfo pressed)
    {
        // No event generated for a plain old key
        Console.WriteLine(&amp;quot;Pressed:  {0}&amp;quot;, pressed.KeyChar);

        // Now the plot thickens
        if (pressed.Modifiers != 0)
        {
            KeyEventArgs kea = new KeyEventArgs(pressed.Modifiers);

            // Alt key pressed?
            if ((pressed.Modifiers &amp;amp; ConsoleModifiers.Alt) != 0)
            {
                // I.e., if someone has subscribed
                if (AltKeyPressed != null)
                {
                    // Raise an event
                    AltKeyPressed(this, kea);
                }
            }

            // Etc...
            if ((pressed.Modifiers &amp;amp; ConsoleModifiers.Control) != 0)
            {
                if (ControlKeyPressed != null) 
                    ControlKeyPressed(this, kea);
            }

            if ((pressed.Modifiers &amp;amp; ConsoleModifiers.Shift) != 0)
            {
                if (ShiftKeyPressed != null)
                    ShiftKeyPressed(this, kea);
            }
        }

    }

    public static event KeyEventDelegate AltKeyPressed = null;
    public static event KeyEventDelegate ShiftKeyPressed = null;
    public static event KeyEventDelegate ControlKeyPressed = null;
}

/*
 * Create some simple event hanlders we can use.  We&amp;#39;ll wire these
 * up below in our sample &amp;quot;Main&amp;quot;
 */
class KeySubscriber
{
    // Function signature matches our delegate
    public void HandleControlKey(Object ojb, KeyEventArgs e)
    {
        Console.WriteLine(&amp;quot;Control key pressed&amp;quot;);
    }

    // Function signature matches our delegate
    public void HandleAltKey(Object ojb, KeyEventArgs e)
    {
        Console.WriteLine(&amp;quot;Alt key pressed&amp;quot;);
    }   

    // But I&amp;#39;m not interested in Shift keys
}


class EventHandlerExample
{
    static void Main(string[] args)
    {
        // Create a publisher to fire events
        KeyPublisher pub = new KeyPublisher();

        // Create a subscriber to respond to them
        KeySubscriber sub = new KeySubscriber();

        // Link event handlers to events
        KeyPublisher.AltKeyPressed += sub.HandleAltKey;
        KeyPublisher.ControlKeyPressed += sub.HandleControlKey;

        // Read keys and translate to events
        ConsoleKeyInfo keyInfo;
        bool finished = false;
        while (! finished)
        {
            keyInfo = Console.ReadKey();
            switch (keyInfo.KeyChar)
            {
                case &amp;#39;Q&amp;#39;:
                case &amp;#39;q&amp;#39;:
                    finished = true;
                    break;

                default:
                    // Publish!
                    pub.KeypressToEvent(keyInfo);
                    break;
            }
        }

    }
}


&amp;lt;/code&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output of course varies depending on what keys you press. One possibility:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;code&amp;gt;
aPressed:  a
bPressed:  b
☻Pressed:  ☻
Control key pressed
◄Pressed:  ◄
Control key pressed
♦Pressed:  ♦
Control key pressed
aPressed:  a
Alt key pressed
 Pressed:
Alt key pressed
Control key pressed
&amp;lt;/code&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
				<pubDate>Fri, 28 Aug 2009 10:08:00 -0700</pubDate>
				<link>/delegates-and-events</link>
				<guid isPermaLink="true">/delegates-and-events</guid>
			</item>
			
		
			
			<item>
				<title>Implementing service processes, threading, and application domains in a .NET Framework application (11 percent)</title>
				<description>&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Implement, install, and control a service.&lt;/p&gt;

&lt;p&gt;May include but is not limited to: Inherit from ServiceBase class; ServiceController class and ServiceControllerPermission class; ServiceInstaller and ServiceProcessInstaller class; SessionChangeDescription structure and SessionChangeReason enumeration&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Develop multithreaded .NET applications.&lt;/p&gt;

&lt;p&gt;May include but is not limited to: Thread class; ThreadPool class; ThreadStart delegate, ParameterizedThreadStart delegate, and SynchronizationContext class; Timeout class, Timer class, TimerCallback delegate, WaitCallback delegate, WaitHandle class, and WaitOrTimerCallback delegate; ThreadExceptionEventArgs class and ThreadExceptionEventHanlder class; ThreadState enumeration and ThreadPriority enumeration; ReaderWriterLock class; AutoResetEvent class and ManualResetEvent class; IAsyncResult interface and ICancelableAsyncResult interface (refer System Namespace); EventWaitHandle class, RegisterWaitHandle class, SendOrPostCallback delegate and IOCompletionCallback delegate; Interlocked class, NativeOverlapped structure and Overlapped class; ExecutionContext class, HostExecutionContext class, HostExecutionContextManager class, and ContextCallback delegate; LockCookie structure, Monitor class, Mutex class, and Semaphore class&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Create a unit of isolation for common language runtime within a .NET Framework application by using application domains.&lt;/p&gt;

&lt;p&gt;May include but is not limited to: Create an application domain; Unload an application domain; Configure an application domain; Retrieve setup information from an application domain; Load assemblies into an application domain&lt;/p&gt;
</description>
				<pubDate>Wed, 26 Aug 2009 12:49:00 -0700</pubDate>
				<link>/implementing-service-processes-threading-and-application-domains-in-a-net-framework-application-11-percent</link>
				<guid isPermaLink="true">/implementing-service-processes-threading-and-application-domains-in-a-net-framework-application-11-percent</guid>
			</item>
			
		
			
			<item>
				<title>Boxing and Unboxing in Non-Generic Collections versus Generic Collections</title>
				<description>&lt;p&gt;Note that the example below has no output.&lt;/p&gt;

&lt;p&gt;`   &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;/* 
 * This example shows a non-generic list with an array of objects, 
 * and the boxing and unboxing that are needed to add and retrieve integers
 * from such an array.  It also shows a generic list and how this simplifies
 * access to a value type such as int.
 */

using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;

class ListsExample
{
    public void CreateNonGenericList()
    {
        ArrayList list = new ArrayList();

        // Boxing
        Object o1 = (Object)1;

        // Boxing again
        Object o2 = 2.ToString();

        list.Add(o1);
        list.Add(o2);

        // Add myself
        list.Add(this); 

        // Have to unbox (or cast) to get explicit type out
        // Run time exception if get it wrong.

        // Unbox
        int i = (int)list[0];

        // Unbox
        string s = (string)list[1];

        // Cast
        ListsExample myclass = (ListsExample) list[2];
    }

    public void CreateGenericList()
    {
        List&amp;lt;int&amp;gt; list = new List&amp;lt;int&amp;gt;(10);
        for (int i = 0; i &amp;lt; 10; i++)
        {
            list.Add(i);
        }

        // Can access any variable directly as an int without casting
        int four = list[5];
    }

    static void Main(string[] args)
    {
        ListsExample lists = new ListsExample();
        lists.CreateGenericList();
        lists.CreateNonGenericList();      
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;`&lt;/p&gt;
</description>
				<pubDate>Mon, 24 Aug 2009 13:03:00 -0700</pubDate>
				<link>/boxing-and-unboxing-in-non-generic-collections-versus-generic-collections</link>
				<guid isPermaLink="true">/boxing-and-unboxing-in-non-generic-collections-versus-generic-collections</guid>
			</item>
			
		
			
			<item>
				<title>Nullable Types Example</title>
				<description>&lt;p&gt;The memory for reference types is allocated on the system heap, so it makes sense that reference variables can be null. Value types, in contrast, cannot be assigned a &amp;quot;null” value by default. Still, there are times when you may want to declare a int (for example) and allow it to be set null – one obvious use is in reading and writing data from a database. Enter the Nullable type. Here’s a brief sample that shows how these types work.&lt;/p&gt;

&lt;p&gt;``&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;using System;

class NullableExample
{
    static void Main()
    {
    // A basic value type can be assigned to, but cannot be null
    int normal;
    normal = 1;

    // The line below if uncommented produces:
    // error CS0037: Cannot convert null to &amp;#39;int&amp;#39; because 
    // it is a value type

    // normal = null;

    // Declare a Nullable value
    int? nullable = null;

    // The type? syntax used above is a synonym for Nullable&amp;lt;type&amp;gt;
    // So the following is equivalent
    System.Nullable&amp;lt;system.int32&amp;gt; nullable2 = 5;

    // Display something -- the null for nullable displays nothing
        System.Console.WriteLine(
        &amp;quot;normal = {0}, nullable = {1}, nullable2 = {2}&amp;quot;, 
        normal, nullable, nullable2);

    // HasValue returns true if the Nullable type has a value
    Console.WriteLine(
        &amp;quot;nullable.HasValue = {0}, nullable2.HasValue = {1}&amp;quot;,
        nullable.HasValue, nullable2.HasValue);

    // Value returns the value or throws an exception if there is no value
    try
    {
        Console.WriteLine(&amp;quot;Doesn&amp;#39;t display:  {0}&amp;quot;, nullable.Value);
    }
    catch (System.InvalidOperationException e)
    {
        Console.WriteLine(&amp;quot;Exception caught: &amp;quot; + e);
    }   

    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;`&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;normal = 1, nullable = , nullable2 = 5
nullable.HasValue = False, nullable2.HasValue = True
Exception caught: System.InvalidOperationException: Nullable object must have a value.
   at System.ThrowHelper.ThrowInvalidOperationException(ExceptionResource resource)
   at NullableExample.Main()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;`&lt;/p&gt;
</description>
				<pubDate>Thu, 20 Aug 2009 13:49:00 -0700</pubDate>
				<link>/nullable-types-example</link>
				<guid isPermaLink="true">/nullable-types-example</guid>
			</item>
			
		
			
			<item>
				<title>Dell Studio 17 Review</title>
				<description>&lt;p&gt;I’m told that somewhere around the dawn of software development, when processor time was hugely expensive and multiple university departments shared a single computing resource, it was common to have to work out your software problems using a sharpened pencil or similar Flintstones-level tool before your code ever felt the warm embrace of powered silicon.&lt;/p&gt;

&lt;p&gt;I wouldn’t know about that. I’m old, but I’m not THAT old.&lt;/p&gt;

&lt;p&gt;These days, doing such a thing would be pretty much unthinkable, which is why it’s nice to be able to report that having sacrificed the Windows partition of my desktop machine to the dubious goal of getting faster Ruby on Rails unit tests working, I’m not content to envision my Microsoft Certification on Ubuntu, but have treated myself to a new Dell laptop. It’s a Studio 17”, model s1737-020B, and it’s quite the spiffy little workhorse so far. It’s fairly light for the size and price, has plenty of USB holes so the USB can get in, but also sports an HDMI hole so the digital video can go somewhere – though I must say that even though setting up an extended desktop was the first thing I did, so far I’ve spent most of my time looking at the built-in display for most tasks. It found my wireless network with no fuss at all.&lt;/p&gt;

&lt;p&gt;Battery life is supposed to be quite good though I’ve yet to test that. 4 gig of RAM, half a terabyte hard drive, $749 at Best Buy. The front side bus speed is 800 MHz, the two processors runs at 2.1 GHz, so those numbers are a tad lower than some of seen out there, but I don’t think I’ll be doing huge builds just yet so that’s probably all I need, and all things considered I’m very happy with it. Hat tip to the Best Buy folks in Folsom, a very congenial and generally fairly knowledgeable bunch. &lt;/p&gt;
</description>
				<pubDate>Mon, 17 Aug 2009 21:05:00 -0700</pubDate>
				<link>/dell-studio-17-review</link>
				<guid isPermaLink="true">/dell-studio-17-review</guid>
			</item>
			
		
			
			<item>
				<title>Development Driven Development</title>
				<description>&lt;p&gt;Some time ago I waxed ecstatic over JUnit automated unit tests here, and I think the software community has gotten even more wild-eyed over automated tests in the meantime, with the latest buzz about Behavior Driven Development.  For my part, lately I&amp;#39;ve begun to question all this conventional wisdom.  I&amp;#39;ve begun to believe that the fact that programmers love testing so much for the same reason Twitter is so popular:  writing short little works is more fun than reading something long and difficult.  &lt;/p&gt;

&lt;p&gt;You see, MY test case is elegant and concise, whereas YOUR legacy code is convoluted and difficult.&lt;/p&gt;

&lt;p&gt;Don&amp;#39;t get me wrong.  My legacy code is convoluted and difficult, too, but it&amp;#39;s a lot more convoluted and difficult for you than it is for me, because I wrote it, and I have a better than even chance of knowing where the tasty bits are and what I was thinking.  Your code is sometimes worse than mine, and sometimes better, but either way I don&amp;#39;t know it as well as my code until I start grepping and reading and stepping through it in the debugger.  After a while doing that, I become more proficient in your code, but it&amp;#39;s still YOUR code.&lt;/p&gt;

&lt;p&gt;During the day I make my living reading and fixing YOUR code.  Well not yours exactly, but Other People&amp;#39;s Code.  The particular compilation of Other People&amp;#39;s Code that pays my bills lately has been evolving since the 1980s, with very little in the way of automated testing.  Yet my employers are selling the product and making enough revenue to hire me and a bunch of other guys to work on it.  To be sure, it may be nearing the end of its life cycle, in which case I may need to find OTHER Other People&amp;#39;s code to go work on, but I guarantee you that in the meantime my wife doesn&amp;#39;t mind when she cooks dinner.&lt;/p&gt;

&lt;p&gt;When I first got to this job I lamented the fact that there were no native automated unit tests.  I wrote a few, but not nearly as many as I&amp;#39;d like, nor nearly as many as we need.  QA has also been recently trying to add a lot more automation, though they&amp;#39;re written in the tool we&amp;#39;re developing -- not the language I&amp;#39;m working in.  More and more I just try to bite the bullet and debug and fix the problems that get logged by ad hoc testing against Other People&amp;#39;s Code, and I try not to let my overwhelming agile genius keep me from having a good time.&lt;/p&gt;

&lt;p&gt;As a younger programmer than I am now, at my first true development job, my agile genius was at the height of his awesome career.  As I was explaining some ingenious and difficult idea to my manager, he detected my agile genius at work.  He rewarded my heroic efforts with the following response, which I offer up to you now as a Development Driven Development manifesto:&lt;/p&gt;

&lt;p&gt;He said, &amp;quot;Just write the damned code.&amp;quot;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Just Write The Damned Code&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I don&amp;#39;t think many developers are going to go for this as a way of doing business, because just writing the damned code is not really theoretical, and we developers love our theories.  This sounds too much like chaos, and too many of us have suffered from chaos as a model of software development.&lt;/p&gt;

&lt;p&gt;And do I really mean we should give up all testing, finish our edits and just do an svn commit without further ado?  No, of course I mean that we should test our code, step through it in the debugger, examine it, review it, think about it, clean it up and the like.  In fact, I submit that the compelling love of automated testing is precisely a reflection of the fact that while I&amp;#39;m an accomplished professional with a serious work ethic who always debugs and tests his code before checking it in, Other People as we all know are the dreaded perpetrators of Other People&amp;#39;s Code.&lt;/p&gt;

&lt;p&gt;The sleight of hand here of course is that Other People are also the dreaded perpetrators of Other People&amp;#39;s Automated Tests.  In my non-day job, rather than getting paid to work on a codebase that has no unit tests, I&amp;#39;m not paid (yet) to work on a project written in Ruby, where automated testing is &amp;quot;baked-right-in&amp;quot;.  Of course, the tests that script/generate will spit out as a by-product of its work all pass, but more importantly, one of the Ruby third party gems I use heavily has sucked up more of its fair share of my time because its tests fail whenever I start running a new version of Ruby or make another change.  &lt;/p&gt;

&lt;p&gt;Am I just being ornery and jealous of my time that I don&amp;#39;t want to spend the happy part of my coding weekend updating tests that say that a user should end up on page X when they&amp;#39;re finished with some task, after I just explicitly made the change so they&amp;#39;d end up on a page Y?  Really, we need tests to tell us what page people are going to now?  Did we think they&amp;#39;d suddenly start hopping over to pets.com?  And do I care that the string format of a DateTime object changed and now your tests are failing not because the dates are wrong but because of that incidental?&lt;/p&gt;

&lt;p&gt;Test Driven Development works like this:&lt;/p&gt;

&lt;p&gt;1) Write test case, color should be red.
2) Watch test case fail, color is not red.
3) Write code to make red.
4) Test case passes.&lt;/p&gt;

&lt;p&gt;Development Driven Development works like this:&lt;/p&gt;

&lt;p&gt;1) Write code to make red.
2) Verify red.&lt;/p&gt;

&lt;p&gt;Yes, I&amp;#39;ve had cases where automated tests have alerted me to real bugs, so I don&amp;#39;t want to damn them out of hand.  But I think a lot of the religious fervor surrounding unit testing boils down to something like this:  &amp;quot;I don&amp;#39;t want to step through your code, and I haven&amp;#39;t yet created anything valuable enough that some other poor sap has to step through mine and I can get paid for it while being cursed as a fool.&amp;quot;&lt;/p&gt;

&lt;p&gt;So I&amp;#39;m changing my goal, from writing unit tests for Other People&amp;#39;s Code to just debugging that code as best I can while writing my own code.&lt;/p&gt;

&lt;p&gt;I&amp;#39;d rather be a hammer than a nail.  As the great software engineer, Louis XIV, said, &amp;quot;Other People, C&amp;#39;est Moi!&amp;quot;&lt;/p&gt;
</description>
				<pubDate>Thu, 23 Jul 2009 20:22:17 -0700</pubDate>
				<link>/development-driven-development</link>
				<guid isPermaLink="true">/development-driven-development</guid>
			</item>
			
		
			
			<item>
				<title>Ruby on Rails Enumerations and Fixtures</title>
				<description>&lt;p&gt;I had to figure out Ruby on Rails enumerations and fixtures today.  &lt;/p&gt;

&lt;p&gt;The solution will be here in just a moment, but first, some gratuitous background:  I was working on a Person resource -- or a &amp;quot;Contact&amp;quot; resource if you prefer your people to have a CRM flare to them.  Naturally, hanging off of these People (or Contacts) are as many phone numbers as they might have.&lt;/p&gt;

&lt;p&gt;Twenty-first century people have a lot of phones.&lt;/p&gt;

&lt;p&gt;Once you start having contacts who own lots of phones, naturally you want to know if you&amp;#39;re bugging someone to buy your widgets on their cell phone or their home phone or what have you.&lt;/p&gt;

&lt;p&gt;You don&amp;#39;t want to store whole strings to do this, so probably you end up with a line in your schema that looks something like this:
&lt;code&gt;
    t.integer  &amp;quot;phone_type&amp;quot;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Well, that&amp;#39;s fine, but in your code you don&amp;#39;t want to be saying &amp;quot;p.phone_type = 2&amp;quot;, because that&amp;#39;s not all that readable.  &lt;/p&gt;

&lt;p&gt;Now Ruby doesn&amp;#39;t have enums (BAD language -- just for that you&amp;#39;re going straight to bed with no strong typing, young man).  It does, however, have constants, and this &lt;a href=&quot;http://www.rubyfleebie.com/enumerations-and-ruby/&quot;&gt;Rails tip&lt;/a&gt; shows you how to use them.&lt;/p&gt;

&lt;p&gt;Like me you may have opted for the simple &amp;quot;first approach&amp;quot; of adding the constants to your model, like so.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
class Phone &amp;lt; ActiveRecord::Base
  # Type constants
  HOME = 1
  WORK = 2
  CELL = 3
  # ... more model code ...
end
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Well, all that&amp;#39;s well and good, but then what do you do about your fixtures?  Remember, your whole point in starting on this Enumeration journey was to get your code more readable, not less, so if you end up having fixtures that look like this, that&amp;#39;s not a good outcome:
&lt;code&gt;
et_the_extra_terestrial:
  id:                     1
  person_id:        1
  phone_num:     9165551212
  phone_type:     1
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Phone_type:    1&lt;br&gt;
At about this point, I remembered that one of my Rails books said something about dynamic fixtures.  Looking those up, it was easy enough to get ET&amp;#39;s phone looking the way it should in no time.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
et_the_extra_terestrial:
  id:                     1
  person_id:        1
  phone_num:     9165551212
  phone_type:     &amp;lt;%= Phone::HOME %&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And there you have it, Bob&amp;#39;s you&amp;#39;re uncle, and Drew Barrymore&amp;#39;s your hot aunt.&lt;/p&gt;
</description>
				<pubDate>Tue, 30 Jun 2009 11:37:31 -0700</pubDate>
				<link>/ruby-enumerations-and-fixtures</link>
				<guid isPermaLink="true">/ruby-enumerations-and-fixtures</guid>
			</item>
			
		
			
			<item>
				<title>Using Ruby Fixtures at the Console</title>
				<description>&lt;p&gt;At the risk of showing how (not) far I am along the learning curve given my Month of Sundays Rails project, here&amp;#39;s a great beginner sort of   &lt;a href=&quot;http://www.railsforum.com/viewtopic.php?id=11479&quot;&gt;rails tip&lt;/a&gt; I found on how to load fixtures into the console.&lt;/p&gt;

&lt;p&gt;The meat of it is this, which I like because it simultaneously shows you how to set up your environment correctly for the console, and for rake.  Not a bad little tutorial for two lines worth of stuff:
&lt;code&gt;
rake db:fixtures:load RAILS_ENV=test
script/console test
&lt;/code&gt;&lt;/p&gt;
</description>
				<pubDate>Sat, 27 Jun 2009 10:59:41 -0700</pubDate>
				<link>/using-ruby-fixtures-at-the-console</link>
				<guid isPermaLink="true">/using-ruby-fixtures-at-the-console</guid>
			</item>
			
		
			
			<item>
				<title>Software At The Speed of Part Time</title>
				<description>&lt;p&gt;I&amp;#39;ve been working on a Rails application, not all the live long day, but generally on a long Friday night and part of Saturday.&lt;/p&gt;

&lt;p&gt;Being self-employed during the boom years, now that we&amp;#39;re in a recession I own a real estate company for pin money, and have a full time ecological niche banging on legacy C code in a cube forest.  Following my ancestors, the hunter-gatherers, I am a typer-debugger.&lt;/p&gt;

&lt;p&gt;On Friday nights I cut loose from the dusty streets of this one horse Bruce Springsteen song, and do, what exactly?&lt;/p&gt;

&lt;p&gt;More typing.&lt;/p&gt;

&lt;p&gt;Because I hope to get paid for this Rails application eventually, I have to go at it weekend after weekend.  But because I&amp;#39;m not yet getting paid for it yet, and because even if I ever will I&amp;#39;ll be more or less in charge of its direction, I enjoy it as a creative outlet.&lt;/p&gt;

&lt;p&gt;The speed of part time takes some getting used to.   Software is one of those things where you start to really get rolling on whatever language it is you happen to be using this year after several weeks of being back in that environment.  Sure, you can be semi-productive on day one, but by week 12 you&amp;#39;re cruising along nicely.&lt;/p&gt;

&lt;p&gt;When we say week twelve, though, that&amp;#39;s for a full time gig.  When you get a day of programming per week, then multiply everything by five, given what would have been your five day work week.  So twelve weeks becomes sixty.&lt;/p&gt;

&lt;p&gt;Programming at the speed of part time, a six month project takes two and a half years.&lt;/p&gt;

&lt;p&gt;To be sure, you have a bit more than a day per weekend you can conceivably put in, but on the minus side, you&amp;#39;re having to keep it all in memory after flushing C through your brain all week.&lt;/p&gt;

&lt;p&gt;Needless to say, the hardest part of such a project is staying encouraged after four months or so, with a mere few weeks of progress seeming to show for one&amp;#39;s efforts.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s amazing to see how &amp;quot;the economy&amp;quot; changes things.  It seems like all the coffee shops around here are closed.  During the boom years, when one could make a living by blogging alone, I used to go out with all the other high-on-the-hog heloc bailout recipients and enjoy my French roasts.&lt;/p&gt;

&lt;p&gt;Today I went out for my birthday mocha, and my old shop was closed, and the place I would go before I went to my old shop was closed.  To be sure, the coffee shops inside the supermarkets are still doing OK, rescued from collapse by their proximity to the produce.&lt;/p&gt;

&lt;p&gt;I wonder if any of the old baristas who lost their jobs are now inside Safeway coffee shops, while working on their own chai latte projects on Friday nights.&lt;/p&gt;

&lt;p&gt;I hope not.&lt;/p&gt;
</description>
				<pubDate>Sat, 20 Jun 2009 01:03:25 -0700</pubDate>
				<link>/software-at-the-speed-of-part-time</link>
				<guid isPermaLink="true">/software-at-the-speed-of-part-time</guid>
			</item>
			
		
			
			<item>
				<title>SVN Recurisvely Show Unversioned Files</title>
				<description>&lt;p&gt;Try this:&lt;/p&gt;

&lt;p&gt;svn status | grep ?&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;
</description>
				<pubDate>Fri, 19 Jun 2009 21:18:27 -0700</pubDate>
				<link>/svn-recurisvely-show-unversioned-files</link>
				<guid isPermaLink="true">/svn-recurisvely-show-unversioned-files</guid>
			</item>
			
		
			
			<item>
				<title>A Farewell to SlickEdit</title>
				<description>&lt;p&gt;For most men, a mid-life crisis involves either some young bimbo, a motorcycle, or both.  My own midlife crisis is unfolding somewhat differently.&lt;/p&gt;

&lt;p&gt;In a couple of weeks, the age of fifty will come out to greet me, as the windshield greets the mayfly.   The local bimbos being unforthcoming, and Harley Davidsons being too noisy, I am learning a new text editor.&lt;/p&gt;

&lt;p&gt;For many years, my editor of choice has been Visual SlickEdit, with Brief emulation turned on.  This worked fine for me, especially as long as I was coding web sites for my real estate business and not really feeling myself to be in the Programmer Swing of Things.&lt;/p&gt;

&lt;p&gt;Over the years when I was in the Programmer Swing of Things, however, I had previously spent hundreds of dollars on SlickEdit upgrades.  I can count no less than seven SlickEdit boxes here in the study, which tells me I&amp;#39;ve been through one Linux version and at least six versions of the Windows product.  So naturally lately when I started to really get into Ruby on Rails, I thought I&amp;#39;d check out what kind of upgrade I&amp;#39;d be eligible for, so I could take advantage of the latest language support feature.&lt;/p&gt;

&lt;p&gt;It turns out I&amp;#39;m not eligible for an upgrade.   The SlickEdit site has a tool where you enter your license number, and the web site says, in effect:  S-U-C-K-E-R!  You want to develop on Linux and Windows and get the latest features after buying seven licenses already?  Sorry, that&amp;#39;ll be six hundred dollars more.&lt;/p&gt;

&lt;p&gt;They&amp;#39;re not Microsoft, but they&amp;#39;re in the same religion.&lt;/p&gt;

&lt;p&gt;I decided at this point that VIM was really worth taking another look at.  I&amp;#39;ve used it sporadically over the years, usually when connecting to an ISP on a shell account and needing to get something done in a hurry.  In the last few weeks, I decided to start using it systematically, remembering from my Brief days that after a couple of weeks of pain I&amp;#39;d be liking the world again.  Now I&amp;#39;m up to the point where I&amp;#39;m somewhat competent.  Some things still go too slowly, but I&amp;#39;ve found that if I open up SlickEdit my fingers are already trying to make GVIM work, not Brief.&lt;/p&gt;

&lt;p&gt;On the Ruby front, Tim Pope&amp;#39;s &lt;a href=&quot;http://www.vim.org/scripts/script.php?script_id=1567&quot;&gt;Vim Ruby Plugin&lt;/a&gt; is a solidly competent free tool for navigating Rails code and getting pretty much anything else done in Rails without resorting to the terminal (unless you happen to feel like resorting to the terminal, of course).&lt;/p&gt;

&lt;p&gt;GVIM  works great on Linux, of course, and with a minor wrinkle or two (like using CTRL-Q for &amp;quot;Visual Block&amp;quot; instead of CTRL-V), it works great on Windows, too.   If you find it useful you&amp;#39;re asked to help the &lt;a href=&quot;http://iccf-holland.org/&quot;&gt;Ugandan Children&lt;/a&gt;, but outside of that it&amp;#39;s free.&lt;/p&gt;

&lt;p&gt;So that&amp;#39;s my midlife crisis, in its nerdly nutshell.  No harlot, no Harley:  just me and my new editor, which I like very much, and a lot of useless SlickEdit boxes.&lt;/p&gt;
</description>
				<pubDate>Fri, 29 May 2009 21:35:05 -0700</pubDate>
				<link>/a-farewell-to-slickedit</link>
				<guid isPermaLink="true">/a-farewell-to-slickedit</guid>
			</item>
			
		
			
			<item>
				<title>Graphical Unit Testing for Ruby on Windows</title>
				<description>&lt;p&gt;In my last post I discussed some of the pros and cons of Ruby on Rails versus .NET.  One of my complaints at the time was that Ruby lacks a good graphical unit test runner, because I&amp;#39;m a sucker for a green bar.  I also complained that running tests is cumbersome on Windows.&lt;/p&gt;

&lt;p&gt;Tonight I decided to see if there was a green bar to be had anywhere in the Ruby world, and the answer is this:  well, yes, if you&amp;#39;re running on Linux, and if you&amp;#39;re running Windows, well, sort of.  The good news is that Ruby does have a graphical test runner -- in my case it lives in ruby\lib\ruby\1.8\test\unit\ui\gtk2.  You can learn how to set up &lt;a href=&quot;http://ruby-gnome2.sourceforge.jp/hiki.cgi?Install+Guide+for+Windows&quot;&gt;Ruby GTK on Windows here&lt;/a&gt;.   Also even though the source clearly wants gtk2, and the web site warns that that&amp;#39;s not fully supported on Windows, it does appear to be working.  I must say the treeview is a lot more primitive than NUnit&amp;#39;s, and you don&amp;#39;t get to see which tests passed -- though of course you get the more important information about which ones failed and where.  And most of all, you get the green bar.  Sweet, beautiful green telling you the world is OK.&lt;/p&gt;

&lt;p&gt;And in spite of what the docs say about ActiveSupport::TestCase being derived from Object, it&amp;#39;s not -- it&amp;#39;s derived from ::Test::Unit::TestCase as it should be, at least in the code I&amp;#39;m looking at.  Like I said before:  Ruby documentation makes Jesus cry.  And I&amp;#39;m not even religious.&lt;/p&gt;
</description>
				<pubDate>Fri, 08 May 2009 21:46:46 -0700</pubDate>
				<link>/graphical-unit-testing-for-ruby-on-windows</link>
				<guid isPermaLink="true">/graphical-unit-testing-for-ruby-on-windows</guid>
			</item>
			
		
			
			<item>
				<title>ASP.NET versus Ruby On Rails</title>
				<description>&lt;p&gt;My friend and college housemate &lt;a href=&quot;http://dimsumthinking.com/blog/&quot;&gt;Daniel Steinberg&lt;/a&gt; stopped by  recently and caught me red-handed in yet another heinous act of last week&amp;#39;s marketing.  By &amp;quot;last week&amp;#39;s marketing&amp;quot;, I mean that I should know better than to say this site is about a specific platform / language/ technology.  This is generally the wrong approach for a computer-linguistic gadabout to take.  John Lockwood putting up a web site about a programming language is like Madonna putting up a web site about her one true love.  The next words out of her mouth are bound to be:  &amp;quot;Woops, no I mean my other one true love.&amp;quot;&lt;/p&gt;

&lt;p&gt;So with those other strange bedfellows out of the way, we now turn our attention to a comparison of ASP.NET and Ruby on Rails from my point of view as a fellow without a firm entrenchment in either technology.  This isn&amp;#39;t meant to start or feed a language war because, as I say, I&amp;#39;m not passionately committed to either technology.  I do think that both environments offer a lot that&amp;#39;s good, and both have more than enough things that bug the heck out of me.  So this article quite simply is my list of what I like and don&amp;#39;t like about each environment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What I Like About Ruby on Rails&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;*&lt;em&gt;Prototype
*&lt;/em&gt;Rails has excellent baked-in support for two great related JavaScript libraries -- Prototype and Script.acul.us.  It&amp;#39;s about this hard to get started:
&amp;lt;%= javascript&lt;em&gt;include&lt;/em&gt;tag :defaults %&amp;gt;.  Well, OK, it&amp;#39;s a little harder than that, but I found that with &lt;a href=&quot;http://www.prototypejs.org/api&quot;&gt;Prototype&amp;#39;s beautiful documentation&lt;/a&gt;, I was able to go from zero to productive in a few hours.  What&amp;#39;s more, I actually found myself liking JavaScript for the first time since -- oh, who am I kidding, I always hated it.  Prototype could change my mind, though.  I wrote something that started to look pretty good in Firefox, then fired up Internet Explorer fully expecting half the page to re-materialize in a particle accelerator in Switzerland.  But lo and behold, it worked the way it did in Firefox. You&amp;#39;re kidding, right?  JavaScript did that?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But then I saw her face.  Now I&amp;#39;m a believer.  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;link&lt;em&gt;to&lt;/em&gt;remote&lt;/strong&gt;
How easy can we make AJAX?  Does a single function call work for you?  It does for me.  Here&amp;#39;s a tip though from someone who knocked his head briefly against this wall:  unless you&amp;#39;re updating multiple DOM elements (and maybe even if you are), then forget about RJS.  Something in this format:  &amp;quot;your_response.html.erb&amp;quot; is your friend.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;*&lt;em&gt;Lots of Other Stuff
*&lt;/em&gt;If you&amp;#39;re a Rails programmer, lest I lose the goodwill from the next section, let me say this first: overall, I think Ruby on Rails is the bee&amp;#39;s knees, or perhaps the cat&amp;#39;s pajamas.  Well, either way, it&amp;#39;s something cool that belongs to some critter. I&amp;#39;m not sure I can frame why exactly, but it&amp;#39;s a lot of fun to program in.  There&amp;#39;s something about the way it all fits together that&amp;#39;s very satisfying.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;What I Don&amp;#39;t Like About Ruby on Rails&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Smugness and Sleight of Hand&lt;/strong&gt;
Rails is an utterly cool framework, but that doesn&amp;#39;t mean that there aren&amp;#39;t parts of it that aren&amp;#39;t either smoke and mirrors or mere social gushiness.  For example, if you have a phrase that goes Don&amp;#39;t Repeat Yourself with the clever acronym of &amp;quot;DRY&amp;quot;, then you probably shouldn&amp;#39;t say it over and over and over and over and over again.  Honestly.  Shut up already.  Even Assembly Language had macros.  We get it.  Give it a REST already.  Oh, and speaking of REST, remember your other catch phrase, You Ain&amp;#39;t Going to Need It?  Well, guess what:  you still have sessions, and so regarding REST, you ain&amp;#39;t.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;*&lt;em&gt;What, No Windows?
*&lt;/em&gt;Apparently Rails runs a lot better on Linux than it does on Windows.  I say apparently because I haven&amp;#39;t bitten the bullet yet to set up an Ubuntu partition, but it seems to be the gist of the literature.  I have no reason to doubt it given that as of a couple of weeks ago my no-model unit test framework (which at the time barely beat &amp;quot;Hello World&amp;quot; in terms of complexity) took 13 seconds to load and run.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;*&lt;em&gt;You Call This Documentation?
*&lt;/em&gt;Unlike the Prototype documentation (which as I said, is beautiful), the documentation for Rails falls into two categories, as near as I can tell:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Web pages that link to things that aren&amp;#39;t there any more, as though the framework were trying to bury the competition beneath the sheer weight of 404 errors.&lt;/li&gt;
&lt;li&gt;Function documentation that looks something like this:my&lt;em&gt;rails&lt;/em&gt;function(object, gizmo, options = {}, html&lt;em&gt;options = {} )
_object:  some well defined object that the documentation describes in depth
gizmo:  some gizmo that&amp;#39;s also pretty well defined but fairly self evident
blah blah blah lorem ipsit dolor yada yada.
_
Where&amp;#39;s the discussion of &amp;quot;options&amp;quot; and &amp;quot;html&lt;/em&gt;options&amp;quot;, you ask?  If you&amp;#39;re lucky, they&amp;#39;re somewhere else on the same page, twenty lines down or under the discussion of some related function.  More likely they&amp;#39;re in the source.  Apparently if you&amp;#39;re a Rails programmer, a side benefit of saying Don&amp;#39;t Repeat Yourself over and over is having function parameters handled only in the source and not in the documentation.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So much for the pros and cons of Rails.  Let&amp;#39;s see if we can come up with some similar virtues and trash talk for Microsoft&amp;#39;s ASP.NET.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What I Like About ASP.NET&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;*&lt;em&gt;Visual Studio
*&lt;/em&gt;Visual Studio is a competent and mature Integrated Environment, with an outstanding debugger and great features such as code completion.  Now, before you say, &amp;quot;But John, Rails has that, too!&amp;quot;, I should point out that, yes, I tried out RubyMine (in Beta) and Aptana Studio, and so far I&amp;#39;m a bit underwhelmed.  Yes, Chris Williams was totally nice when I entered a bug wherein the code completion didn&amp;#39;t work, and he put a fix in for 1.3.0 within 24 hours of me entering it, and yes I appreciate that.  But 1.3 isn&amp;#39;t out yet, and in Visual Studio, it just works.  Admittedly, Microsoft&amp;#39;s tool has been around a lot longer, and yes, they have huge resources, the comparison is unfair, etc.  But if you&amp;#39;re going to lure me out of Visual SlickEdit and the command line, you&amp;#39;d better have great code completion and an awesome debugger, because otherwise I&amp;#39;m comfortable already.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;*&lt;em&gt;MSDN
*&lt;/em&gt;Remember those missing options and html_options from the Rails doc?  Well, if I&amp;#39;m sitting at my keyboard, say &amp;quot;Go&amp;quot;, give me twenty seconds, and I&amp;#39;ll rattle off all the parameters for CreateWindowEx and what they mean, including acceptable values for multi-valued parameters.  The MSDN documentation for ASP.NET is as good as the Rails documentation is poor.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;*&lt;em&gt;Jobs
*&lt;/em&gt;The last two times I looked, the number of jobs for ASP.NET developers was beating the number of jobs for Ruby on Rails developers by a factor of about 11 to 1.  If you look at the pyramid for Abraham Maslow&amp;#39;s &lt;a href=&quot;http://en.wikipedia.org/wiki/Maslow%27s_hierarchy_of_needs&quot;&gt;hierarchy of needs&lt;/a&gt;, you&amp;#39;ll see that employment (in &amp;quot;Safety&amp;quot;), comes well before Esteem and Self-actualization.  The Beatles presciently wrote about the allure of Rails versus the hegemony of Microsoft thus:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Your lovin&amp;#39; gives me a thrill
But your lovin&amp;#39; don&amp;#39;t pay my bills.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;__*&lt;em&gt;NUnit
*&lt;/em&gt;What can I say.  I&amp;#39;m a tramp for cheap visual thrills.  I like to see the bar turn green.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;What I Don&amp;#39;t Like About ASP.NET&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;*&lt;em&gt;High Cost of Ownership
*&lt;/em&gt;I mentioned jobs before, but in some respects this is a moot point or at least not the only point, since what I have discovered about myself long ago is that the guy I really like working and writing code for is me.  SQLServer and .NET hosting simply don&amp;#39;t have the same sorts of economies as the LAMP world, and I&amp;#39;m sure Rails is on a path to being that cost effective even if it&amp;#39;s not quite there yet.  Thus, to me much of the debate breaks down into a personal decision between entrepreneur versus employee.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;*&lt;em&gt;Vendor Lock
*&lt;/em&gt;As slow as Rails is on Windows, as far as I know the only implementation to date of LINQ to SQL (which one might nickname &amp;quot;ActiveRecord for Microsfoties&amp;quot;) is against SQL Server.  Yes, it&amp;#39;s cool that LINQ works with native objects, XML, and SQL, but to date I haven&amp;#39;t yet needed to do a right outer join of my Employees table and my HttpRequest object, and I don&amp;#39;t anticipate that changing.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;*&lt;em&gt;Their Model View Controller Support is a Disaster
*&lt;/em&gt;This may have changed since I last looked at it, but on my last ASP.NET contract they had an MVC implementation that completely broke browser navigation and was a nightmare to code to.  I&amp;#39;m not an MVC snob, so I&amp;#39;m quite happy with some pages and code behind talking to a well defined model interface if that&amp;#39;s how you want to do things.  However I do think that if you&amp;#39;re going to use the MVC pattern (or any other design pattern), it should work better than the absence of it does.  Rails forces MVC on you, but it works just fine.  MVC is an optional nightmare in ASP.NET, unless your manager is of that all too common variety that prefers buzzwords over common sense -- in which case it becomes a required nightmare.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you for hanging in there for this completely idiosyncratic view of some of the pros and cons of Ruby on Rails versus ASP.NET.  I&amp;#39;ve barely scratched the surface, I&amp;#39;m sure, but when it comes to language wars, that&amp;#39;s probably all one should do.  In my opinion, programming always represents a certain dynamic tension between &amp;quot;How cool is that?&amp;quot; and &amp;quot;Who&amp;#39;s cutting me a check this week?&amp;quot;  Go out and code something, folks.  What if they gave a language war and nobody came?&lt;/p&gt;
</description>
				<pubDate>Sun, 19 Apr 2009 14:29:13 -0700</pubDate>
				<link>/aspnet-versus-ruby-on-rails</link>
				<guid isPermaLink="true">/aspnet-versus-ruby-on-rails</guid>
			</item>
			
		
			
			<item>
				<title>Write or Call Your Representative / Senator to Oppose the Paulson Bailout</title>
				<description>&lt;p&gt;I don&amp;#39;t know how much you&amp;#39;re following the news of the bailout of wall street banks who repackaged bad loans, but if you&amp;#39;re not, now is a great time to get involved and please, please call your elected representative and tell everyone you can about this incredible fiasco.&lt;/p&gt;

&lt;p&gt;Hank Paulson, Secretary of the Treasury, and George Bush are asking Congress for the authority to spend up to &lt;strong&gt;$700 billion&lt;/strong&gt; at a time (that&amp;#39;s a balance sheet maximum, not a maximum on the total the government can spend). That&amp;#39;s more than the &lt;a href=&quot;http://zfacts.com/p/447.html&quot;&gt;total cost of the War in Iraq&lt;/a&gt; so far. The Treasury will spend it buying bad loans, and get no equity stake in the firms they&amp;#39;re buying them from -- leading some to call it &amp;quot;cash for trash&amp;quot;.&lt;/p&gt;

&lt;p&gt;Section eight of the proposed legislation gives Paulson an oversight-free blank check as to how to spend that much of your money.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Decisions by the Secretary pursuant to the authority of this Act are non-reviewable and committed to agency discretion, and may not be reviewed by any court of law or any administrative agency.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can read the &lt;a href=&quot;http://www.nytimes.com/2008/09/21/business/21draftcnd.html?ref=business&quot;&gt;full text here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Although as you might expect, public opposition to the plan is strongest among Democrats, several prominent conservatives have also &lt;a href=&quot;http://www.salon.com/opinion/greenwald/2008/09/22/paulson/index.html&quot;&gt;gone on record&lt;/a&gt; as being opposed to the plan. This legislation is so bad that &lt;a href=&quot;http://www.salon.com/opinion/greenwald/2008/09/22/paulson/index.html&quot;&gt;even CNN gets it&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Please look up and either write to or phone your &lt;a href=&quot;http://www.senate.gov/&quot;&gt;Senator&lt;/a&gt; and &lt;a href=&quot;http://www.house.gov/house/MemStateSearch.shtml&quot;&gt;House Representative&lt;/a&gt; right away. You can learn more about the proposal by clicking through on the articles current on Digg for &lt;a href=&quot;http://digg.com/business_finance&quot;&gt;Business and Finance&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Congress is in a HUGE RUSH to get this done, so those of us who think it&amp;#39;s expensive, ill conceived and leaves us stuck holding the bill need to MOVE NOW to express our concerns to Congress.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;UPDATE:&lt;/strong&gt;  &lt;/p&gt;

&lt;p&gt;Here is the &lt;a href=&quot;http://www.politico.com/static/PPM41_ayo08b28.html&quot;&gt;latest draft the bill&lt;/a&gt;, which I must admit I think is substantially better than Paulson&amp;#39;s original proposal. I wouldn&amp;#39;t go so far as to say this makes me for the bill, but at least it&amp;#39;s moving in the right direction.&lt;/p&gt;
</description>
				<pubDate>Mon, 22 Sep 2008 15:01:06 -0700</pubDate>
				<link>/write-or-call-your-representative-senator-to-oppose-the-paulson-bailout</link>
				<guid isPermaLink="true">/write-or-call-your-representative-senator-to-oppose-the-paulson-bailout</guid>
			</item>
			
		
			
			<item>
				<title>Wordpress Security Woes</title>
				<description>&lt;p&gt;A few days ago all of the Wordpress sites I have hosted on this server were hacked, so I&amp;#39;ve been learning more than I ever wanted to know about Wordpress security.&lt;/p&gt;

&lt;p&gt;Fortunately I didn&amp;#39;t lose any data, but it was still an almost two-day pain in the butt to get back to an unhacked state. After seeing what became of many of my files and database entries, I was a bit amazed that Wordpress is as insecure as it is.&lt;/p&gt;

&lt;p&gt;Several articles go into the sorts of hacks I was dealing with, where PHP code disguised as image files are added to the list of active plugins. Yuck.&lt;/p&gt;

&lt;p&gt;Probably the most helpful article was &lt;a href=&quot;http://ocaoimh.ie/2008/06/08/did-your-wordpress-site-get-hacked/&quot;&gt;Did Your Site Get Hacked&lt;/a&gt;. Why, yes it did. You might also consult &lt;a href=&quot;http://www.prelovac.com/vladimir/wordpress-security-notes&quot;&gt;Wordpress Security Notes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you simply must see the glass as half full, one of the good things that came out of this was that I have now hardened both my own blogs and those of the clients who are hosted with my blog on my server, and at the same time in order to make maintenance less of a nightmare I&amp;#39;ve consolidated several just-sitting-there blogs into my more popular blogs.&lt;/p&gt;

&lt;p&gt;Oh well, into each life must fall not just rain, but two days of useless software development aimed at thwarting some malicious moron with a copied exploit script.&lt;/p&gt;
</description>
				<pubDate>Tue, 12 Aug 2008 15:27:48 -0700</pubDate>
				<link>/wordpress-security-woes</link>
				<guid isPermaLink="true">/wordpress-security-woes</guid>
			</item>
			
		
			
			<item>
				<title>A Review of RealEstateVoices.com</title>
				<description>&lt;p&gt;I recently came across &lt;a href=&quot;http://www.realestatevoices.com/&quot;&gt;RealEstateVoices.com&lt;/a&gt;, which is a place where you can submit and vote on blog posts or other real estate related news. The site runs on the open source &lt;a href=&quot;http://www.digg.com&quot;&gt;Digg&lt;/a&gt; clone, &lt;a href=&quot;http://www.pligg.com&quot;&gt;Pligg&lt;/a&gt;. Ever since, I&amp;#39;ve been submitting several articles of my own and from other people&amp;#39;s sites that I like, and inviting a few friends to check it out. Here&amp;#39;s my &lt;a href=&quot;http://www.realestatevoices.com/story/title/A_Review_of_RealEstateVoices-com&quot;&gt;link back&lt;/a&gt; to this article -- careful you don&amp;#39;t trip on the recursion!&lt;/p&gt;

&lt;p&gt;On the one hand, I&amp;#39;m a bit sore because I didn&amp;#39;t put up a site like this several months ago, when I first had the idea for a digg-like real estate site. Actually, my idea for a site was a little bit different, so there may still be a niche to explore, since what I was looking to do was more like a cross between Digg and the Carnival of Real Estate. There would be a weekly award like the Carnival, but the selections for who won each week would be vote-based.&lt;/p&gt;

&lt;p&gt;I even started coding some of this back in January, before I knew that Pligg existed. Unfortunately I got distracted by other projects, and now my idea is just an idea with a little bit of user signup code, and there&amp;#39;s Pligg out there, and there&amp;#39;s RealEstateVoices.&lt;/p&gt;

&lt;p&gt;So I congratulate the publishers of RealEstateVoices.com for getting there first. Overall it&amp;#39;s very easy to get started -- you simply sign up (which only takes a few seconds) and start submitting stories. Stories that get voted on are published, and presented more prominently than those that are simply submitted.&lt;/p&gt;

&lt;p&gt;So, for example, here&amp;#39;s my page of &lt;a href=&quot;http://www.realestatevoices.com/user/view/published/login/JohnLockwood&quot;&gt;Published Stories&lt;/a&gt; and here are the &lt;a href=&quot;http://www.realestatevoices.com/user/view/shaken/login/JohnLockwood&quot;&gt;stories I&amp;#39;ve submitted&lt;/a&gt; that no one has voted on yet. But don&amp;#39;t be afraid -- I don&amp;#39;t mind if you vote for my submissions! :)&lt;/p&gt;

&lt;p&gt;The good news about RealEstateVoices is that it&amp;#39;s an easy to use way to get some reasonably relevant-to-real-estate links to your blog. The bad news about RealEstateVoices is that the publishers simply are not keeping up on the spam there. So you can read about real estate, to be sure, but Google has also indexed sixty-six articles from Pligg about enlarging your penis -- but, ironically enough given that many real estate professionals are women -- only about fifteen articles about enlarging your breasts. Browsing RealEstateVoices, you&amp;#39;ll also find lots of links to laptop batteries, cheap hotels, wedding favors -- and all sorts of irrelevant claptrap.&lt;/p&gt;

&lt;p&gt;You can click the &amp;quot;Report Spam&amp;quot; link on as much as you want, seemingly in vain. It never goes away.&lt;/p&gt;

&lt;p&gt;That&amp;#39;s my main complaint about RealEstateVoices. The social network and user profile functionality are pretty minimalist, but that&amp;#39;s not such a big deal. But the Spam really gets in the way of this tool&amp;#39;s usefulness. The other big problem is that I haven&amp;#39;t been able to get the search tool to work at all.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m going to work with Pligg a little bit and see how the latest Beta&amp;#39;s doing. I imagine my original idea would be much easier to do as an integration on top of this existing code. Of course, then the guy having to make sure the spammers get stopped would be me. There are ways to approach this -- the latest Beta has more spam fighting tools built in, and one could always make the site invitation-only to help combat spam. The outstanding question would be whether users would show up given that there&amp;#39;s already a well established contender.&lt;/p&gt;
</description>
				<pubDate>Thu, 29 May 2008 15:51:14 -0700</pubDate>
				<link>/a-review-of-realestatevoicescom</link>
				<guid isPermaLink="true">/a-review-of-realestatevoicescom</guid>
			</item>
			
		
			
			<item>
				<title>The Realtor® Fix Plugin Stupid Test Post.</title>
				<description>&lt;p&gt;It&amp;#39;s fun to be a Realtor®. Realtors® have fun. Don&amp;#39;t you want to be a Realtor®?&lt;/p&gt;

&lt;p&gt;I want to be a Realtor®. Two realtors® is a good number to have on a team.&lt;/p&gt;
</description>
				<pubDate>Fri, 16 May 2008 12:03:13 -0700</pubDate>
				<link>/102</link>
				<guid isPermaLink="true">/102</guid>
			</item>
			
		
			
			<item>
				<title>Blogging Basics Part 3 of 3 — Launch Checklist</title>
				<description>&lt;p&gt;So far in our Twenty-One Days to a Better Blog Series (&lt;a href=&quot;http://www.inklit.com/blog/2008/04/11/twenty-one-days-to-a-better-blog/&quot;&gt;Intro&lt;/a&gt;, &lt;a href=&quot;http://www.inklit.com/series/21DaysTableOfContent.php&quot;&gt;Table of Contents&lt;/a&gt;), we&amp;#39;ve been talking about elements of your blog that you usually work on when your blog is still young, such as what platform it will be running on.  We also talked about how your domain name, title, tagline, and theme will work together to let your reader know right away that your blog is one that they&amp;#39;ll want to read.&lt;/p&gt;

&lt;p&gt;In this article I want to walk you through three more things that I always do when a blog is just a little infant, before I start happily typing away.  Together with the tasks we&amp;#39;ve already talked about, these tasks make up a kind of launch checklist for a new blog.  Even if you&amp;#39;re new to these three tasks, getting through them should only take a couple of hours.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Override the Default PermaLink Structure&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When you blog, you have a blog home page as well as pages that represent categories, archives of past blogs, and individual posts.  The links to the individual posts are called PermaLinks.  As the name suggests, you don&amp;#39;t want to be changing how these work late in the game.&lt;/p&gt;

&lt;p&gt;By default, Wordpress PermaLinks are &amp;quot;dynamic&amp;quot; URLs that are not very descriptive, and will look something like http://www.yourdomain.com/?p=123.  To change this, go into the &amp;quot;Settings&amp;quot; tab of the Wordpress control panel, and select &amp;quot;PermaLinks&amp;quot;.  Generally, I check the &amp;quot;Day and Name&amp;quot; radio button, which will give you a structure that includes the name in the URL of the post, thus (for example):  http://www.yourdomain.com/2008/04/14/my-first-post.  Such a &amp;quot;static&amp;quot; URL makes more sense both to a human reader and a search engine, though admittedly it loses brevity compared to the dynamic version.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Burn a Feed Using FeedBurner&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Another task that you&amp;#39;ll want to do early on is to &amp;quot;burn&amp;quot; a feed using &lt;a href=&quot;http://www.feedburner.com/&quot;&gt;FeedBurner&lt;/a&gt;. FeedBurner, now owned by Google, is a popular site that helps you do things like tracking statistics for your RSS feed.  It also helps you make your feed available to people using different readers.  I&amp;#39;ve found FeedBurner very easy to use, so you should be able to follow the directions there to get your feed burned relatively easily.&lt;/p&gt;

&lt;p&gt;Once you have your FeedBurner feed published, if you&amp;#39;re running Wordpress I recommend installing the &lt;a href=&quot;http://www.cre8d-design.com/blog/2006/01/26/are-you-funnelling-all-your-subscribers-through-feedburner/&quot;&gt;Feedburner Wordpress Plugin&lt;/a&gt;.  In brief, what this plugin does is it redirects people who find the default Wordpress theme to your FeedBurner feed, so that your FeedBurner statistics better reflect everyone who&amp;#39;s visiting your blog.&lt;/p&gt;

&lt;p&gt;The reason I consider using FeedBurner to be an &amp;quot;early in the life of a blog&amp;quot; task is that many blog directories want to have a URL of a feed to work with, so I like to point them to the FeedBurner version of the feed from the beginning.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Turn On Spam Filtering&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Dealing with Comment SPAM manually is a pain, and I have had excellent luck on Wordpress with either &lt;a href=&quot;http://unknowngenius.com/blog/wordpress/spam-karma/&quot;&gt;SpamKarma2&lt;/a&gt; or &lt;a href=&quot;http://akismet.com/&quot;&gt;Akismet&lt;/a&gt;.  I think that of the two, Akismet is a better choice going forward, since it is slightly easier to configure correctly.  In fact, there&amp;#39;s not much to it beyond activating the plugin and entering a Wordpress API Key (which you can get &lt;a href=&quot;http://faq.wordpress.com/2005/10/19/api-key/&quot;&gt;more information about here&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Related Posts:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.inklit.com/series/21DaysTableOfContent.php&quot;&gt;Twenty-One Days To a Better Blog Table of Contents&lt;/a&gt;&lt;/p&gt;
</description>
				<pubDate>Wed, 16 Apr 2008 20:08:35 -0700</pubDate>
				<link>/blogging-basics-part-3-of-3-launch-checklist</link>
				<guid isPermaLink="true">/blogging-basics-part-3-of-3-launch-checklist</guid>
			</item>
			
		
			
			<item>
				<title>Blogging Basics:  Platform, Hosting, Domain</title>
				<description>&lt;p&gt;Day one of our series about Building a Better Blog in Twenty-One Days was an introduction to what we&amp;#39;d be working on.&lt;/p&gt;

&lt;p&gt;Most of my readers -- maybe 90% -- can go ahead and skip over today&amp;#39;s &amp;quot;Day Two&amp;quot; installment about blogging platform, web hosting, and domain name.  That&amp;#39;s fine.  Go out and have a cigarette if you want.  I won&amp;#39;t be offended.  This is like the deceptively easy first day of review in math class before the hard work begins.&lt;/p&gt;

&lt;p&gt;For those of you who haven&amp;#39;t yet started a blog and are wondering where to begin, however, I&amp;#39;m going to just dive right in and share my religion with you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Your Blog Should Be Running On WordPress&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There, I&amp;#39;ve said it.&lt;/p&gt;

&lt;p&gt;If you&amp;#39;ve already launched your blog on Blogger or TypePad, and you&amp;#39;re happy with it, that&amp;#39;s great.  Most of the rest of the series will be non-Wordpress-specific, so you should stay with us in spite of this dogmatic beginning.&lt;/p&gt;

&lt;p&gt;However, if you haven&amp;#39;t already started a blog, then your blog needs to be running on Wordpress.  Here&amp;#39;s why:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you have a budget of no money at all, and you&amp;#39;re just experimenting and start writing and have some fun, you can get a free Wordpress.com blog.  I have one, just for the fun of it.  &lt;a href=&quot;http://wordpress.com/features/&quot;&gt;Here it is&lt;/a&gt;.  If your work takes off and you need to export it later, you can do so.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you&amp;#39;re in the middle of your blogging journey, and want more control over the code you run on your Wordpress blog, you can get a free copy of the open source Wordpress product and run it on any one of a zillion low cost web hosts for about $7.00 per month.  Here&amp;#39;s a &lt;a href=&quot;http://wordpress.org/hosting/&quot;&gt;list of some of these hosts&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;As a former software developer, I appreciate the fact that with a huge number of third party software plugins, Wordpress does about 99% of what I ever needed it to do.  The other 1% I can code myself.  Yes, their upgrades can be a bit quirky sometimes, but for the most part Wordpress is incredibly good software.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;You Need Your Own Domain Name&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;At about $10 per year or less through &lt;a href=&quot;http://www.godaddy.com&quot;&gt;Godaddy.com&lt;/a&gt;, having your own domain name is one of the cheapest things someone on the Internet is going to insist you break down and buy.  Your domain is your first attempt to give your visitor an idea about what your blog is going to be about, so picking a good name helps you with the goal we set for ourselves at the outset of being clear.  A good domain name should:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Relate to what the site&amp;#39;s about.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be as short as possible.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be as clear as possible.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Not infringe on any copyright / trademark or the like.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I thought InkLit.com was a cute name and a bit of a paradox for an Internet Writing site.  It&amp;#39;s also nice and short, but it&amp;#39;s not especially descriptive.&lt;/p&gt;

&lt;p&gt;&amp;quot;ProBlogger.com&amp;quot; is great -- it&amp;#39;s short, and tells you what the site is about.&lt;/p&gt;

&lt;p&gt;&amp;quot;Writing-Journey.com&amp;quot;:  very nice, but Bob needed the hyphen because the unhyphenated form was taken.  I have &amp;quot;Sacramento-Home.com&amp;quot; on another site for the same reason.&lt;/p&gt;

&lt;p&gt;A lot of really good domain names will be taken, but there are still some tasty nuggets to be found.  I just registered &amp;quot;TechReview360.com&amp;quot; the other day.  You can use the domain search tool available at Godaddy to research what&amp;#39;s available.&lt;/p&gt;

&lt;p&gt;If you&amp;#39;re at this stage with your blog, you may want to think about your domain name in connection with our next post in the series about some of the other basic elements of your blog.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.inklit.com/series/21DaysTableOfContent.php&quot;&gt;Twenty-One Days To a Better Blog Table of Contents&lt;/a&gt;&lt;/p&gt;
</description>
				<pubDate>Mon, 14 Apr 2008 10:01:04 -0700</pubDate>
				<link>/blogging-basics-platform-hosting-domain</link>
				<guid isPermaLink="true">/blogging-basics-platform-hosting-domain</guid>
			</item>
			
		
			
			<item>
				<title>Ad Contest Winner</title>
				<description>&lt;p&gt;&lt;a href=&quot;http://www.flickr.com/photos/11247388@N00/2360810530/&quot;&gt;&lt;img src=&quot;http://farm3.static.flickr.com/2303/2360810530_e35bc99b02_m.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;http://creativecommons.org/licenses/by/2.0/&quot;&gt;&lt;img src=&quot;http://www.inklit.com/wordpress/wp-content/plugins/photo_dropper/images/cc.png&quot; alt=&quot;Creative Commons License&quot;&gt;&lt;/a&gt; credit: &lt;a href=&quot;http://www.flickr.com/photos/11247388@N00/2360810530/&quot;&gt;sunshinecity&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am very pleased to announce that -- subject to someone beating him by June 10th according to the original &lt;a href=&quot;http://www.inklit.com/blog/advertise_contest.php&quot;&gt;contest rules&lt;/a&gt; -- Bob Younce of &lt;a href=&quot;http://www.writing-journey.com&quot;&gt;The Writing Journey&lt;/a&gt; is the winner of our ad contest.  Bob wins the 125 x 125 pixel banner ad at the right for six months, for the traffic and subscribers that came as a result of his submission of my site to StumbleUpon, and for otherwise &lt;a href=&quot;http://writing-journey.com/internet-writing/writing-around-the-web-april-2-2008&quot;&gt;making an effort&lt;/a&gt; to promote the contest.&lt;/p&gt;

&lt;p&gt;I say that Bob won subject to the original rules because according to the way the contest was originally framed, I reserved the right to post the winning ad on June 10th if I hadn&amp;#39;t gotten to my goal of 101 subscribers by today, April 10th.  As of today I&amp;#39;m up to 67 subscribers, so I&amp;#39;m officially two thirds of the way there.&lt;/p&gt;

&lt;p&gt;However, you could still win this contest if you are some well known blog A-lister and you wrote a glowing review about me and pointed people to the original contest rules and the &lt;a href=&quot;http://www.inklit.com/blog/2008/03/11/eleven-steps-to-get-101-subscribers-to-your-new-blog-in-thirty-days/&quot;&gt;Eleven Steps&lt;/a&gt; article.&lt;/p&gt;

&lt;p&gt;So all of you A-Listers who are hanging on my every word, now&amp;#39;s your chance to win a foot race against Bob Younce!  I&amp;#39;ll bet you can&amp;#39;t do it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Honorable Mention&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Jim Cronin of the &lt;a href=&quot;http://www.realesetatetomato.com&quot;&gt;Real Estate Tomato&lt;/a&gt; gets an honorable mention as the early favorite in the contest, after publishing a guest post of mine.&lt;/p&gt;

&lt;p&gt;Thank you to everyone else who participated as well by inviting me to do a guest post or promoting me on FaceBook or the like.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What&amp;#39;s Next?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Starting tomorrow we&amp;#39;ll have a brand new series, 21 Days to a Better Blog.  Watch for it.&lt;/p&gt;
</description>
				<pubDate>Thu, 10 Apr 2008 11:44:52 -0700</pubDate>
				<link>/ad-contest-winner</link>
				<guid isPermaLink="true">/ad-contest-winner</guid>
			</item>
			
		
			
			<item>
				<title>Blogging Tips:  Many Topics Versus Few Topics</title>
				<description>&lt;p&gt;&lt;a href=&quot;http://www.flickr.com/photos/32397729@N00/2297179486/&quot;&gt;&lt;img src=&quot;http://farm4.static.flickr.com/3294/2297179486_2089e1c8d1.jpg&quot; alt=&quot;IMG_4156&quot;&gt;&lt;/a&gt;
&lt;a href=&quot;http://creativecommons.org/licenses/by-sa/2.0/&quot;&gt;&lt;img src=&quot;http://www.inklit.com/wordpress/wp-content/plugins/photo_dropper/images/cc.png&quot; alt=&quot;Creative Commons License&quot;&gt;&lt;/a&gt;  photo credit: &lt;a href=&quot;http://www.flickr.com/photos/32397729@N00/2297179486/&quot;&gt;joshuamckenty&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you&amp;#39;re a dedicated blogger and someone who has more than one interest in life, sooner or later you may be haunted by the issue of how many blogs you should have.    That&amp;#39;s the position I find myself in now.  To give you an idea of how much I&amp;#39;m wrestling with this issue, today at lunch I was doing a balance sheet of the pros and cons of using an existing blog and widening it to several topics, versus spinning off yet another blog that I&amp;#39;m not sure I have time for.&lt;/p&gt;

&lt;p&gt;Because that&amp;#39;s so on my mind these days, I was very interested in &lt;a href=&quot;http://www.abundancehighway.com/taking-the-abundance-highway-to-new-heights/&quot;&gt;this discussion&lt;/a&gt; on Suzie Cheel&amp;#39;s blog, which is about the pros and cons of having a narrowly focused, single-topic blog versus having a wide ranging blog with many topics.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Battle of the Bloggers&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A lot of folks weighed in on Suzie&amp;#39;s blog, and I was hoping some of my readers might also want to discuss it here.  One of the first things I did in going over it was look at who was arguing for and against specialization, and how well that model seems to be serving them.  On the specialist side of the argument was ProBlogger author Darren Rowse (In fact, I learned about the discussion because Darren &lt;a href=&quot;www.problogger.net/archives/2008/04/05/how-many-topics-should-a-blog-cover/&quot;&gt;linked to it&lt;/a&gt;).  Taking the generalist approach was an author that Suzie Cheel cited in her original post, John Pozadzides.  John believes strongly enough in the case for blog generalization that the tag line of his blog is &amp;quot;Specialization is for Insects&amp;quot;, part of a Heinlein quote that John gives in more detail in his &lt;a href=&quot;http://onemansblog.com/about/&quot;&gt;About Page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Digging into the numbers for both authors, I noticed that John had about &lt;a href=&quot;http://www.google.com/search?q=site%3Aonemansblog.com&quot;&gt;3,700 pages indexed&lt;/a&gt; by Google and 1,045 Feedburner subscribers as of today.  He also posted a figure of an average of 15,000 to 20,000 page views daily.  The ratio of page views to subscribers in his case is approximately 17:1, which is about what it is on Inklit, where I have 1,072 page views daily and 57 subscribers.&lt;/p&gt;

&lt;p&gt;Comparing Darren&amp;#39;s numbers to John&amp;#39;s, what struck me immediately is that Darren had less than twice as many &lt;a href=&quot;http://www.google.com/search?q=site%3Aproblogger.net&quot;&gt;pages indexed by Google&lt;/a&gt; (5,260), yet he had about forty-two times as many subscribers.  I don&amp;#39;t know Darren&amp;#39;s page view numbers, but I estimate them at something over a half million daily.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;That&amp;#39;s Not The Result I Wanted&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I love that Heinlein quote about specialization.  I really wanted to have a blog about everything -- in fact, as of yesterday, I had decided that that&amp;#39;s was where I was heading, and this morning I was taking the first steps in that direction, and was pretty much prepared to make the frightening announcement that Inklit was about to be devoured by my growing Borg Collective!&lt;/p&gt;

&lt;p&gt;Have no fear.  I am a specialist again.  This is a blog about Writing on the Internet.  Pay no attention to those digressions about Wordpress Plugins.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Readers, What Do You Think?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Comments?  Do you specialize?  If you generalize, do you do it in more than one place?&lt;/p&gt;
</description>
				<pubDate>Mon, 07 Apr 2008 15:05:44 -0700</pubDate>
				<link>/blogging-tips-many-topics-versus-few-topics</link>
				<guid isPermaLink="true">/blogging-tips-many-topics-versus-few-topics</guid>
			</item>
			
		
			
			<item>
				<title>Quick and Dirty Grammar Tips</title>
				<description>&lt;p&gt;A few years back I read a story about successful podcasters and one of the podcasts that got a great review was Grammar Girl&amp;#39;s Quick and Dirty Grammar Tips. To tell the truth I&amp;#39;d forgotten all about this site until recently, when I happened to stumble upon it using, as you may have already guessed, StumbleUpon.&lt;/p&gt;

&lt;p&gt;I don&amp;#39;t subscribe to podcasts, but fortunately Grammar Girl&amp;#39;s (aka Mignon Fogarty&amp;#39;s) work is also available &lt;a href=&quot;http://grammar.quickanddirtytips.com/default.aspx&quot;&gt;in blog format&lt;/a&gt;. This blog has only been in my reader a short time, but already it&amp;#39;s one of the favorites, because it has good, simple grammar advice.&lt;/p&gt;

&lt;p&gt;Time spent studying the rules of grammar, rhetoric, and style is time well spent. To be sure, most writers hit the mark on these rules a large portion of the time, but I&amp;#39;ve found that my writing improves enormously to the extent I spend a couple of hours per week on the nuts and bolts of the craft.&lt;/p&gt;

&lt;p&gt;But when it comes to Grammar Girl, I&amp;#39;m not just motivated by self-inflicted self-improvement. On the contrary, Fogarty has a way of making the subject very engaging and an easy read.&lt;/p&gt;
</description>
				<pubDate>Tue, 01 Apr 2008 09:50:15 -0700</pubDate>
				<link>/quick-and-dirty-grammar-tips</link>
				<guid isPermaLink="true">/quick-and-dirty-grammar-tips</guid>
			</item>
			
		
			
			<item>
				<title>Article Submissions</title>
				<description>&lt;p&gt;If you&amp;#39;re interested in places where you can submit your articles, check out the guest post I wrote this week, &lt;a href=&quot;http://www.vigorouswriting.net/2008/03/freelance-face-off-ezinearticles-versus.html&quot;&gt;Freelance Faceoff: EZineArticles Versus Associated Content&lt;/a&gt;. Thank you to Jesse Hines at &lt;a href=&quot;http://www.vigorouswriting.net&quot;&gt;Vigorous Writing&lt;/a&gt; for asking me to send that over and for his kind words about the article.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve been doing an article for EZineArtices every few days. I mention in the Vigorous Writing article, it&amp;#39;s working out quite well. Here&amp;#39;s my EZineArticles &lt;a href=&quot;http://ezinearticles.com/?expert=John_Lockwood&quot;&gt;Author Page&lt;/a&gt;. Based on one of the mistakes I made, I can offer you the following tip so you can avoid doing the same thing. If you&amp;#39;re going to publish an article somewhere else, be careful if you go back into the EZineArticles editor once your article has been saved and approved. There&amp;#39;s an auto-save feature on the editor. If you&amp;#39;re not careful, you can do what I did, which is accidentally mark an already-approved article as &amp;quot;changed&amp;quot; and thereby send it through the approval process again.&lt;/p&gt;

&lt;p&gt;I made that mistake in the context of trying out another article submission site this week: Article City. ArticleCity.com looked really great at first glance, and there were many articles there that had been widely re-circulated. I tried submitting an article there, however, and after a few days it seems pretty likely that nobody&amp;#39;s home. It&amp;#39;s not so unusual that my submission hasn&amp;#39;t received a response yet, but at the same time the site hasn&amp;#39;t changed at all in the past few days. The same article on &amp;quot;Measuring Lubricant Quality&amp;quot; has been on the top of page one during this time, so it doesn&amp;#39;t appear they&amp;#39;ve been approving anyone else&amp;#39;s new articles, either.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Related Articles:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.inklit.com/blog/2008/03/25/forthcoming-guest-article-on-article-submission-sites/&quot;&gt;Forthcoming Guest Post on Article Submissions&lt;/a&gt;&lt;/p&gt;
</description>
				<pubDate>Fri, 28 Mar 2008 12:05:17 -0700</pubDate>
				<link>/article-submissions</link>
				<guid isPermaLink="true">/article-submissions</guid>
			</item>
			
		
			
			<item>
				<title>How to Retire on a Six Figure AdSense Income</title>
				<description>&lt;p&gt;If you were lured to this post by the title, you shouldn&amp;#39;t feel bad.  I didn&amp;#39;t really write this title to trick you, though I did write it to make a point.  I&amp;#39;m actually going to show you how to do it by the end of the article, too, so I don&amp;#39;t think it&amp;#39;s fair to accuse me of trickery.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m going to assume you don&amp;#39;t already have a web site, and you&amp;#39;re starting from scratch.  Six figure retirement means our goal is simply to get to $100,000 in AdSense income per year.  This shouldn&amp;#39;t be hard.  Just this morning, I stumbled on this article with the unambitious little title, &lt;a href=&quot;http://www.mediaups.com/2008/03/25/become-the-next-advertising-millionaire/&quot;&gt;Becoming the Next Advertising Millionaire&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This is going to be so easy.  The &amp;quot;next&amp;quot; advertising millionaire.  Wow, there must be thousands of them!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I&amp;#39;m Just Like You&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I like to think that I&amp;#39;m too intelligent to fall for the siren song of Internet riches, but I&amp;#39;m not.  I want to be an Internet advertising rock star just as much as the next guy.&lt;/p&gt;

&lt;p&gt;As a result, lately I&amp;#39;ve been spending a lot of time with AdSense and other ad networks.  This is how I happened to stumble on the &amp;quot;Becoming the Next Advertising Millionaire&amp;quot; article.  I found it during a search for &amp;quot;interstitial ads&amp;quot;.  I visited one of my main blogs today, and found that suddenly there was another web site there, and it was making Firefox crash.  As it turns out, an interstitial ad is an ad where a whole new web site comes up instead of yours, with a link or two that says &amp;quot;Sponsored by &lt;Your Website Name&gt;&amp;quot;.  An ad network I was trying out, AdBrite, leaves these &amp;quot;full page ads&amp;quot; on by default, though you can turn it off.  When I searched for &amp;quot;AdBrite&amp;quot; and the company that was there in place of my site, I learned about &amp;quot;interstitial ads&amp;quot;.&lt;/p&gt;

&lt;p&gt;Now you know about them, too.  Wow, you&amp;#39;re going to be so filthy rich.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Back to Our Six Figure Goal&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In my case I didn&amp;#39;t start on the road to AdSense wealth from scratch.  I have about 3,400 pages of web content under my belt, so I get to play around.&lt;/p&gt;

&lt;p&gt;One site of mine has 610 pages of blog, and about another 400 pages or so on top of that.  We&amp;#39;re going to use the blog number of 610 pages since that&amp;#39;s where I&amp;#39;m running AdSense.  Over the past ten days AdSense reports 2,461 page impressions, and I&amp;#39;m making $2.38 per 1,000 impressions.  My average for all my sites is $2.80 per 1,000 impressions, so we&amp;#39;ll use that for now.&lt;/p&gt;

&lt;p&gt;Having 2,461 impressions in 10 days means I&amp;#39;m serving up 246.1 impressions per day. There are 610 pages on the blog overall, so that means that each page gets displayed 246.1 / 610 times per day.  Dividing, each page gets displayed .40 times per day.&lt;/p&gt;

&lt;p&gt;We&amp;#39;re going to be rich in no time.  Stay with me.&lt;/p&gt;

&lt;p&gt;We get $2.80 per 1,000 page views.  A page of content gets displayed 2.48 times per day.  Our goal is to reach $100,000 per year.&lt;/p&gt;

&lt;p&gt;OK, $100,000 per year divided by the $2.80 we get per thousand page views means we need to have 35,714 x 1,000 page views per year to make $100,000.  That works out to 35,714,000 page views per year.&lt;/p&gt;

&lt;p&gt;In order to make this work, let&amp;#39;s assume you can write four pages per day, five days per week, on average, and you&amp;#39;re going to start when you&amp;#39;re twenty-one years old.  Fifty-two weeks in a year times twenty posts per week is 1,040 pages per year.  Each page gets viewed .40 times per day, so that means you can generate about 147.25 page views in a year.  Our goal to get to $100,000 in yearly AdSense income is 35,714,000 page views, so let&amp;#39;s see how old we&amp;#39;ll be when we retire.  35,714,000 divided by 147.25 is 245,539, so starting out when you&amp;#39;re twenty-one, you&amp;#39;ll be in a position to earn your six figure AdSense retirement when you&amp;#39;re only 245,518 years old.&lt;/p&gt;

&lt;p&gt;If I were you I&amp;#39;d start typing.&lt;/p&gt;
</description>
				<pubDate>Wed, 26 Mar 2008 15:47:00 -0700</pubDate>
				<link>/how-to-retire-on-a-six-figure-adsense-income</link>
				<guid isPermaLink="true">/how-to-retire-on-a-six-figure-adsense-income</guid>
			</item>
			
		
			
			<item>
				<title>Tips for Setting Writing Goals — A Stack of Twenty</title>
				<description>&lt;p&gt;How are we to write well, and consistently? There are days when writing is simplicity itself, when ideas and connections seem to grow in natural abundance, when we feel the only limitation of human eloquence is our typing speed. Then there are days when we must write through the dense stickiness of our own stupidity.&lt;/p&gt;

&lt;p&gt;This is writing&amp;#39;s horror and its beauty: only your mind sits between your contribution to the world and the void from which it springs.&lt;/p&gt;

&lt;p&gt;Can we trick our minds into performing better? I believe we can.&lt;/p&gt;

&lt;p&gt;I blundered into this Monday knowing I wasn&amp;#39;t wearing my big brain. It&amp;#39;s the week I finally finish up my taxes and get them to my accountant. It&amp;#39;s the week I pay my insurance bill. It&amp;#39;s a week so full of dullness that wearing my small brain is a form of prosaic justice. It&amp;#39;s a week that would put my big brain to sleep.&lt;/p&gt;

&lt;p&gt;Small brain or not, though, I still have to write.&lt;/p&gt;

&lt;p&gt;So this week I&amp;#39;m trying on a new trick to keep my small brain from hurting itself while running with sharpened pencils. The trick is the stack of twenty. Here&amp;#39;s the trick if you want to try it out yourself. Take out twenty file cards, and plan your week into twenty tasks. In my case this worked out to be nineteen cards with either a blog post or online article per card, plus a card for the remaining tax work. Planning out the week took about fifteen minutes.&lt;/p&gt;

&lt;p&gt;The idea is that as you complete a task or article, you put a big checkbox on the card and move it to the done stack. If something unforeseen comes up and you handle it, write a quick card for it with a big check mark and put it in the done pile. If you have any cards left over, you can always recycle them into next week, and if you get through the whole stack, your small brain will delight in its accomplishment.&lt;/p&gt;

&lt;p&gt;All of this is a way to make your small brain feel good about itself. You need this if you&amp;#39;re having a small brain week.&lt;/p&gt;

&lt;p&gt;Your big brain doesn&amp;#39;t need such a simple trick as this, but if you&amp;#39;re anything like me, you can&amp;#39;t always wear your big brain to work.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Related Articles&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.ezinearticles.com/?Six-Tips-to-Improve-Your-Online-Writing&amp;amp;id=1057237&quot;&gt;Six Tips to Improve Your Online Writing&lt;/a&gt; (EZine Article)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.inklit.com/blog/2008/03/06/setting-writing-goals-making-room-for-the-good-stuff/&quot;&gt;Setting Writing Goals, Making Room for the Good Stuff&lt;/a&gt;&lt;/p&gt;
</description>
				<pubDate>Mon, 24 Mar 2008 16:14:04 -0700</pubDate>
				<link>/tips-for-setting-writing-goals-a-stack-of-twenty</link>
				<guid isPermaLink="true">/tips-for-setting-writing-goals-a-stack-of-twenty</guid>
			</item>
			
		
			
			<item>
				<title>How To Get 101 Subscribers to Your New Blog in Thirty Days</title>
				<description>&lt;p&gt;I have a dream.&lt;/p&gt;

&lt;p&gt;I have a dream of getting 101 subscribers to this blog within 30 days.  You can help by &lt;a href=&quot;http://www.inklit.com/blog/feed/&quot;&gt;subscribing now&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m no Martin Luther King or anything, so this is not a big dream, but nevertheless it&amp;#39;s non-trivial.  I have a niche blog that&amp;#39;s almost five years old that doesn&amp;#39;t yet have 101 subscribers.  Getting 101 subscribers to a brand new blog that&amp;#39;s starting with 10 subscribers (YES -- we have reached &lt;strong&gt;double digits&lt;/strong&gt; as of today!) will be a non-trivial accomplishment.  But I think it&amp;#39;s worth shooting for!&lt;/p&gt;

&lt;p&gt;It&amp;#39;s March 10th, 2008, as I write this.  I&amp;#39;ll post it on March 11th.  30 days hath September and so on, so by April 10th, I need to be showing 101 Feedburner Subscribers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why Do You Want More Subscribers?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;No matter what your online writing business model is, you can benefit from having more subscribers.  Especially if selling advertising is part of your business model, a huge subscriber base is an absolute must.  If you&amp;#39;re offering blog ghostwriting or similar services, a blog chock full of subscribers is a work product showing what you can do by way of promoting your client&amp;#39;s business.  If you&amp;#39;re selling information products online, folks who subscribe to blogs are the types of people you want in your target market.  Even niche bloggers may find that having more subscribers will get their articles more attention than they would otherwise, leading to more incoming links and incoming referrals.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;My Brain-Dead Simple Ten-Part Plan&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The eleven part plan I&amp;#39;m using is below.&lt;/p&gt;

&lt;p&gt;If you &lt;a href=&quot;http://www.inklit.com/blog/feed/&quot;&gt;subscribe now&lt;/a&gt;, you&amp;#39;ll get to follow my attempt to reach this goal and you&amp;#39;ll find out if my eleven part plan really works or is all wet.  Either way, though, together we&amp;#39;ll learn techniques for getting more subscribers to our blogs and doing &lt;strong&gt;more business!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ready... set ... go!&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;*&lt;em&gt;Start where you are.
*&lt;/em&gt;I started out with ten subscribers (Hooray -- I only have to get ninety-one more!).  If you don&amp;#39;t have ten subscribers already, it may take you thirty-two days.  For extra credit it&amp;#39;d be neat if I could get to 111 subscribers by April 10th.  That way I&amp;#39;ll know I added 101 to my original ten.  But let&amp;#39;s be clear:  my base goal is 101 by April 10th.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;*&lt;em&gt;Start asking people to subscribe on your blog.
*&lt;/em&gt;Start asking people to subscribe at the end of each blog post.  In a post like this talking about your goals, you could make something of a joke or game out of it asking people to &lt;a href=&quot;http://www.inklit.com/blog/feed/&quot;&gt;please subscribe&lt;/a&gt; at least three times. OK, that&amp;#39;s three.  I don&amp;#39;t want to annoy you with it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Fix up your feed.&lt;/strong&gt;
Burn your feed with &lt;a href=&quot;http://www.feedburner.com/&quot;&gt;Feedburner&lt;/a&gt;, if you haven&amp;#39;t done so already.  Fix up your subscription area and make it prominently visible.  Make sure that people can subscribe via RSS or email.  Free services for offering email RSS subscriptions are available through &lt;a href=&quot;http://www.feedblitz.com/&quot;&gt;Feedblitz&lt;/a&gt; and &lt;a href=&quot;http://www.feedburner.com/&quot;&gt;Feedburner&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;*&lt;em&gt;Put up a FeedBurner subscriber chiclet. *&lt;/em&gt;You want to show how many subscribers you have now.  Don&amp;#39;t worry about those cheesy ten subscribers.  You&amp;#39;ll have 101 in a month.  The past is simply prologue.  Your new subscribers want to see your plan for new subscribers succeed, because if you can do it, so can they!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;*&lt;em&gt;Offer a free ad.  *&lt;/em&gt;Offer an ad for free for a period of time (three months, six months, one year) for the webmaster who gets you the most new subscribers.   A new ad format that&amp;#39;s very popular is the 125 x 125 pixel format.  I&amp;#39;m going to put up a spot on my blog to host four such ads, and use winning one or more free ad as an incentive.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;*&lt;em&gt;If you have other blogs or other social networks, use them.  *&lt;/em&gt;(If you don&amp;#39;t, it may take you 101 days or what have you -- use what you have available).  Ways to use your other blog include writing a post linking to your subscription drive.   On social networks, one think I&amp;#39;m going to try is sending a message out to MyBlogLog Community or the like.  Link to your free ad offer and other posts.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;*&lt;em&gt;Blog about your subscription drive.
*&lt;/em&gt;Every few days you want to tell people about your subscription drive.  Once every 1-3 days seems about right for the first week, then once every 3-7 days for the rest of the period.  You don&amp;#39;t want to overdo it.  Everyone likes public radio, but everybody hates a telethon.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;*&lt;em&gt;Ramp up your social networking.  *&lt;/em&gt;There are hundreds of social networks out there.  You may already be a member of one or more -- and your friends there miss you and haven&amp;#39;t heard from them in awhile.  Don&amp;#39;t let them down.  Tell them what you&amp;#39;re trying to do.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;*&lt;em&gt;Email bloggers about your free add offer.  *&lt;/em&gt;You&amp;#39;ll want to use this suggestion with some care, and realize that top bloggers get lots of requests for links, help, etc.  Be polite in your approach, humble about your current blog traffic, and generous in the length of the ad they can win if they help you.  I&amp;#39;ll post a sample email you can use in a future post.  (Hmm . . . how will you be notified when that post comes out?  If only there were a way to see when new blog posts came out for a given blog...).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;*&lt;em&gt;Ramp up your commenting.  *&lt;/em&gt;Are you meeting new bloggers who might see your ad?  My goal for the period of this promotion is five comments per weekday.  Remember, don&amp;#39;t spam the comments about your program -- your goal in commenting is to participate in other peoples&amp;#39; conversation and get them to stop by your blog.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;*&lt;em&gt;Ramp up your posts to other blogs.  *&lt;/em&gt;Maybe someone&amp;#39;s asked you to do a guest post recently, and you&amp;#39;ve been putting it off?  If their blog is about how to promote a blog or has anything to do with online marketing, maybe now&amp;#39;s the time to go write that guest article!  Make sure to mention your free ad offer.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
				<pubDate>Tue, 11 Mar 2008 08:32:50 -0700</pubDate>
				<link>/eleven-steps-to-get-101-subscribers-to-your-new-blog-in-thirty-days</link>
				<guid isPermaLink="true">/eleven-steps-to-get-101-subscribers-to-your-new-blog-in-thirty-days</guid>
			</item>
			
		
			
			<item>
				<title>Resources for Making Money by Writing Online</title>
				<description>&lt;p&gt;I am starting an article series that will be dedicated to pointing out the online resources that I find most helpful when it comes to the topic of this blog, which is working as a writer online. Because it&amp;#39;s an article series instead of just a collection of links, it will be a little different than a traditional Resources Directory or Blogroll.&lt;/p&gt;

&lt;p&gt;My goal for the resources directory is to put together perhaps 101 articles (or thereabouts), that collectively will point to the best online resources on a variety of topics that relate to making money as an online writer.&lt;/p&gt;

&lt;p&gt;If you know of resources that you feel should be included on the list, please let me know and I will consider adding them in a future article.&lt;/p&gt;
</description>
				<pubDate>Sun, 09 Mar 2008 18:44:28 -0700</pubDate>
				<link>/resources-for-making-money-by-writing-online</link>
				<guid isPermaLink="true">/resources-for-making-money-by-writing-online</guid>
			</item>
			
		
			
			<item>
				<title>Setting Writing Goals — Making Room for the Good Stuff</title>
				<description>&lt;p&gt;Almost as soon as I resolved to write professionally, I realized that I should start setting goals for my writing and tracking my production and progress.&lt;/p&gt;

&lt;p&gt;My need to track my goals and production was not born of self-improvement 101. Instead, this drive to organize my time grew from some minor terrors that had made themselves visitors in my heart, unannounced and certainly unwelcome. Do I have too many projects on my plate? Can I master enough basic skills quickly enough to start making a living? Am I crazy for even trying, or should I just take out some house hunters and scare up an escrow or go back to writing software for someone?&lt;/p&gt;

&lt;p&gt;More than anything else, I was afraid that if I didn&amp;#39;t make explicit room for the fiction work, I would tend to ignore it in favor of work that wasn&amp;#39;t so emotionally loaded with uncertainty and risk. So if you need a reason to set goals and track your progress, feel free to steal my reason. Goal setting and progress tracking are a boring, self-imposed task that you do to make room for the good stuff in your writing (whatever &amp;quot;the good stuff&amp;quot; means to you).&lt;/p&gt;

&lt;p&gt;For those of you who might also want to steal my process as well as my motivation, here&amp;#39;s how I did it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How I Got Started Tracking My Goals&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sunday at Borders I sat down and started writing all my current projects in my journal. For each project, I tried to estimate how much time each one would take. There are several blogs I&amp;#39;m working on, for example, and each of these needed so many posts at so many hours each. Since I&amp;#39;m trying to improve my blog writing while I&amp;#39;m trying to understand the time_ _I spend, and since I have a goal of writing longer posts, I gave myself two hours per blog post. (I know I often bang out shorter works in a half hour, but again, the goal is to go long). Knowing how many posts I want to publish for each blog monthly or weekly, I was able to come up with hours per week per blog.&lt;/p&gt;

&lt;p&gt;At the same time, I&amp;#39;m running another business, so I entered the number of (non-writing) hours I need to devote to that. There&amp;#39;s some overlap here in my case, because I also blog for my business.&lt;/p&gt;

&lt;p&gt;In addition to my current blogging efforts and business, I also wrote down two types of writing that I&amp;#39;m working on writing and selling: short fiction and Private Label Rights articles (including blogging subscription) work. I allocated ten hours per week for each of those categories.&lt;/p&gt;

&lt;p&gt;So when I was done my list of hours and projects looked something like this, with real blog names in place of &amp;quot;blog 1&amp;quot;, etc.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;07 hours blog 1&lt;br&gt;
05 hours blog 2&lt;br&gt;
02 hours blog 3&lt;br&gt;
10 hours fiction work&lt;br&gt;
10 hours PLR work&lt;br&gt;
05 hours existing business&lt;br&gt;
06 hours blog 4        &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;45 hours total per week&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To me, it&amp;#39;s very important to understand that every time you list your goals, you&amp;#39;re working on an experiment for your life that should be short term. Fans of David Allen&amp;#39;s Getting Things Done will recall that one of the most important disciplines he recommends is the weekly review, where you fine tune your list of projects and next actions. I believe a week is an excellent unit of planning, and my goal eventually is to add another ten hour block to the week such as &amp;quot;magazine writing&amp;quot;. It can either replace one of the ten hour blocks that&amp;#39;s there now if an activity doesn&amp;#39;t pan out either emotionally or financially, or I may decide that four blogs is about two or three blogs too many.&lt;/p&gt;

&lt;p&gt;Whether forty-five hours is a realistic work week is another open issue. Sure, it&amp;#39;s less than the fifty I had thought would be my maximum, but in practice even forty-five may be overly aggressive. Let&amp;#39;s face it, the first and most destructive thing that happens to any beautiful written schedule is real life. Sure enough, almost to prove the point, the first thing that happened to me on Monday morning with the beautiful schedule I created on Sunday was an email with a potential for about three days worth of paid interruption.&lt;/p&gt;

&lt;p&gt;That&amp;#39;s fine. Next week I will experiment with my life again.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tracking My Production and Progress&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When Monday rolled around, I shifted the focus from planning the week to tracking a few core details I wanted to track for each of the projects listed above. I quickly tried out a couple of a task-timer style programs downloaded from the Internet. I&amp;#39;m using AllNetic&amp;#39;s Working Time Tracker for now. If it doesn&amp;#39;t work out, I&amp;#39;ll resort to writing down start times and stop times on a pad, since often the simplest solution is best. (The goal is to start working, not to spend the day fiddling with software).&lt;/p&gt;

&lt;p&gt;One other &amp;quot;tracking tool&amp;quot; that I put together in a few seconds was a brain dead simple Excel Spread sheet with the following column headers:&lt;/p&gt;

&lt;p&gt;Article / Post / Story / Task&lt;/p&gt;

&lt;p&gt;Project&lt;/p&gt;

&lt;p&gt;Date&lt;/p&gt;

&lt;p&gt;Words&lt;/p&gt;

&lt;p&gt;Time Spent&lt;/p&gt;

&lt;p&gt;Quality&lt;/p&gt;

&lt;p&gt;The first column is meant to record whatever title I worked on, or it can be a task, in which case it&amp;#39;s just a note reminding me of what I was doing. The second column is the project or blog (from the list above). Date is of course the date the work was done, and time spent is simply the elapsed time for that task that day. Next come the number of words written. Finally, quality is simply a subjective letter grade for the story or work.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Keep It Simple&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Whatever system you set up and use, make sure it&amp;#39;s simple and easy to use. It can be as easy as a diary. Getting organized is not an end in itself, and it should never be so complex that it detracts from the good stuff. The goal of setting goals is to distract from the good stuff, but to give it the time it needs to flower and grow.&lt;/p&gt;
</description>
				<pubDate>Thu, 06 Mar 2008 09:03:46 -0800</pubDate>
				<link>/setting-writing-goals-making-room-for-the-good-stuff</link>
				<guid isPermaLink="true">/setting-writing-goals-making-room-for-the-good-stuff</guid>
			</item>
			
		
			
			<item>
				<title>Missing Geek Found. Search Party Unimpressed.</title>
				<description>&lt;p&gt;Occasional Internet real estate marketing blogger, John Lockwood, who had been missing from his blog for several weeks, was found today at his keyboard. Doctors commented that for someone suffering from exposure, he looked surprisingly well fed.&lt;/p&gt;

&lt;p&gt;The rescue team that was sent out to find Lockwood had little comment on the discovery. Rescue dog handler, Norbert Dimwhistle, had this to say about his dogs&amp;#39; discovery: &amp;quot;I don&amp;#39;t know. Usually when the dogs sniff someone out, they get all excited and bark their heads off. With Lockwood they just curled up nearby and went to sleep. I don&amp;#39;t think he&amp;#39;s all that exciting.&amp;quot;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hi There, John Lockwood Here&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Well, it looks like &amp;quot;The Onion&amp;quot; won&amp;#39;t be hiring any new writers soon.&lt;/p&gt;

&lt;p&gt;January and February were somewhat busy months in real estate, with me working with several buyers of my own -- sometimes productively and sometimes not. So part of the answer to the question of where I&amp;#39;ve been has been that I&amp;#39;ve been selling a house and driving around a lot.&lt;/p&gt;

&lt;p&gt;As soon as things wound down a bit at the end of February, naturally I couldn&amp;#39;t just show up here and work on business interest #2. No, dumb time-management school dropout that I am, at that point I had to stick another iron in the fire, a brand new blog about writing, &lt;a href=&quot;http://www.inklit.com/blog/&quot;&gt;Inklit.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Oh yes, and I almost forgot: while I was missing I also invented the &lt;a href=&quot;http://activerain.com/blogsview/399971/To-Learn-More-Clique&quot;&gt;Real Estate Johnosphere&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As Warren Buffet remarked famously: Diversification is for the ignorant. I plead guilty.&lt;/p&gt;

&lt;p&gt;Now you know why he&amp;#39;s a billionaire and I put search and rescue dogs to sleep.&lt;/p&gt;
</description>
				<pubDate>Tue, 04 Mar 2008 16:56:27 -0800</pubDate>
				<link>/missing-geek-found-search-party-unimpressed</link>
				<guid isPermaLink="true">/missing-geek-found-search-party-unimpressed</guid>
			</item>
			
		
			
			<item>
				<title>PLR Writing Basics</title>
				<description>&lt;p&gt;I began blogging about writing as a career partly to have a journal of my writing work, but even more importantly as a personal exploration into writing markets.&lt;/p&gt;

&lt;p&gt;One of the first new ideas I bumped into was the concept of PLR writing. PLR stands for &amp;quot;Private Label Rights&amp;quot;. PLR articles are written once and then sold to multiple web site owners, each of whom purchases the rights to use the article as is or modify it as needed and then &amp;quot;privately label&amp;quot; the article as their own. As &lt;a href=&quot;http://www.associatedcontent.com/article/68423/understanding_private_label_rights.html&quot;&gt;Courtney Ramirez points out&lt;/a&gt;, PLR articles are commonly sold as filler for Adsense web sites.&lt;/p&gt;

&lt;p&gt;Freelance writer and trainer Angela Booth has also written extensively about PLR writing, including her article on &lt;a href=&quot;http://www.fabwritersezine.com/ezine-issues/article-fortunes-issue-39-29/&quot;&gt;Writing and Selling PLR Content&lt;/a&gt;. Angela&amp;#39;s article does a great job of making the case for PLR content as an first rate business model for an online writing career. She also gets into more detail than Ramirez on the PLR licensing model.&lt;/p&gt;

&lt;p&gt;Of course, not everyone likes PLR. To answer the PLR critics, CatalystBlogger&amp;#39;s Jennifer Williamson wrote a fine article recently entitled &lt;a href=&quot;http://catalystblogger.blogspot.com/2008/02/plr-legitimate-business-model-or.html&quot;&gt;PLR: Legitimate Business Model or Morally Bankrupt&lt;/a&gt;. Jennifer examines some of the controversy among Freelance writers surrounding PLR articles. As a real estate broker in my other life, much of this debate reminds me of the debate around discount brokers. As Jennifer points out, one of the problems with PLR writing is that it&amp;#39;s cheap. So at least part of the backlash against PLR articles stems from a purely financial consideration: people can pay less for them than for custom work.&lt;/p&gt;

&lt;p&gt;At this point in my exploration, my own position is that I&amp;#39;m fairly ambivalent about PLR. On the one hand, the combination of writing SEO-optimized copy together with the opportunity to distribute my work online is a natural fit for my current background as a real estate web site author/webmaster/blogger. On the other hand, at least a part of my motivation for exploring new writing outlets was that I wanted to escape the daily grind of &amp;quot;pimping to the search engines&amp;quot;. That being the case, you&amp;#39;d be hard pressed to find a worse example of &amp;quot;moving in the wrong direction&amp;quot; than becoming a PLR Guru. Just call me Stephen King to the Sploggers. (Or is that Gore Vidal of Viagra?).&lt;/p&gt;

&lt;p&gt;I don&amp;#39;t say PLR&amp;#39;s wrong for everyone. I certainly don&amp;#39;t find fault with those for whom it&amp;#39;s a lucrative living. I&amp;#39;m not even saying it&amp;#39;s wrong for me at this point.&lt;/p&gt;

&lt;p&gt;I find it an interesting addition to the march of business models.&lt;/p&gt;
</description>
				<pubDate>Mon, 03 Mar 2008 16:39:15 -0800</pubDate>
				<link>/plr-writing-basics</link>
				<guid isPermaLink="true">/plr-writing-basics</guid>
			</item>
			
		
			
			<item>
				<title>Am I Writing or Am I Blogging, And What’s The Difference?</title>
				<description>&lt;p&gt;I&amp;#39;d no sooner written my first post here than I began to look for other blogs who had more than one post plus hello world put together.&lt;/p&gt;

&lt;p&gt;There are a lot of them, and it looks like I&amp;#39;m late to the party. That&amp;#39;s all right. I just hope there&amp;#39;s still food.&lt;/p&gt;

&lt;p&gt;There are more &amp;quot;writing blogs&amp;quot; than there are &amp;quot;real estate blogs&amp;quot;, at least according to Google. The difference is approximately twenty-one million to fourteen million. Or make that 3:2 times seven million.&lt;/p&gt;

&lt;p&gt;That&amp;#39;s a lot of activity.&lt;/p&gt;

&lt;p&gt;When I looked around to see who was early to the writing-about-writing party, I realized that I&amp;#39;d stopped writing and started blogging.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What&amp;#39;s The Difference Between Blogging and Other Writing?&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;It&amp;#39;s a Social Activity&lt;/strong&gt;&lt;br&gt;
I look at blogging as a sort of party-drunk edge of writing. Writing by its nature is somewhat solitary, whereas much of blogging always seems to run the risk of devolving into a cocktail party on a good day, or a brawl on a bad one. This is not to say that blogging is not a legitimate writing career path. My own writing career is being sponsored by my blogging revenue.   &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;*&lt;em&gt;It Combines the Role of Author and Publisher&lt;br&gt;
*&lt;/em&gt;One way to look at blogging is that it is a form of sweat-equity self-publishing. As the publisher as well as the writer, you spend a lot of time on sales, promotion, and distribution -- work that a lot of time feels dangerously like &amp;quot;mere socializing&amp;quot;. Much of our activity as bloggers serves the same sales-related function as a book signing or author interview would in traditional publishing.         &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Its Often -- Though Not Always -- of Poor Quality&lt;/strong&gt;&lt;br&gt;
Because blogs are not vetted in any way and needn&amp;#39;t be &amp;quot;sold&amp;quot; to a publisher or editor before they appear, there&amp;#39;s a huge variation in quality among them. I don&amp;#39;t mean to idealize print writing as some sort of uniform quality utopia, but editors, agents and publishers do serve an important function of quality control that simply disappears in an online environment.         &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;*&lt;em&gt;It May Not Even Have a Human Reader In Mind&lt;br&gt;
*&lt;/em&gt;One of the functions of blogging that has fed me quite well in some of my work is establishing my expertise and credibility on a topic not for human consumption, but for computer algorithms -- notably search engines. I suppose that writing pieces meant to promote the author somehow are nothing new, but I can&amp;#39;t think of any historical parallel where a writer sought the approval of a mechanism. This is just plain weird. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;What&amp;#39;s Beyond Blogging?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One of the domain names I considered using for this site promoted the idea that this blog would be about forms of writing that are outside of or beyond mere blogging. In the end I&amp;#39;m quite happy that I didn&amp;#39;t take the blog in that direction, but I am trying to see how well, and to what extent, blogging fits into my overall writing career. I don&amp;#39;t see any need to bite a hand that&amp;#39;s fed me just because other hands beckon.&lt;/p&gt;

&lt;p&gt;To paraphrase an old sixties joke about drugs and reality, above all I hope that blogs are not just a crutch for those who can&amp;#39;t handle fiction. I&amp;#39;m not sure that spending some time working on fiction and continuing to blog are mutually exclusive. I made a fair amount of progress on two stories and discarded a third in about ten hours or so. I see no reason to lock myself in at this stage. On a strictly business level, picking one or two areas to try to master may be far more productive than trying to take on the whole field in a hot week.&lt;/p&gt;

&lt;p&gt;OK, look, let&amp;#39;s start crossing stuff off: no poetry or novels in 2008 unless absolutely necessary.&lt;/p&gt;

&lt;p&gt;There. I feel more focused already.&lt;/p&gt;
</description>
				<pubDate>Sun, 02 Mar 2008 10:34:16 -0800</pubDate>
				<link>/am-i-writing-or-am-i-blogging-and-whats-the-difference</link>
				<guid isPermaLink="true">/am-i-writing-or-am-i-blogging-and-whats-the-difference</guid>
			</item>
			
		
			
			<item>
				<title>Has Your Copyright Been Violated?</title>
				<description>&lt;p&gt;One of the certainties of the Internet is that if you write long enough, some idiot will eventually try to steal your material.&lt;/p&gt;

&lt;p&gt;Remember grade school, where the world was divided into people who did their homework so they&amp;#39;d be able to pass the test, and those who tried to copy the answers?  Well sure enough, the world is still divided that way.&lt;/p&gt;

&lt;p&gt;This morning when I logged into my &lt;a href=&quot;http://www.sacramento-home.com/real-estate-events&quot;&gt;Sacramento Real Estate Blog&lt;/a&gt; I found an incoming link to one of my posts, and the title of the link was a jumbled title based on the original title of the post.  Sure enough, when I went over to check out the post, everything except the title had been copied verbatim from the original post.  Not only had this moron copied my post -- they copied what I consider to have been one of the worst posts I&amp;#39;ve written in several weeks.&lt;/p&gt;

&lt;p&gt;Fortunately, Google has a relatively &lt;a href=&quot;http://www.google.com/blogger_dmca.html&quot;&gt;easy way to respond to copyright violations&lt;/a&gt; on that you find on Blogger blogs (typically with a URL like ImAnIdiotCopyingYourWork.blogspot.com).  I&amp;#39;ve read other bloggers complain that the process takes some time because you have to submit the request by mail or fax, but I just submitted a complaint following the instructions there, and it took no more than about twenty minutes.&lt;/p&gt;
</description>
				<pubDate>Wed, 19 Dec 2007 09:15:33 -0800</pubDate>
				<link>/has-your-copyright-been-violated</link>
				<guid isPermaLink="true">/has-your-copyright-been-violated</guid>
			</item>
			
		
			
			<item>
				<title>Mortgage Broker Blog -- Client Testimonial</title>
				<description>&lt;p&gt;Peter Thompson, author of &lt;a href=&quot;http://www.ptmortgage.com/blog/&quot;&gt;Illinois Mortgage Rates and News&lt;/a&gt;, was kind enough to write testimonial below and send it along over the weekend.  Wow, this is really nice.  I appreciate you putting this together, Pete.  It was a pleasure working with you!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you are even thinking about starting your own blog site, you need to talk with John Lockwood. John helped me with my blog, Illinois Mortgage Rates and News. When I started blogging on Active Rain a couple of months back, I felt I was really on to something. I was new to blogging, but I knew the mortgage market and writing was both a hobby and a compulsion. This seemed like the right fit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;One of the best things about Active Rain is that it is a great resource for information about anything related to real estate, including real estate marketing. I knew nothing about blogging or search engine optimization but I found several experts in the community and read everything I could find to get me up to speed on the ways to make my blog a success. The posts on John’s blog, Elite Properties Sacramento were a real help and he was one of my first subscriptions.&lt;/p&gt;

&lt;p&gt;As I learned more, it seemed that starting my own stand-alone blog was the best way to gain an audience and increase my exposure in my target market. I made a couple of calls to experts I found on Active Rain. One of the calls was to a leading name in the industry. A representative called back and we had a nice conversation. He emphasized how their company trained bloggers by teaching them to blog from the ground up with a several month long course with a set lesson plan. It sounded interesting, but my impression was that they had a one size fits all program, and I wasn’t sure it fit my needs. My other concern was the price. He quoted a number high enough to make me gasp.&lt;/p&gt;

&lt;p&gt;As luck would have it, I came across a post on Active Rain from a Realtor who was thinking of starting her own blog but had no clue on how to start. In the comments section, John said that he was expanding his business into this area. I knew John from reading his blog and I respected his expertise, so I decided to give him a call. We hit it off and I knew right away that he was the right choice.&lt;/p&gt;

&lt;p&gt;My first goal was to get the blog site set up and running, but he offered much more. By researching key words he was able to give me some targets where I had a chance to dominate in my competitive market. He listened to my goals and helped me to devise a strategy for long term success. We talked about ways to promote my blog and build traffic as well as what I needed to do to get ranked higher with the search engines. It was a lot of information, but it was focused on my specific needs.&lt;/p&gt;

&lt;p&gt;John had the technical knowledge to make the most of setting up the site. He helped me pick a Wordpress template that was easy to use and easy to read. He customized the template with my personal info, added widgets, set up contact boxes and a navigation bar that integrated my blog with my web site and optimized the site for search engine traffic. The site looks great, better than I imagined.&lt;/p&gt;

&lt;p&gt;John got me off to a great start. Long term success is up to me, but I don’t know where I would be if I tried to do this on my own. If you are even thinking of starting a new blog you really should give him a call.&lt;/p&gt;
</description>
				<pubDate>Mon, 17 Dec 2007 11:01:22 -0800</pubDate>
				<link>/mortgage-broker-blog-client-testimonial</link>
				<guid isPermaLink="true">/mortgage-broker-blog-client-testimonial</guid>
			</item>
			
		
			
			<item>
				<title>Reductio ad Myspace</title>
				<description>&lt;p&gt;This weekend at the bookstore I browsed through Andrew Keen&amp;#39;s &lt;a href=&quot;http://www.amazon.com/Cult-Amateur-Internet-Killing-Culture/dp/0385520808&quot;&gt;Cult of the Amateur&lt;/a&gt; with a lot of interest.  I also looked into a book that&amp;#39;s probably at the opposite end of the Web 2.0 Hype-o-Meter, &lt;a href=&quot;http://www.amazon.com/Wikinomics-Mass-Collaboration-Changes-Everything/dp/1591841380&quot;&gt;Wikinomics&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Keen argues with some justice that with the huge proliferation of blogs, the Internet has become a write-only Darwinian struggle to see who can filibuster the longest, with everyone yapping our heads off and no one really listening.&lt;/p&gt;

&lt;p&gt;What?&lt;/p&gt;

&lt;p&gt;Wikinomics, on the other hand, left me wondering how I, too, could benefit from this whole massive collaboration thing to become blindingly wealthy and massively collaborated, but I couldn&amp;#39;t come up with anything off the top of my head.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;As they say on Ron Popeil Commercials:  &amp;quot;But wait, there&amp;#39;s more!&amp;quot;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now not only can your blog be one of over &lt;a href=&quot;http://www.blogherald.com/2005/04/14/number-of-blogs-now-exceeds-50-million-worldwide/&quot;&gt;50 million blogs&lt;/a&gt; in the keyboardosphere, now you can be the first on your block to have your own social network, thanks to &lt;a href=&quot;http://www.ning.com&quot;&gt;Ning.com&lt;/a&gt;.  In the words of Ning CEO, Gina Bianchini:&lt;/p&gt;

&lt;p&gt;&amp;quot;Marc and I founded Ning in October 2004 to give everyone the opportunity to create your own social networks for anything.&amp;quot;&lt;/p&gt;

&lt;p&gt;Atta girl, Gina.  That&amp;#39;s just what we needed, social networks for anything!&lt;/p&gt;

&lt;p&gt;And in the true spirit of Web 2.0, I have decided that if I can, of course that means I should, so I am now the proud owner of not just one, but TWO social networks, with me as the one member each!&lt;/p&gt;

&lt;p&gt;That was the whole problem with MySpace, come to think of it -- they let YOU in.  Now we can each have our own MySpace, which for the sake of clarity we can call MyMySpace, to distinguish it from YourMySpace and ThatOtherGuysMySpace.&lt;/p&gt;

&lt;p&gt;No, but seriously, come join me.  We can massively collaborate, at least on a small scale.  Won&amp;#39;t that be cozy?&lt;/p&gt;

&lt;p&gt;The first network I noticed when poking around Ning was the virtual Sangha.  Hey great, I thought, I&amp;#39;m a Buddhist, but it turns out that one&amp;#39;s by invitation only.&lt;/p&gt;

&lt;p&gt;Well, at least I&amp;#39;m not the only anti-social Buddhist with his own social network.&lt;/p&gt;

&lt;p&gt;But I have *&lt;em&gt;two *&lt;/em&gt;of them.  So there.&lt;/p&gt;

&lt;p&gt;After that, I decided to check out the RightHealth Social network.  At the right are some of the forum questions from RightHealth so you can get an idea of the quality of the discourse.  (Click to enlarge).&lt;/p&gt;

&lt;p&gt;I didn&amp;#39;t wait for it to get this bad, it was the first thing I bumped into.&lt;/p&gt;

&lt;p&gt;I wonder if I started a Luddite group if Andrew Keen would join me.&lt;/p&gt;
</description>
				<pubDate>Sun, 04 Nov 2007 08:52:35 -0800</pubDate>
				<link>/reductio-ad-myspace</link>
				<guid isPermaLink="true">/reductio-ad-myspace</guid>
			</item>
			
		
			
			<item>
				<title>Five Favorite Wordpress Plugins</title>
				<description>&lt;p&gt;One of the (many) great things about the Wordpress blogging platform is the huge number of enthusiastic supporters who write third party plugins.  Very often, if Wordpress doesn&amp;#39;t seem to do what you want yet, you can find a Plugin that will modify its behavior so that it will.&lt;/p&gt;

&lt;p&gt;With plugins, you can turn Wordpress from an already great open source blogging platform into a fairly complete content management system.&lt;/p&gt;

&lt;p&gt;The plugins I&amp;#39;ve downloaded have usually worked quite well &amp;quot;out of the box&amp;quot;, though from time to time I&amp;#39;ve done some &amp;quot;minor&amp;quot; tweaks -- minor, that is, from a programmer&amp;#39;s point of view.&lt;/p&gt;

&lt;p&gt;Here then are my candidates for the Top Five Wordpress Plugins.  Naturally your list will depend on what *&lt;em&gt;you *&lt;/em&gt;want your Wordpress installation to do.&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;Spam Karma 2
*&lt;/em&gt;Top Five?  Forget it -- this is the one!  As far as I&amp;#39;m concerned, No Wordpress installation can be considered complete until Dr. Dave&amp;#39;s outstanding &lt;a href=&quot;http://unknowngenius.com/blog/wordpress/spam-karma/&quot;&gt;Spam Karma 2&lt;/a&gt; is installed and activated.  Spam Karma 2 deserves its description as the &amp;quot;ultimate spam killer&amp;quot;.  If you&amp;#39;re suffering from Wordpress comment spam, Wordpress now ships with Askimet, which seemed to work ok when I last tried it, but it always struck me that Spam Karma 2 caught more spam than Askimet.  Moreover, Spam Karma 2 itself has its own plugin system, allowing people to modify and extend how it behaves.&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;Spam Karma 2 Moderate
*&lt;/em&gt;OK, this is not technically a Wordpress plugin, it&amp;#39;s a Spam Karma 2 Plugin (which makes it a Wordpress Plugin Plugin -- yikes!).  The point of the &lt;a href=&quot;http://blog.ftwr.co.uk/wordpress/sk2-moderate-plugin/&quot;&gt;moderate plugin&lt;/a&gt; is that Spam Karma 2 -- perhaps being the &amp;quot;ultimate spam killer&amp;quot; and all -- thinks that you&amp;#39;d never need to moderate your posts, presumably since it got all the spam.  The moderate plugin fixes this by capturing the obvious Spam and then still letting you moderate your posts.  This can be helpful, for example, if you&amp;#39;re getting a lot of people stopping by for the sake of arguing with you, which can happen from time to time.  (See the CollegeHumor parody on &lt;a href=&quot;http://www.collegehumor.com/video:1771556&quot;&gt;Blog Commenters&lt;/a&gt;).  As a special bonus, if you scroll down on the &lt;a href=&quot;http://blog.ftwr.co.uk/wordpress/sk2-moderate-plugin/&quot;&gt;moderate plugin&lt;/a&gt; you&amp;#39;ll see that I sent it&amp;#39;s author, Peter Westwood, a fix for a minor issue I discovered with the plugin.  This proves that even real estate brokers can make good contributions to Open Source projects if they used to be programmers!&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;Page Links To
*&lt;/em&gt;One of the neat things about Wordpress is that you can use it not just to blog, but to manage web site pages that are not chronological.  In other words, you can use Wordpress as a full-fledged content management system -- which is a fancy way of saying it&amp;#39;s an easy tool for creating or changing the pages on your web site.  Many Wordpress themes support adding pages, so when you add a page to Wordpress, you automatically get a link to that page added on your menu.  But what about the case where there&amp;#39;s already a page somewhere that you want to link to.  Maybe it&amp;#39;s part of your IDX system, for example your MLS listing search page that&amp;#39;s maintained by another company.  Now what?  The &lt;a href=&quot;http://txfx.net/code/wordpress/page-links-to/comment-page-4/&quot;&gt;Page Links To Plugin&lt;/a&gt; let&amp;#39;s you add some code to a sort of &amp;quot;dummy&amp;quot; page, which in turn tells the navigation system to link not to the page, but to whatever web address you tell it that the (ta da!) &amp;quot;page links to&amp;quot;.&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;Page Category Plus
*&lt;/em&gt;I recently discovered Yellow Swordfish&amp;#39;s &lt;a href=&quot;http://www.stuff.yellowswordfish.com/page-category-plus/&quot;&gt;Page Category Plus&lt;/a&gt;, and installed it immediately because it struck me that by using it I could set up the page navigation at the left.  Page Category Plus lets your pages have categories just like your posts do, so that using it, you can set up left hand navigation for all your pages.  Being a programmer, this was not a big deal for me personally, since the old non-Wordpress way of tweaking the navigation bar (put it in a file and then just re-edit the file and FTP it up to the site) has always worked for me.  What Page Category Plus allows me to do is create the very same look as I could achieve manually but have it all be part of the Wordpress page system.  This means that custom web site clients could update their own pages themselves if they wish.&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;Better Feed
*&lt;/em&gt;PlanetOzh&amp;#39;s plugin, &lt;a href=&quot;http://planetozh.com/blog/my-projects/wordpress-plugin-better-feed-rss/&quot;&gt;BetterFeed&lt;/a&gt;, allows you to automatically make some neat changes to your RSS feed.  Why would you care about what&amp;#39;s in your RSS feed?  Well, for one reason, your RSS feed is what your subscribers see.   So let&amp;#39;s say want to offer someone an incentive for subscribing, an idea I&amp;#39;m &lt;a href=&quot;http://www.sacramento-home.com/real-estate-events/subscribe.php&quot;&gt;testing out&lt;/a&gt; on my Sacramento Blog.  I&amp;#39;m using PlanetOzh&amp;#39;s plugin to add some links to the Subscriber-only content directly into my feed.  (Please note that you don&amp;#39;t want to add anything really secret this way, since chances are pretty good your feed is available to non-subscribers as well -- that&amp;#39;s how people turn into subscribers is by accessing your feed.  But in the case of discount coupons and the like, if someone thinks they found a &amp;quot;forbidden freebie&amp;quot;, that&amp;#39;s not necessarily a bad thing.&lt;/p&gt;
</description>
				<pubDate>Mon, 29 Oct 2007 10:03:40 -0700</pubDate>
				<link>/five-favorite-wordpress-plugins</link>
				<guid isPermaLink="true">/five-favorite-wordpress-plugins</guid>
			</item>
			
		
			
			<item>
				<title>Farewell, Search Engine Optimization, We Hardly Knew Ye</title>
				<description>&lt;p&gt;Toprank blog had a short but intriguing essay recently discussing predictions about the &lt;a href=&quot;http://toprank.blogspot.com/2006/09/seo-dies-slow-death.html&quot;&gt;Death of SEO&lt;/a&gt; within the next five years or so.  To me, this is one of those articles that is important not because of the answers it provides but because of the questions it raises.&lt;/p&gt;

&lt;p&gt;On the one hand, I do agree with the author that Search Engine Optimization is getting harder and harder to do.  I say this with some confidence because, over time, I&amp;#39;ve found that the effort that I need to expend to promote a site to top place has grown over time from something I would consider child&amp;#39;s play to a sort of full time Herculean task that may or may not produce results.&lt;/p&gt;

&lt;p&gt;So, indeed, to the extent it becomes more difficult, I&amp;#39;m sure that over time SEO failure stories will become more prevalent than the success stories, and that won&amp;#39;t be good for SEO as an enterprise.&lt;/p&gt;

&lt;p&gt;I must admit, however, that the author loses me later on in the article when he talks about building traffic through social media becoming more effective.  Although in a &lt;a href=&quot;http://toprank.blogspot.com/2006/09/5-website-traffic-alternatives-to.html&quot;&gt;later article&lt;/a&gt; the author does go on to give specifics as to how this might work, I do feel like there&amp;#39;s a little bit of the ubiquitous &amp;quot;If you blog it they will come&amp;quot; hocus pocus going on.  To me, there&amp;#39;s nothing more effective than the following scenario:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;User is looking for a solution to a problem, and types a search in a search engine.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;User finds results that match what she&amp;#39;s looking for, and clicks through to a web site.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The web site looks like a fit for what she&amp;#39;s trying to do, and offers more information.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Phone rings.  Start selling.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are probably cases where one can sell effectively through the social network of fellow bloggers, but it all depends on what you&amp;#39;re selling, I think.  In the case of real estate blogging services, the people reading your blog are also your likely buyers.  My friend &lt;a href=&quot;http://www.realestatetomato.typepad.com/&quot;&gt;Jim Cronin&lt;/a&gt; is doing a brisk business capitalizing on this.  But in the case of real estate blogs, on the other hand, I&amp;#39;ve found that most of my readers are either fellow Realtors® or folks who want to take pot shots at us.  So there&amp;#39;s no direct correlation between blogging and business -- the &amp;quot;social network&amp;quot; I&amp;#39;m targetting here starts with a &amp;quot;G&amp;quot; and rhymes with frugal.&lt;/p&gt;

&lt;p&gt;What I&amp;#39;ve found, however, is that this is only working for me on sites with a long history already, so for me, &amp;quot;search engines versus social networks&amp;quot; not is not a case of either/or, it&amp;#39;s a case of one of those hands washing the other.&lt;/p&gt;
</description>
				<pubDate>Sat, 14 Oct 2006 23:49:45 -0700</pubDate>
				<link>/farewell-search-engine-optimization-we-hardly-knew-ye</link>
				<guid isPermaLink="true">/farewell-search-engine-optimization-we-hardly-knew-ye</guid>
			</item>
			
		
			
			<item>
				<title>Concentration First, Then Mindfulness, Then Adsense</title>
				<description>&lt;p&gt;I have a goal for this web site.  It&amp;#39;s an important goal, but I&amp;#39;m very much in the beginning phases of implementing it.  The goal for this web site is to be about something.&lt;/p&gt;

&lt;p&gt;That&amp;#39;s not too much to ask, is it?&lt;/p&gt;

&lt;p&gt;It used to be this site was about software, and it was a good place to try out new web development techniques.  So I&amp;#39;d rewrite it endlessly.  In the same way, neolithic web developers would use the same wall on the same cave in France, and whenever they wanted to paint a new buffalo they&amp;#39;d just paint over the old buffalo.  That&amp;#39;s why if you actually start clicking around here you&amp;#39;ll find the remnants of past mental civilizations, old articles on Assembly Language, even.&lt;/p&gt;

&lt;p&gt;Buffalos.&lt;/p&gt;

&lt;p&gt;Today the site might be described charitably as an eclectic brew of intellectual musings, or uncharitably as drive by victim of its author&amp;#39;s mid life crisis.  But I don&amp;#39;t want to leave it at that.  I want this site to be about something.&lt;/p&gt;

&lt;p&gt;For one thing, I hate to give up this site&amp;#39;s modest but established traffic.  There are links here, and page rank.  It&amp;#39;s the postunmodern equivalent of having one paleolithic dummy saying to one another, &amp;quot;Hey Og, I know where there&amp;#39;s a bunch of pictures of buffaloes.  Want to see it?&amp;quot;&lt;/p&gt;

&lt;p&gt;And as we all know, Og famously replied:  &amp;quot;What&amp;#39;s a picture?&amp;quot;&lt;/p&gt;

&lt;p&gt;But what if the artist, Og Monet as it were, gets tired of painting buffaloes?  Then you&amp;#39;ve got this neatly trampled dirt leading to the buffalo gallery, and some dispirited former artist scribbling to-do lists where the deer and the antelope played.&lt;/p&gt;

&lt;p&gt;While I&amp;#39;m waiting for this site to be about something, I&amp;#39;ll link to some more Buddhist pals, and maybe it&amp;#39;ll end up being about that.&lt;/p&gt;

&lt;p&gt;When it&amp;#39;s more earnestly about something, you&amp;#39;ll be the first to know.&lt;/p&gt;
</description>
				<pubDate>Sat, 16 Sep 2006 08:27:49 -0700</pubDate>
				<link>/concentration-first-then-mindfulness-then-adsense</link>
				<guid isPermaLink="true">/concentration-first-then-mindfulness-then-adsense</guid>
			</item>
			
		
			
			<item>
				<title>The Power of Intention</title>
				<description>&lt;p&gt;Not.&lt;/p&gt;

&lt;p&gt;Today I was reading this fellow, Steve Pavlina, who&amp;#39;s of interest to me because he claims to make great money off Google Adsense.   I&amp;#39;m happy for him in a general way, but I do like to see folks following ideas that make sense to me, and a lot of new age stuff just doesn&amp;#39;t.&lt;/p&gt;

&lt;p&gt;Anyway, what I happened across of Steve&amp;#39;s was his &lt;a href=&quot;http://www.stevepavlina.com/million-dollar-experiment.htm&quot;&gt;Million Dollar Experiment&lt;/a&gt;, which is an expriement in the Voodoo-like power of intention.  This is something that Napoleon Hill would have understood quite well.  Napoeleon Hill, you&amp;#39;ll recall, is the author of &amp;quot;Think and Grow Rich&amp;quot;.&lt;/p&gt;

&lt;p&gt;Here&amp;#39;s a fairly consistent formula for success:  tell people that acquiring wealth is easy, and they will pay you handsomely.&lt;/p&gt;

&lt;p&gt;In a nutshell, the idea behind intention is, you make a decision with full faith and confidence, and this somehow causes the wonderful thing you decided on to happen in your life:  in this case, a million bucks.   As Napoleon Hill put it more concisely:  &amp;quot;Think and grow rich.&amp;quot;&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s look at the results of Steve&amp;#39;s experiement. As of today Steve boasts the proud headline:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Total Manifested = $1,780,008.97&lt;br&gt;
2725 Public Participants&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Wow, $1.7 million, pretty impressive, right?&lt;/p&gt;

&lt;p&gt;The first thing I wanted to know is:  OK, how successful have these 2725 public participants been in attracting a million bucks into their lives?  Let&amp;#39;s try some fourth grade math to see if we can solve this awesome intellectual riddle of our day:  dividing, we learn that each participant has made$653.21 so far.  Wow, that&amp;#39;s pretty good.  Most people wouldn&amp;#39;t mind if you handed them a check for that amount.  Of course, for a some professionals that&amp;#39;s a days work or less, and even if you&amp;#39;re unlucky enough to be working minimum wage, you should be able to make that much in about three weeks.&lt;/p&gt;

&lt;p&gt;Now let&amp;#39;s see how that stacks up to the intention people had, which was to have a million dollars.  Again with the fourth grade math:  653.21 / 1,000,000 equals .00065321.  OK, maybe we need to get to seventh or ninth grade in our mathematics to know that we have to shift the decimal point two places to express that as a percentage, but let&amp;#39;s do that to see how successful people have been with this program, where 100% successful means everyone got a million bucks, and 0% successful means everyone got nothing.  OK, the answer is:&lt;/p&gt;

&lt;p&gt;Steve Pavlina&amp;#39;s program for attracting wealth into your life is &lt;strong&gt;0.065321%&lt;/strong&gt; successful.  Isn&amp;#39;t that amazing?  Be sure to contribute something to his web site.  If you should happen to find yourself unlucky enough in life to trip and fall from a high place, you might try intending to fly.  But I hope you&amp;#39;ll just watch your step.&lt;/p&gt;
</description>
				<pubDate>Thu, 31 Aug 2006 13:53:02 -0700</pubDate>
				<link>/the-power-of-intention-2</link>
				<guid isPermaLink="true">/the-power-of-intention-2</guid>
			</item>
			
		
			
			<item>
				<title>Buddhism and Rationality</title>
				<description>&lt;p&gt;Today I was thinking about The Words of My Perfect Teacher, the Patrul Rinpoche book I&amp;#39;ve been reading.  It&amp;#39;s such a fun book, so attractive and bright.  Yet at the same time, it&amp;#39;s one of the most &amp;quot;relgious&amp;quot; Buddhist books I&amp;#39;ve ever read.&lt;/p&gt;

&lt;p&gt;Make no mistake, Buddhism is a religion.  (Duh).  But I come to it from an ex-Catholic, and (most recently) an atheist background.&lt;/p&gt;

&lt;p&gt;So when I say that Patrul Rinpoche&amp;#39;s book is religious, yes, I suppose that is a criticism.  There&amp;#39;s hellfire and brimstone there.   Indeed, there are some of the best hellfire and brimstone descriptions that one is likely to read outside of perhaps Dante.  And there&amp;#39;s plenty of emphasis on obedience and faith.  Yet the book doesn&amp;#39;t put me off much.  The whole religion doesn&amp;#39;t put me off much, which is a fine thing for an (ex?-) atheist to say.&lt;/p&gt;

&lt;p&gt;It seems to me that Buddhism is a much better religiion for an atheist than some of the others that are kicking around, because its practical emphasis on the effects of karmic action doesn&amp;#39;t necessarily need multiple lifetimes to make sense.  Buddhism stresses the natural wish of all beings to be happy, and the natural good effects that flow from compassion, kindness, and other forms of &amp;quot;right action&amp;quot;.&lt;/p&gt;

&lt;p&gt;To be sure, the same good and evil problem crops up as elsewhere, and at that point you need some sleight of hand to explain how an evil guy can become rich, for example, or how a good person can lose a child: and by sleight of hand read &amp;quot;multiple lifetimes.&amp;quot;  But if you take Buddhism and cut away the parts an atheist wouldn&amp;#39;t like, you&amp;#39;re still left with some tasty bits: an entire secular recipe for happiness.&lt;/p&gt;
</description>
				<pubDate>Fri, 25 Aug 2006 13:30:17 -0700</pubDate>
				<link>/buddhism-and-rationality</link>
				<guid isPermaLink="true">/buddhism-and-rationality</guid>
			</item>
			
		
			
			<item>
				<title>Categorize This</title>
				<description>&lt;p&gt;Looking in Wordpress on the self-imposed categories I can choose from, &amp;quot;Random Particles&amp;quot; makes perfect sense for this one.   If I&amp;#39;ve understood what this post is about by the end of it, I&amp;#39;ll be happy, since at present I certainly don&amp;#39;t.  It&amp;#39;s an attempt to pull some cohesiveness from multiple disparate mental threads, an imposition of some sort of order into what is essentially cohesive and chaotic.&lt;/p&gt;

&lt;p&gt;On the one hand it&amp;#39;s about software battles.  My LeadReply project is going well, suffering only from distractions like the one that prompted this post.  But the spec that&amp;#39;s a scant three weeks old and it&amp;#39;s emphasis on providing the market some sort of .NET demonstration is already feeling outdated, like John Lockwood 1.0.  But that&amp;#39;s the platform, after all, and if Ruby on Rails is as cool as touted, I can always take whatever year I put into LeadReply and redo it in a month if that&amp;#39;s what I feel like doing.&lt;/p&gt;

&lt;p&gt;And in part it&amp;#39;s about the distractions from this project.  I&amp;#39;m doing some major reworking of my Oakland site -- and probably will do so here as well, to get it ready to &amp;quot;monetize&amp;quot; it.  What a concept.  One major ParticleWave thread from the beginning has been learning about making money on the Internet.  Now that I&amp;#39;ve finally actually done that through some successful real estate sites, I envision being able to do more of it for some of my less productive &amp;quot;Internet Properties&amp;quot;.&lt;/p&gt;

&lt;p&gt;In part it has nothing to do with any of this business of busy-ness, but about the wonderful Dharma of Patrul Rinpoche, who I&amp;#39;m reading now.  One of the central truths that emerges from the book is the importance of meditating on impermanence.  That is to say, neither ParticleWave nor my other sites are unlikely to survive into the next century, and it&amp;#39;s certain that &lt;em&gt;I&lt;/em&gt; won&amp;#39;t survive into the next century.  Nor is it even guaranteed I&amp;#39;ll make it until five o&amp;#39;clock.&lt;/p&gt;

&lt;p&gt;Some motivational cat -- Richard Robbins?  someone else? -- posed the rhetorical question, &amp;quot;What would you do if you knew you couldn&amp;#39;t fail?&amp;quot;  Buddhism a la Rinpoche stands the question on its head, yet with an even more liberating result:  &amp;quot;What will you do now that you are certain to fail (die)?&amp;quot;&lt;/p&gt;

&lt;p&gt;With the vastness of suffering and death, how can we be anything but kind?&lt;/p&gt;
</description>
				<pubDate>Wed, 23 Aug 2006 13:33:20 -0700</pubDate>
				<link>/categorize-this</link>
				<guid isPermaLink="true">/categorize-this</guid>
			</item>
			
		
			
			<item>
				<title>Contract Firms, Two Car Funerals, and Quality Assurance</title>
				<description>&lt;p&gt;Last Thursday, the manager on the contract I was working for called me in to his office to let me know he was paying a lot more for me to the contract firm I was working under than he thought he was.&lt;/p&gt;

&lt;p&gt;This was a conversation that was destined to go poorly.   In fact, it was pretty much downhill from the point where he told me he could get two programmers for what I was making.&lt;/p&gt;

&lt;p&gt;And here I thought my rates were pretty reasonable, at market or at worst only about 10% above.  And of course they were, but it turns out I was only making 52% of what the contract firm was billing for me.&lt;/p&gt;

&lt;p&gt;I wonder what languages the two programmers who replace me will speak.  Probably Elbonian.&lt;/p&gt;

&lt;p&gt;Anyway, the upshot is that on Friday I decided that I wanted to work on LeadReply -- my neglected pet project -- for free more than I wanted a 25% pay cut.  So that&amp;#39;s what I&amp;#39;m doing, and it&amp;#39;s well underway.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s an interesting project, in that it&amp;#39;s completely underfunded.  I have scope to work on it for maybe two months, and certainly to do everything I want to do is four months or so of work at minimum.&lt;/p&gt;

&lt;p&gt;Today I was working on the classes that will parse the leads when they come in.  There&amp;#39;s no rocket science there, just a lot of looking at text emails of various types and pulling strings out.  I was almost done the parsing code for most of the types I needed to handle on the first day, when it occurred to me that I was using something of a brute force approach, and needed to do some easy refactoring to make the code less fat and more maintainable.&lt;/p&gt;

&lt;p&gt;I hated to bite the bullet and do this, since string parsing code is so ad hoc and yet so menial that it&amp;#39;s always little fun.  But then I told myself something that was destined to be put on this blog.  I thought, &amp;quot;You know, you might as well do this job right, since after all you&amp;#39;re not getting paid for it.&amp;quot;&lt;/p&gt;

&lt;p&gt;That&amp;#39;s how I also do the jobs I&amp;#39;m paid for, of course -- but in that case where&amp;#39;s the joke?&lt;/p&gt;
</description>
				<pubDate>Thu, 10 Aug 2006 13:16:07 -0700</pubDate>
				<link>/contract-firms-two-car-funerals-and-quality-assurance</link>
				<guid isPermaLink="true">/contract-firms-two-car-funerals-and-quality-assurance</guid>
			</item>
			
		
			
			<item>
				<title>Subversion for Windows, etc.</title>
				<description>&lt;p&gt;Well, it&amp;#39;s Saturday morning, and what better time to extend one&amp;#39;s programming skills.  Get 2/3 of a night&amp;#39;s sleep on Friday night, and wake up before the sun to write some Transact SQL for the realcrm project I&amp;#39;m working on, and along the way go install and start using &lt;a href=&quot;http://subversion.tigris.org/servlets/ProjectDocumentList?folderID=91&quot;&gt;Subversion for Windows&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now that was just a pleasure.  Install the thing, restart 4NT, read for 10 to 20 minutes, and hey, I&amp;#39;m checking things out and committing and gosh knows what.  The only thing remotely like a hickup was the error message that I needed to set $SVN_EDITOR, so I added that to my 4NT startup batch file and away I went.  Just what I wanted, version control for use on my personal products that runs fine from the command line and costs what I wanted to pay for version control for my personal projects, i.e., nothing.  Of course, if you must use a GUI instead of a command prompt, and if talk of 4NT has you scratching your head, then check out &lt;a href=&quot;http://tortoisesvn.tigris.org/&quot;&gt;Tortoise SVN&lt;/a&gt;, which integrates SVN into Windows Exploder.  But don&amp;#39;t ask me whether that part works or not.&lt;/p&gt;

&lt;p&gt;[C:]  Real men use the command prompt.&lt;/p&gt;

&lt;p&gt;&lt;/geek&gt;&lt;/p&gt;

&lt;p&gt;A bit later, I&amp;#39;m going to go into my realcrm project and &lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;lr=&amp;amp;q=Frozzled+the+sub+space+winch&amp;amp;btnG=Search&quot;&gt;Frozzle the Sub Space Winch&lt;/a&gt;.  I&amp;#39;ve been thinking that it needed a good Frozzling -- just been waiting to have a 32-bit left handed frozzler to do it.&lt;/p&gt;

&lt;p&gt;Maybe I should have gone for 3/3 of a night&amp;#39;s sleep.&lt;/p&gt;
</description>
				<pubDate>Sat, 29 Jul 2006 05:44:47 -0700</pubDate>
				<link>/subversion-for-windows-etc</link>
				<guid isPermaLink="true">/subversion-for-windows-etc</guid>
			</item>
			
		
			
			<item>
				<title>Great SQL Server Site</title>
				<description>&lt;p&gt;I was just doing a bit of SQL Server hacking this evening to brush up my skills in that area, and I happened across this outstanding &lt;a href=&quot;http://www.sqlteam.com/&quot;&gt;SQL Server Site&lt;/a&gt; that I thought I&amp;#39;d mention.&lt;/p&gt;

&lt;p&gt;Suddenly I&amp;#39;m jonesing for yet another web site host, where I can play around with some .NET and SQL server application development.  Meantime, the real estate sites are split between two separate hosts already, so I&amp;#39;m a bit hesitant in that regard, but at least one of the SQL Team authors gave &lt;a href=&quot;http://www.orcsweb.com/&quot;&gt;Orcs Web&lt;/a&gt; a fairly glowing writeup.&lt;/p&gt;
</description>
				<pubDate>Fri, 14 Jul 2006 22:57:44 -0700</pubDate>
				<link>/great-sql-server-site</link>
				<guid isPermaLink="true">/great-sql-server-site</guid>
			</item>
			
		
			
			<item>
				<title>ICollection, IEqualityComparer, IComparable Examples</title>
				<description>&lt;p&gt;`&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using NUnit.Framework;
using NUnit.Framework.Tests;
using System.Threading;

namespace ExamSamples.Bullet1
{
    [TestFixture]
    public class NewBullet1Tests
    {
        [Test]
        public void TestICollection()
        {
            ArrayList al = new ArrayList();
            al.Add(&amp;quot;Something&amp;quot;);
            al.Add(&amp;quot;Something Else&amp;quot;);

            // ArrayList implements ICollection
            ICollection col = al as ICollection;
            Assert.IsNotNull(col);

            // Iterate in thread safe way using
        // IColleciton.SyncRoot
            // -- just an example in our case
            try
            {
                Monitor.Enter(col.SyncRoot);
                foreach (String item in al)
                    Assert.AreNotEqual(item, String.Empty);
                // This failed.  ArrayList is not thread safe
                // Assert.IsTrue(col.IsSynchronized);
            }
            finally
            {
                Monitor.Exit(col.SyncRoot);
            }

            Assert.AreEqual(col.Count, 2);
            Assert.IsFalse(col.IsSynchronized);
        }

        [Test]
        public void TestIComparable()
        {
            ArrayList al = new ArrayList();
            al.Add(&amp;quot;Something&amp;quot;);
            al.Add(&amp;quot;Something Else&amp;quot;);

            // No, IComparer is used on objects in collections,
            // not collections
            IComparer ic = al as IComparer;
            Assert.IsNull(ic);

            IComparable icomparable = al as IComparable;
            Assert.IsNull(icomparable);

            // Sort some fish (see fish implementation below)
            SortedList sl = new SortedList();

            // Insert in nonsorted order
            sl.Add(new Fish(&amp;quot;Fancy Goldfish&amp;quot;,
                Fish.Finsize.medium), null);
            sl.Add(new Fish(&amp;quot;Angelfish&amp;quot;,
                Fish.Finsize.large), null);
            sl.Add(new Fish(&amp;quot;Glassfish&amp;quot;,
                Fish.Finsize.small), null);

            // Keys are now in sorted order
            Fish f = (Fish)sl.GetKey(0);
            Assert.IsTrue(f.FinSize == Fish.Finsize.small);

            f = (Fish)sl.GetKey(2);
            Assert.IsTrue(f.FinSize == Fish.Finsize.large);
        }

        [Test]
        public void TestIEqualityComparer()
        {
            Cookie c1 = new Cookie();

            Cookie c2 = new Cookie();
            Cookie c3 = new Cookie();

            c1.Name = &amp;quot;Keebler&amp;quot;;
            c1.HasChips = true;

            c2.Name = &amp;quot;Swanson&amp;quot;;
            c2.HasChips = true;

            c3.Name = &amp;quot;Keebler&amp;quot;;
            c3.HasChips = false;

            // We&amp;#39;ve overriden Object.Equals as well,
            // so this succceeds
            Assert.AreEqual(c1, c3);

            // Here&amp;#39;s the IEqualityComparer version
            Assert.IsTrue(c1.Equals(c1, c3));
        }
    }

    public class Fish : IComparer, IComparable
    {
        public enum Finsize { small, medium, large };

        private String _name;

        private Finsize _finsize;

        public Finsize FinSize
        {
            get
            {
                return _finsize;
            }
        }


        public Fish(String name, Finsize size)
        {
            _name = name;
            _finsize = size;
        }


        #region IComparer Members
        public int Compare(object x, object y)
        {
            if (x == null ||
        ((Fish)x)._finsize &amp;lt; ((Fish)y)._finsize)
                return -1;

            if (y == null ||
        ((Fish)y)._finsize &amp;lt; ((Fish)x)._finsize)
                return 1;

            return 0;
        }
        #endregion

        #region IComparable Members

        public int CompareTo(object obj)
        {
            // This sorts in ascending order
        // -- small fins first in our case.
            return Compare(this, obj);
        }

        #endregion
    }

    public class Cookie : IEqualityComparer
    {
        private String _name;
        private Boolean _hasChocolateChips;

        public String Name
        {
            get
            {
                return _name;
            }
            set
            {
                _name = value;
            }
        }

        public Boolean HasChips
        {
            get
            {
                return _hasChocolateChips;
            }
            set
            {
                _hasChocolateChips = value;
            }
        }


        // Needed for our test to pass. Probably not for a
    // hashtable.
        // Object.Equals here
        public override bool Equals(object obj)
        {
            return Equals(this, obj);
        }

        // also therefore need to override Object.GetHashCode
        public override int GetHashCode()
        {
            return GetHashCode(this);
        }

        #region IEqualityComparer Members
        public new bool Equals(Object x, Object y)
        {
            Cookie cx = x as Cookie;
            Cookie cy = y as Cookie;
            return (GetHashCode(cx) == cy.GetHashCode(cy));
        }


        public int GetHashCode(object obj)
        {
            Cookie c = obj as Cookie;
            // Easy -- defer to one of our strings
        // to hash by name of cookie.
            return (c.Name.GetHashCode());
        }
        #endregion
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;`&lt;/p&gt;
</description>
				<pubDate>Sat, 08 Jul 2006 18:02:52 -0700</pubDate>
				<link>/icollection-iequalitycomparer-icomparer-examples</link>
				<guid isPermaLink="true">/icollection-iequalitycomparer-icomparer-examples</guid>
			</item>
			
		
			
			<item>
				<title>When is a test not a test.</title>
				<description>&lt;p&gt;When it&amp;#39;s a classroom!&lt;/p&gt;

&lt;p&gt;OK, I admit it, I&amp;#39;m being obtuse.  As programmers sometimes say to being caught in the act of being obtuse, &amp;quot;Why Do You Think They Call It &amp;#39;Code&amp;#39;?&amp;quot;&lt;/p&gt;

&lt;p&gt;I often write about JUnit tests, and and one could say that I was able to parlay my current contract based on my experiences with test first design, since the client in this case was interested in someone experienced with Xtreme Programming, and test first design and development is one of XPs cornerstone processes.&lt;/p&gt;

&lt;p&gt;And indeed, at work it wasn&amp;#39;t long before we had an NUnit test suite going -- I&amp;#39;ve been plugging my way through our new database test suite for a few days now.  The coolest thing (in my opinion) to happen to unit testing in the time since I first used JUnit is automatic test composition.  Back in the JUnit days, you had to create (and -- worse -- you had to maintain) a TestSuite.  In NUnit, there&amp;#39;s no such restriction, simply mark the test classes and methods you want with the appropriate [TestFixture] and [Test] attributes, respectively, and you&amp;#39;re off and running.  We&amp;#39;re using Namespaces to organize our tests in a visually appealing and logical way.&lt;/p&gt;

&lt;p&gt;Today when I got Visual Studio installed, it also occured to me that NUnit is an ideal &amp;quot;snippet viewer&amp;quot; sort of an application, the kind of thing that&amp;#39;s ideal for organizing and writing code to learn new things and excercise unfamiliar classes -- which of course is just the sort of thing if you&amp;#39;re preparing for a certification exam.  So a test (in the software sense) is not a test when it&amp;#39;s a classroom to help you prepare for a test (in the academic sense).&lt;/p&gt;

&lt;p&gt;It&amp;#39;s all good.&lt;/p&gt;

&lt;p&gt;So I&amp;#39;m going to work in that way for awhile, developing my sample &amp;quot;apps&amp;quot; (i.e., learning exercises) in NUnit, and perhaps I&amp;#39;ll publish them up here for what it&amp;#39;s worth.&lt;/p&gt;
</description>
				<pubDate>Sat, 01 Jul 2006 18:24:04 -0700</pubDate>
				<link>/when-is-a-test-not-a-test</link>
				<guid isPermaLink="true">/when-is-a-test-not-a-test</guid>
			</item>
			
		
			
			<item>
				<title>Using the Wordpress Code Markup Plugin</title>
				<description>&lt;p&gt;Well, I just found Bennet&amp;#39;s excellent &lt;a href=&quot;http://www.thunderguy.com/semicolon/wordpress/code-markup-wordpress-plugin/&quot;&gt;Code Markup Plugin&lt;/a&gt;, and with it, I was able to pretty quickly fix the post about C Sharp Verbatim Strings.&lt;/p&gt;

&lt;p&gt;I knew some smart guy would have written that, and sure enough, he did.&lt;/p&gt;

&lt;p&gt;With very little extra work, I was able to get some cool formatting going.&lt;/p&gt;

&lt;h2&gt;Cool Formatting&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;code class=&amp;quot;code&amp;quot; allow=&amp;quot;none&amp;quot;&amp;gt;
using System;
using System.Text;

public class Hello
{

    public static void Main()
    {
    String verbatim =

@&amp;quot;This is a
verbatim string, and it can go
on and on, using &amp;quot;&amp;quot;quote&amp;quot;&amp;quot; characters
etc but everything else
is not escaped, like tab characters, \t
and so forth.&amp;quot;;

    System.Console.Write(verbatim);
    }
}
&amp;lt;/code&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
				<pubDate>Sat, 01 Jul 2006 17:41:03 -0700</pubDate>
				<link>/second-crack-at-verbatim-strings-w-wordpress-code-markup-plugin</link>
				<guid isPermaLink="true">/second-crack-at-verbatim-strings-w-wordpress-code-markup-plugin</guid>
			</item>
			
		
			
			<item>
				<title>Visual Studio Arrived</title>
				<description>&lt;p&gt;Well, my copy of Visual Studio arrived, and it&amp;#39;s installing now.  This should make hacking around in C sharp a bit more intuitive, and certainly it makes ASP.NET development a heck of a lot easier than it would have been otherwise.  Looks like fourth of July weekend will be given over at least in part to some major hacking, if it isn&amp;#39;t Memorial Day by the time the installer finishes.   The package also included an exam voucher for the &lt;a href=&quot;http://www.microsoft.com/learning/exams/70-536.asp&quot;&gt;Microsoft .NET Framework 2.0—Application Development Foundation&lt;/a&gt;, which I was planning to take anyway.  Pretty cool.&lt;/p&gt;

&lt;p&gt;And heck, thinks are looking up.  We&amp;#39;re on CD 2 already.   Of course, I remember Borland C++ on 21 floppies...&lt;/p&gt;
</description>
				<pubDate>Sat, 01 Jul 2006 15:54:18 -0700</pubDate>
				<link>/visual-studio-arrived</link>
				<guid isPermaLink="true">/visual-studio-arrived</guid>
			</item>
			
		
			
			<item>
				<title>C# Verbatim Strings</title>
				<description>&lt;p&gt;Just doing a bit of hacking with the C Sharp mono compiler this evening.  (I&amp;#39;m waiting for Visual Studio to ship -- what else?).  Meantime I may have found my first error in Donis Marshall&amp;#39;s &lt;a href=&quot;http://www.amazon.com/gp/redirect.html?link_code=ur2&amp;amp;tag=sacramentorea-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;location=http%3A%2F%2Fwww.amazon.com%2Fgp%2Fproduct%2F0735621810%2Fqid%3D1151639146%2Fsr%3D2-1%2Fref%3Dpd_bbs_b_2_1%3Fs%3Dbooks%26v%3Dglance%26n%3D283155&quot;&gt;Programming Microsoft Visual C# 2005:  The Language&lt;/a&gt; -- which doesn&amp;#39;t bode incredibly well given that I&amp;#39;m only on page 23 or so.&lt;/p&gt;

&lt;p&gt;Looking at verbatim strings, Marshall neglects to point out that to escape a string inside a verbatim string you use double quotes, not backslash quote.&lt;/p&gt;

&lt;p&gt;Here&amp;#39;s a braindead example of the right way to do it.  Mono users use mcs VerbatimString.cs to compile.&lt;/p&gt;

&lt;p&gt;`
using System;
using System.Text;&lt;/p&gt;

&lt;p&gt;public class VerbatimStrings
{
    public static void Main()
    {
    String verbatim =&lt;/p&gt;

&lt;p&gt;@&amp;quot;This is a
verbatim string, and it can go
on and on, using &amp;quot;&amp;quot;quote&amp;quot;&amp;quot; characters
etc but everything else
is not escaped, like tab characters, \t
and so forth.&amp;quot;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;System.Console.Write(verbatim);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;}`&lt;/p&gt;

&lt;p&gt;You know, it took about three times as long to write the blog post as it did to figure it out to begin with.  I love trying to write code in HTML.  There should be a wordpress plugin or the like for that...&lt;/p&gt;
</description>
				<pubDate>Thu, 29 Jun 2006 20:44:12 -0700</pubDate>
				<link>/c-verbatim-strings-3</link>
				<guid isPermaLink="true">/c-verbatim-strings-3</guid>
			</item>
			
		
			
			<item>
				<title>.NET Contract in Sacramento Going Well</title>
				<description>&lt;p&gt;The ASP.NET contract I&amp;#39;m doing in Sac is going quite well so far.  It&amp;#39;s a small and really congenial team, and in less than a week I started to make some good progress on some of the code.&lt;/p&gt;

&lt;p&gt;There are some minor hiccups -- development anti-patterns, if you will -- but it doesn&amp;#39;t look like anything too dire.  Some of this involves existing code written by a now-missing contractor,  which is always a delicate matter.  Everyone likes the guy and he&amp;#39;s clearly very sharp in his work, but some of the underlying framework of his that we&amp;#39;re coding too may have a bit of architectural gold plating (which is not so bad in itself except in insofar as it may violate the Pragmatic &amp;quot;DRY&amp;quot; rule).  A little more of a concern is that it may drive our efforts in the wrong direction as far as being fat / difficult to fix (which IS so bad in itself).  Must learn more...&lt;/p&gt;

&lt;p&gt;But that&amp;#39;s just code, which can always be fixed or tossed.  The really tough job -- good management and a team that gets along well -- is already in place.  Without that no amount of code will save you anyway.&lt;/p&gt;

&lt;p&gt;Also, being in Visual Studio again is a treat.  It&amp;#39;s always had a fairly competent debugger -- and let&amp;#39;s face it, as a programmer, that&amp;#39;s home.  I keep a SlickEdit window open for the heavy editorial lifting, of course.  The new SourceSafe integration is flawless so far, too, and that&amp;#39;s quite nice.  I&amp;#39;m starting to get a pretty good feel for ASP.NET.&lt;/p&gt;
</description>
				<pubDate>Wed, 28 Jun 2006 02:00:37 -0700</pubDate>
				<link>/net-contract-in-sacramento-going-well</link>
				<guid isPermaLink="true">/net-contract-in-sacramento-going-well</guid>
			</item>
			
		
			
			<item>
				<title>ASP.NET 2.0 Programming: Hooray, New Gig!</title>
				<description>&lt;p&gt;I&amp;#39;m grateful to my good friends at Robert Half for the exciting gig we&amp;#39;re working on now, developing in ASP.NET 2.0 using Visual Studio 2005 and SQL Server 2005.  I&amp;#39;m very excited to be stepping back into the contract software labor force after a few years putting up web sites and selling houses, and getting back into using Microsoft&amp;#39;s tool set is exciting as well since many of my last major contracts were either Java (which is fine too) or ASP using Delphi -- which is a bit too exotic and unmainstream for my taste.  I like a little job security.&lt;/p&gt;

&lt;p&gt;Actually, after real estate, I wouldn&amp;#39;t mind a LOT of job security, which is why I&amp;#39;m seriously considering just doing .NET alone for the foreseeable future.  Java&amp;#39;s cool enough, but I don&amp;#39;t think it would hurt my current prospects to maybe do some certifications -- and it would certainly help my current client if I threw myself into some spare time .NET hacking in preparation for those certifications, even if in the end I decide the certifications themselves are a superfluous expense.&lt;/p&gt;

&lt;p&gt;So don&amp;#39;t be surprised if a lot of what you read here in the months ahead ends up being about the Road to &lt;a href=&quot;http://www.microsoft.com/learning/mcp/mcts/webapps/&quot;&gt;.NET 2.0 Certification&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Stay tuned.&lt;/p&gt;
</description>
				<pubDate>Sat, 24 Jun 2006 09:55:29 -0700</pubDate>
				<link>/aspnet-20-programming-hooray-new-gig</link>
				<guid isPermaLink="true">/aspnet-20-programming-hooray-new-gig</guid>
			</item>
			
		
			
			<item>
				<title>Saying Goodbye to the Legacy Stuff</title>
				<description>&lt;p&gt;Goodbye.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;General&lt;/strong&gt;
&lt;a href=&quot;/blog/&quot;&gt;Author&amp;#39;s Blog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Legacy&lt;/strong&gt;
&lt;a href=&quot;/Archives.php&quot;&gt;Archives&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Admittedly that was a bit perfunctory, but what the heck.  Happy belated birthday.&lt;/p&gt;
</description>
				<pubDate>Tue, 20 Jun 2006 05:33:39 -0700</pubDate>
				<link>/saying-goodbye-to-the-legacy-stuff</link>
				<guid isPermaLink="true">/saying-goodbye-to-the-legacy-stuff</guid>
			</item>
			
		
			
			<item>
				<title>HP d4100e Review</title>
				<description>&lt;p&gt;My HP d4100e arrived while I was at a &amp;quot;Zoo Overnighter&amp;quot; with my daughter, so naturally I was excited to see the big cardboard box in the living room when I returned, a sign of impending hardware.&lt;/p&gt;

&lt;p&gt;The good:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The unit I purchased was a dual core AMD Athlon 4200, with 2 Gb of RAM, so finally I have a substantial development box to work with here, no cheesy underpowered laptop.  So far I&amp;#39;ve thrown the JBoss Application Server and Eclipse&amp;#39;s Java IDE at it and it took that and 120 meg of Firefox windows in stride.  Performance has been fine, though it&amp;#39;s interesting to note that there are some things about Windows that are just slow anyway.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Other than start-up, which sounds like a brief and minor train wreck, operation is very quiet.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There&amp;#39;s a nice set of included utilities, including PC Doctor and a bunch of junk I haven&amp;#39;t tried out yet.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The bad:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The first day it was set up, with the included wireless mouse and keyboard, I had two fairly nasty hangs of the &amp;quot;hard boot -- pull the plug&amp;quot; variety.  I&amp;#39;m not sure if the mouse and keyboard are really the culprits, but I thought I&amp;#39;d replace them with my wired PS2 ergonomic keyboard and my old mouse to see what I could see.  So far since then I&amp;#39;ve gone through a day with no hangs at all -- knock wood that&amp;#39;s solved.   &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Well, compared to the issue above -- which if unsolved would be a a heart-breaking call support or heaven forbid wrap it up and send it back -- nothing else is really to complain about, but the box is a bit of hefty and large.  In my younger days I&amp;#39;d consider that a benefit, now I no longer need to play inside so I call it a defect.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The system came with a pre-installed 60 day trial of a version of Outlook, Outlook 2003.  No, thanks, I&amp;#39;ll skip the upsell.  My old version serves just fine.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Sun, 28 May 2006 20:59:04 -0700</pubDate>
				<link>/hp-d4100e-review</link>
				<guid isPermaLink="true">/hp-d4100e-review</guid>
			</item>
			
		
			
			<item>
				<title>More on Ruby Programming</title>
				<description>&lt;p&gt;I&amp;#39;ve been digging a little more into Ruby, and I definitely get what the excitement is about.  As a few authors have said, Ruby strikes one as &lt;a href=&quot;http://gnosis.cx/publish/programming/xml_matters_18.html&quot;&gt;Perl done right&lt;/a&gt;.   I loved PERL, even when it was done wrong, so needless to say I&amp;#39;m really having a blast in Ruby.&lt;/p&gt;

&lt;p&gt;If you havent done so yet, I&amp;#39;d encourage you to go up to the &lt;a href=&quot;http://www.ruby-lang.org/en/&quot;&gt;Ruby Web Site&lt;/a&gt;, download Ruby, and check out the Prgagmatic Programmer&amp;#39;s &lt;a href=&quot;http://pragmaticprogrammer.com/titles/ruby/index.html&quot;&gt;Ruby Book&lt;/a&gt; for a great free introduction.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m currently working on automating my real estate business using &lt;a href=&quot;http://www.lickey.com/rubymail/&quot;&gt;Ruby Mail&lt;/a&gt;, and wanted to thank Xinizul for his excellent &lt;a href=&quot;http://rubyforge.org/tracker/index.php?func=detail&amp;amp;aid=2597&amp;amp;group_id=426&amp;amp;atid=1698&quot;&gt;fix for Rubymail on Windows&lt;/a&gt;, which saved me several hours in the debugger.&lt;/p&gt;
</description>
				<pubDate>Tue, 23 May 2006 11:02:48 -0700</pubDate>
				<link>/more-on-ruby-programming</link>
				<guid isPermaLink="true">/more-on-ruby-programming</guid>
			</item>
			
		
			
			<item>
				<title>New Hardware On It’s Way</title>
				<description>&lt;p&gt;Q.  How many computer programmers does it take to screw in a lightbulb?&lt;/p&gt;

&lt;p&gt;A.  None, that&amp;#39;s hardware.&lt;/p&gt;

&lt;p&gt;Well, I finally broke down and decided that it was time to get off this minimalist sales guy laptop I&amp;#39;m using and get some real development hardware in here.  After all, I have to go play API alphabet soup on job interviews, so I want to make sure I can tell an SOA from a POJO.  So I ordered a nice development machine from HP, and it should be here in a couple of weeks -- hopefully less.&lt;/p&gt;

&lt;p&gt;Talking to a friend from my VSP / Synergex days today, looks like I can still hold my own fairly well on the technobabble.  But there are a number of things I never tried out, back in the day, and a few things that have either developed or appeared since.  Time to start hacking again -- hooray!&lt;/p&gt;

&lt;p&gt;And by the way, apropos the acronyms, the fact that now we have an acronym for the Plain Old Java Objects we should have been coding in all along is fairly amusing.  Unfortunately I&amp;#39;m still seeing statements of work for the Dark Side of the Force -- EJBs, of course -- so it&amp;#39;s a little to early to make a stand on the virtue of simplicity.&lt;/p&gt;
</description>
				<pubDate>Thu, 18 May 2006 16:33:20 -0700</pubDate>
				<link>/new-hardware-on-its-way</link>
				<guid isPermaLink="true">/new-hardware-on-its-way</guid>
			</item>
			
		
			
			<item>
				<title>Ruby on Rails</title>
				<description>&lt;p&gt;Of course, now that I&amp;#39;m brushing off my software hat -- a four-prop beanie, presumably -- I&amp;#39;m opening Dr. Dobb&amp;#39;s Journal when it comes in the mail.  The lastest edition talks about the buzz surrounding Ruby on Rails.&lt;/p&gt;

&lt;p&gt;To be sure, there&amp;#39;s a fair amount of hype in Dr. Dobbs about this language / enviornment.  Moreover,  quick search on Dice shows that it&amp;#39;s a bit too early to declare it &amp;quot;Java&amp;#39;s Successor&amp;quot; just yet.&lt;/p&gt;

&lt;p&gt;To praphrase the Monkees, however:  &amp;quot;But then I saw the videos.  Now I&amp;#39;m a Believer&amp;quot;.  Check out the &lt;a href=&quot;http://www.rubyonrails.com/screencasts&quot;&gt;Ruby on Rails Screencasts &lt;/a&gt; for yourself.  Building a web log in 15 minutes was fun, but I especially liked &amp;quot;Evolving your database schema without a sweat&amp;quot;.&lt;/p&gt;

&lt;p&gt;This is seriously cool stuff, even if Java&amp;#39;s still beating it by a clean 14370 keyword hits to 26.  What is this, some kind of popularity contest?&lt;/p&gt;

&lt;p&gt;Well, for cash flow purposes at least:  Yep.&lt;/p&gt;
</description>
				<pubDate>Wed, 17 May 2006 17:12:19 -0700</pubDate>
				<link>/ruby-on-rails</link>
				<guid isPermaLink="true">/ruby-on-rails</guid>
			</item>
			
		
			
			<item>
				<title>Programming in Sacramento</title>
				<description>&lt;p&gt;Well, it&amp;#39;s time to order a nice speedy computer so we can load it up with the sort of slow software that people will pay you to work on.  Interestingly enough, functional open source works great for the self-employed, but to work in the software you have to have at least a grudging aquaintance with some bloated commercial apps.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s been awhile.&lt;/p&gt;

&lt;p&gt;At one time, that&amp;#39;s all we did at ParticleWave -- go find software contractor positions and work on them.&lt;/p&gt;

&lt;p&gt;So we&amp;#39;ll be getting back to that, and having more to say about Java in the weeks ahead, especially focusing on struts, EJBs, and other good stuff with a level of complexity sufficient to satsify the complexity-junky programmers who are advising the managers who are making the hiring decisions.  As a wise man told me when I was very, very new to the software business -- &amp;quot;learn something that looks hard, because people will pay you more to do it.&amp;quot;&lt;/p&gt;
</description>
				<pubDate>Wed, 17 May 2006 10:29:32 -0700</pubDate>
				<link>/programming-in-sacramento</link>
				<guid isPermaLink="true">/programming-in-sacramento</guid>
			</item>
			
		
			
			<item>
				<title>Seven Deadly Reciprocal Linking Sins</title>
				<description>&lt;p&gt;After every major Google update, it seems, someone will come out with a new obituary, announcing the death of reciprocal linking.  And it&amp;#39;s true that in recent years, Google seems to have downplayed reciprocal linking in their algorithm.  Yet for all of that, reciprocal linking is alive and well.&lt;/p&gt;

&lt;p&gt;There are several reasons why reciprocal linking survives.  First, though they are the biggest game in town, Google is certainly not the only game, and Yahoo and MSN continue to put significant weight on reciprocal links.  Secondly, the search engines aren&amp;#39;t the only reason to link -- you can also expect some traffic directly from the link itself.  Finally, even in the case of Google, all is not lost.  Though they have downplayed reciprocal linking, there doesn&amp;#39;t seem to be too much evidence to suggest that Google actively penalizes them.  (That said, you should read their &lt;a href=&quot;http://www.google.com/webmasters/guidelines.html&quot;&gt;webmaster guidelines&lt;/a&gt; for specific advice.)&lt;/p&gt;

&lt;p&gt;As with anything else related to your web site traffic, however, it&amp;#39;s important to have some guidelines before setting out.   Too often we see Realtors® doing reciprocal linking in a way that will give them less benefit, or no benefit at all.  Here are specific mistakes we think you should avoid when you set out to include a link directory on your site:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Having all your links on one page, or too few pages&lt;/strong&gt;.  Google recommends that you keep your links to a &amp;quot;reasonable&amp;quot; number, fewer than 100 per page.  Unfortunately many of the link directories set up on Z57 and Advanced Access sites that have linked to us violate that very rule.  It may be that those sites can be configured differently.  The custom sites we offer solve this problem by automatically limiting the number of links per page.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Linking to all comers, part I:  &amp;quot;bad neighborhoods&amp;quot;&lt;/strong&gt;.   Google suggests you should avoid links to web spammers and bad neighborhoods.   At the very least, it&amp;#39;s worthwhile to see if the site has been banned by Google.  Go to Google and type in &amp;quot;site:www.potentialpartner.com&amp;quot; (substituting the real main web site address for your potential partner, of course).  You should see something like &amp;quot;Results 1 - 10 of about [some number] from www.potentiallinkpartner.com&amp;quot;.  If Google isn&amp;#39;t indexing anything at all, then either the site is brand new and not indexed yet (wait), or it has been banned (don&amp;#39;t reciprocate).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Linking to all comers, part II:  no theme&lt;/strong&gt;.  Your goal in linking to other sites is partially to get other sites linking back, but also you want to establish -- both for the search engines and your users -- a reputation as an authority on real estate.   Yes, that texas holdem site may link back to you, but so what?  How is that related to your theme, and what does it say about your site that you link to it?  Your focus should be first and foremost on real estate, and secondarily on related topics (local resources, real estate finance, lenders, etc.)  Ask yourself:  would a user of my site (someone moving or an investor) potentially find this of interest?  If the answer is no, don&amp;#39;t swap links.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Linking to all comers, part III:  no quality control&lt;/strong&gt;.   A site can be indexed by the search engines and be related to real estate, and still fail to be a site you should link to.   I&amp;#39;m not talking about becoming the ultimate web site critic, but you should have a few basic standards in place.  I personally want to see some sort of unique content, not just a link directory, and especially not just a link directory with a bunch of affiliate marketing / adsense ads.   Again, would a user of your site be interested in a bunch of links and some advertising?  If not, why are you linking to it?  I prefer sites that are established.  If they&amp;#39;re new, I at least like them to look like they&amp;#39;re not under construction.  I definitely don&amp;#39;t mind cosmetically unusual sites from fellow Realtors® -- often these home grown sites have the most real interesting content, even if some look a bit odd.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Paying no attention to search engines&lt;/strong&gt;.  I often copy the page the webmaster offers to link to me from into Google, Yahoo, and MSN.  I like to see that my link will appear on a page that&amp;#39;s indexed by at least one of the major engines, or if the quality of the site is borderline, I like it to be indexed by two or more.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Paying too much attention to search engines&lt;/strong&gt;.  On the other extreme from being oblivious to search are those link partners who approach me with something like  &amp;quot;I have a PR6 site and will link from a PR4 page in exchange for a link on your PR3 page here and your PR2 page here&amp;quot;.   Forget page rank -- focus on quality links to and from quality sites.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ignoring link text&lt;/strong&gt;.   Link text is the text that appears underlined when the link is published, and tells users whether they&amp;#39;re linking to &lt;em&gt;Peggy Sue McFeelgood&lt;/em&gt; or &lt;em&gt;South Carolina Real Estate&lt;/em&gt;.  We feel that -- in general -- the text of the link should match the title text of the page you&amp;#39;re linking to, and this should match the keyword you want to target.   At the other extreme, however, having every single site that links to you link to the same page with the same keyword text may appear like an attempt to spam the engine, so don&amp;#39;t overdo it.  We will sometimes alternate betweeen keyword phrases, and if a webmaster uses URLs for link text instead of keyword phrases, we&amp;#39;ll ask for those links, too.  Also, if a webmaster gets the link text &amp;quot;wrong&amp;quot;, we frequently will let it go.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
				<pubDate>Sun, 23 Apr 2006 21:12:15 -0700</pubDate>
				<link>/seven-deadly-reciprocal-linking-sins</link>
				<guid isPermaLink="true">/seven-deadly-reciprocal-linking-sins</guid>
			</item>
			
		
			
			<item>
				<title>Real Estate Video Marketing</title>
				<description>&lt;p&gt;We&amp;#39;re starting to explore the video and audio to get our sellers&amp;#39; homes sold and the message out about our team.   Two trends have come together to make this a good time to get into this.  First, most homes that have Internet now have high speed connections, cable modems or DSL.  Secondly, DVD players have come down in price and are now nearly ubiquitous, and media is becoming more inexpensive, allowing us to use the same message in multiple ways.&lt;/p&gt;

&lt;p&gt;We&amp;#39;re working with a local firm to produce a DVD to help sellers whose listings have expired without selling to understand what they need to do to get their home sold.  Our target date for that is April.&lt;/p&gt;

&lt;p&gt;Meantime, we have our first work product, a little 30-second spot showing how our search results help market our sellers&amp;#39; homes.  Check it out below. (I know, it&amp;#39;s not exactly Cecil B. DeMille, but give me a break, it&amp;#39;s my first one).                                                                       &lt;/p&gt;
</description>
				<pubDate>Sat, 07 Jan 2006 11:11:59 -0800</pubDate>
				<link>/expired-video-a-bare-beachhead</link>
				<guid isPermaLink="true">/expired-video-a-bare-beachhead</guid>
			</item>
			
		
	</channel>
</rss>